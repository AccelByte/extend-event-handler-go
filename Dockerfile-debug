FROM --platform=$BUILDPLATFORM rvolosatovs/protoc:4.0.0 as proto
WORKDIR /build
COPY pkg/proto pkg/proto
RUN mkdir -p pkg/pb
RUN protoc --proto_path=pkg/proto \
            --go_out=pkg/pb \
            --go_opt=paths=source_relative \
            --go-grpc_out=pkg/pb \
            --go-grpc_opt=paths=source_relative \
            pkg/proto/accelbyte-async-api/iam/oauth/v1/*.proto

FROM --platform=$BUILDPLATFORM golang:1.20-alpine as builder
ARG TARGETOS
ARG TARGETARCH
# Install delve
RUN go install github.com/go-delve/delve/cmd/dlv@latest

# Display GOPATH
RUN go env GOPATH
RUN echo $GOPATH

WORKDIR /build
COPY go.mod go.sum ./
RUN go mod download
COPY . .
COPY --from=proto /build/pkg/pb pkg/pb
RUN env GOOS=$TARGETOS GOARCH=$TARGETARCH go build -gcflags="all=-N -l" -o extend-grpc-event-handler_$TARGETOS-$TARGETARCH


FROM alpine:3.17.0
ARG TARGETOS
ARG TARGETARCH
WORKDIR /app
#ADD data data
COPY --from=builder /build/extend-grpc-event-handler_$TARGETOS-$TARGETARCH extend-grpc-event-handler
COPY --from=builder /go/bin/dlv dlv
# Plugin arch gRPC server port
EXPOSE 6565
# Prometheus /metrics web server port
EXPOSE 8080
#CMD [ "/app/extend-grpc-event-handler" ]
CMD ["/app/dlv", "exec", "/app/extend-grpc-event-handler", "--headless", "--continue", "--accept-multiclient", "--api-version=2", "--listen=:40001"]
