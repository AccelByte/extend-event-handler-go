// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: IAM/AsyncAPI/rbac.yaml (0.1.0)
// hash: 1aeb8c915acaa94e321b129462d0a16b64434587

syntax = "proto3";

package accelbyte.iam.rbac.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/empty.proto";


// --- options ---

option csharp_namespace = "AccelByte.IAM.Rbac";
option go_package = "accelbyte.net/iam/rbac";
option java_multiple_files = true;
option java_package = "net.accelbyte.iam.rbac";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1;
    int64 version = 2;
    string name = 3;
    string namespace = 4;
    string parentNamespace = 5;
    string timestamp = 6;
    string clientId = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
}

// path: #/components/schemas/permissions
message Permissions {
    string resoure = 1;
    string action = 2;
    int64 schedAction = 3;
    string schedCron = 4;
    repeated string schedRange = 5;
}

// path: #/components/schemas/role
message Role {
    string roleId = 1;
    string name = 2;
    bool admin = 3;
    bool roleIsWildcard = 4;
}

// path: #/components/schemas/roleManager
message RoleManager {
    string userId = 1;
    string namespace = 2;
    string displayName = 3;
}

// path: #/components/schemas/roleMember
message RoleMember {
    string userId = 1;
    string namespace = 2;
    string displayName = 3;
}

// path: #/components/messages/roleCreated/payload/properties/payload
message AnonymousSchema1 {
    Role role = 1;
}

// path: #/components/messages/roleCreated/payload
message RoleCreatedMessage {
    AnonymousSchema1 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleDeleted/payload/properties/payload
message AnonymousSchema2 {
    Role role = 1;
}

// path: #/components/messages/roleDeleted/payload
message RoleDeletedMessage {
    AnonymousSchema2 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleUpdated/payload/properties/payload
message AnonymousSchema3 {
    Role role = 1;
}

// path: #/components/messages/roleUpdated/payload
message RoleUpdatedMessage {
    AnonymousSchema3 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/rolePermissionCreated/payload/properties/payload
message AnonymousSchema4 {
    Role role = 1;
    repeated Permissions permissions = 2;
}

// path: #/components/messages/rolePermissionCreated/payload
message RolePermissionCreatedMessage {
    AnonymousSchema4 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/rolePermissionDeleted/payload/properties/payload
message AnonymousSchema5 {
    Role role = 1;
    repeated Permissions permissions = 2;
}

// path: #/components/messages/rolePermissionDeleted/payload
message RolePermissionDeletedMessage {
    AnonymousSchema5 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/rolePermissionUpdated/payload/properties/payload
message AnonymousSchema6 {
    Role role = 1;
    repeated Permissions permissions = 2;
}

// path: #/components/messages/rolePermissionUpdated/payload
message RolePermissionUpdatedMessage {
    AnonymousSchema6 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleManagerCreated/payload/properties/payload
message AnonymousSchema7 {
    Role role = 1;
    repeated RoleManager roleManager = 2;
}

// path: #/components/messages/roleManagerCreated/payload
message RoleManagerCreatedMessage {
    AnonymousSchema7 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleManagerDeleted/payload/properties/payload
message AnonymousSchema8 {
    Role role = 1;
    repeated RoleManager roleManager = 2;
}

// path: #/components/messages/roleManagerDeleted/payload
message RoleManagerDeletedMessage {
    AnonymousSchema8 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleMemberCreated/payload/properties/payload
message AnonymousSchema9 {
    Role role = 1;
    repeated RoleMember roleMember = 2;
}

// path: #/components/messages/roleMemberCreated/payload
message RoleMemberCreatedMessage {
    AnonymousSchema9 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleMemberDeleted/payload/properties/payload
message AnonymousSchema10 {
    Role role = 1;
    repeated RoleMember roleMember = 2;
}

// path: #/components/messages/roleMemberDeleted/payload
message RoleMemberDeletedMessage {
    AnonymousSchema10 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}


// --- #/components/messages/{message_name} ---


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/role/publish/message
message RolePublishMessage {
    oneof payload {
        RoleCreatedMessage variant0 = 1;
        RoleDeletedMessage variant1 = 2;
        RoleUpdatedMessage variant2 = 3;
    }
}

// path: #/channels/rolePermissions/publish/message
message RolePermissionsPublishMessage {
    oneof payload {
        RolePermissionCreatedMessage variant0 = 1;
        RolePermissionDeletedMessage variant1 = 2;
        RolePermissionUpdatedMessage variant2 = 3;
    }
}

// path: #/channels/roleManager/publish/message
message RoleManagerPublishMessage {
    oneof payload {
        RoleManagerCreatedMessage variant0 = 1;
        RoleManagerDeletedMessage variant1 = 2;
    }
}

// path: #/channels/roleMember/publish/message
message RoleMemberPublishMessage {
    oneof payload {
        RoleMemberCreatedMessage variant0 = 1;
        RoleMemberDeletedMessage variant1 = 2;
    }
}


// --- service ---

service IAMServiceRBACEvents {
    // Role Channel

    // Publishes a message to the Role channel.
    rpc PublishToRoleChannel(RolePublishMessage) returns (google.protobuf.Empty);

    // Publishes a RoleCreatedMessage to the Role channel. (oneOf variant)
    rpc PublishRoleCreatedMessageToRoleChannel(RoleCreatedMessage) returns (google.protobuf.Empty);

    // Publishes a RoleDeletedMessage to the Role channel. (oneOf variant)
    rpc PublishRoleDeletedMessageToRoleChannel(RoleDeletedMessage) returns (google.protobuf.Empty);

    // Publishes a RoleUpdatedMessage to the Role channel. (oneOf variant)
    rpc PublishRoleUpdatedMessageToRoleChannel(RoleUpdatedMessage) returns (google.protobuf.Empty);

    // Role Permissions Channel

    // Publishes a message to the Role Permissions channel.
    rpc PublishToRolePermissionsChannel(RolePermissionsPublishMessage) returns (google.protobuf.Empty);

    // Publishes a RolePermissionCreatedMessage to the Role Permissions channel. (oneOf variant)
    rpc PublishRolePermissionCreatedMessageToRolePermissionsChannel(RolePermissionCreatedMessage) returns (google.protobuf.Empty);

    // Publishes a RolePermissionDeletedMessage to the Role Permissions channel. (oneOf variant)
    rpc PublishRolePermissionDeletedMessageToRolePermissionsChannel(RolePermissionDeletedMessage) returns (google.protobuf.Empty);

    // Publishes a RolePermissionUpdatedMessage to the Role Permissions channel. (oneOf variant)
    rpc PublishRolePermissionUpdatedMessageToRolePermissionsChannel(RolePermissionUpdatedMessage) returns (google.protobuf.Empty);

    // Role Manager Channel

    // Publishes a message to the Role Manager channel.
    rpc PublishToRoleManagerChannel(RoleManagerPublishMessage) returns (google.protobuf.Empty);

    // Publishes a RoleManagerCreatedMessage to the Role Manager channel. (oneOf variant)
    rpc PublishRoleManagerCreatedMessageToRoleManagerChannel(RoleManagerCreatedMessage) returns (google.protobuf.Empty);

    // Publishes a RoleManagerDeletedMessage to the Role Manager channel. (oneOf variant)
    rpc PublishRoleManagerDeletedMessageToRoleManagerChannel(RoleManagerDeletedMessage) returns (google.protobuf.Empty);

    // Role Member Channel

    // Publishes a message to the Role Member channel.
    rpc PublishToRoleMemberChannel(RoleMemberPublishMessage) returns (google.protobuf.Empty);

    // Publishes a RoleMemberCreatedMessage to the Role Member channel. (oneOf variant)
    rpc PublishRoleMemberCreatedMessageToRoleMemberChannel(RoleMemberCreatedMessage) returns (google.protobuf.Empty);

    // Publishes a RoleMemberDeletedMessage to the Role Member channel. (oneOf variant)
    rpc PublishRoleMemberDeletedMessageToRoleMemberChannel(RoleMemberDeletedMessage) returns (google.protobuf.Empty);
}
