// Copyright (c) 2025 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: IAM/AsyncAPI/account.yaml (0.1.0)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.9
// source: accelbyte-asyncapi/iam/account/v1/account.proto

package account

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// path: #/components/schemas/event
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,5,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,7,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,9,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,10,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Event) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *Event) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Event) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Event) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Event) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *Event) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/schemas/permissions
type Permissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resoure string `protobuf:"bytes,1,opt,name=resoure,proto3" json:"resoure,omitempty"`
	Action  string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	// Deprecated: Marked as deprecated in accelbyte-asyncapi/iam/account/v1/account.proto.
	SchedAction int64 `protobuf:"varint,3,opt,name=sched_action,json=SchedAction,proto3" json:"sched_action,omitempty"`
	// Deprecated: Marked as deprecated in accelbyte-asyncapi/iam/account/v1/account.proto.
	SchedCron string `protobuf:"bytes,4,opt,name=sched_cron,json=SchedCron,proto3" json:"sched_cron,omitempty"`
	// Deprecated: Marked as deprecated in accelbyte-asyncapi/iam/account/v1/account.proto.
	SchedRange []string `protobuf:"bytes,5,rep,name=sched_range,json=SchedRange,proto3" json:"sched_range,omitempty"`
}

func (x *Permissions) Reset() {
	*x = Permissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{1}
}

func (x *Permissions) GetResoure() string {
	if x != nil {
		return x.Resoure
	}
	return ""
}

func (x *Permissions) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Deprecated: Marked as deprecated in accelbyte-asyncapi/iam/account/v1/account.proto.
func (x *Permissions) GetSchedAction() int64 {
	if x != nil {
		return x.SchedAction
	}
	return 0
}

// Deprecated: Marked as deprecated in accelbyte-asyncapi/iam/account/v1/account.proto.
func (x *Permissions) GetSchedCron() string {
	if x != nil {
		return x.SchedCron
	}
	return ""
}

// Deprecated: Marked as deprecated in accelbyte-asyncapi/iam/account/v1/account.proto.
func (x *Permissions) GetSchedRange() []string {
	if x != nil {
		return x.SchedRange
	}
	return nil
}

// path: #/components/schemas/userAuthentication
type UserAuthentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId                 string `protobuf:"bytes,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	Refresh                    bool   `protobuf:"varint,2,opt,name=refresh,proto3" json:"refresh,omitempty"`
	PlatformUserId             string `protobuf:"bytes,3,opt,name=platform_user_id,json=platformUserId,proto3" json:"platform_user_id,omitempty"`
	SimultaneousPlatformId     string `protobuf:"bytes,4,opt,name=simultaneous_platform_id,json=simultaneousPlatformId,proto3" json:"simultaneous_platform_id,omitempty"`
	SimultaneousPlatformUserId string `protobuf:"bytes,5,opt,name=simultaneous_platform_user_id,json=simultaneousPlatformUserId,proto3" json:"simultaneous_platform_user_id,omitempty"`
}

func (x *UserAuthentication) Reset() {
	*x = UserAuthentication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAuthentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthentication) ProtoMessage() {}

func (x *UserAuthentication) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthentication.ProtoReflect.Descriptor instead.
func (*UserAuthentication) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{2}
}

func (x *UserAuthentication) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *UserAuthentication) GetRefresh() bool {
	if x != nil {
		return x.Refresh
	}
	return false
}

func (x *UserAuthentication) GetPlatformUserId() string {
	if x != nil {
		return x.PlatformUserId
	}
	return ""
}

func (x *UserAuthentication) GetSimultaneousPlatformId() string {
	if x != nil {
		return x.SimultaneousPlatformId
	}
	return ""
}

func (x *UserAuthentication) GetSimultaneousPlatformUserId() string {
	if x != nil {
		return x.SimultaneousPlatformUserId
	}
	return ""
}

// path: #/components/schemas/userAuthenticationFailed
type UserAuthenticationFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category   string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	ClientName string `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	Country    string `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Detail     string `protobuf:"bytes,4,opt,name=detail,proto3" json:"detail,omitempty"`
	Platform   string `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *UserAuthenticationFailed) Reset() {
	*x = UserAuthenticationFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAuthenticationFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthenticationFailed) ProtoMessage() {}

func (x *UserAuthenticationFailed) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthenticationFailed.ProtoReflect.Descriptor instead.
func (*UserAuthenticationFailed) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{3}
}

func (x *UserAuthenticationFailed) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UserAuthenticationFailed) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *UserAuthenticationFailed) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserAuthenticationFailed) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *UserAuthenticationFailed) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

// path: #/components/schemas/userAccount
type UserAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmailAddress string `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	UserName     string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Country      string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Namespace    string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PlatformId   string `protobuf:"bytes,6,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	DisplayName  string `protobuf:"bytes,7,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *UserAccount) Reset() {
	*x = UserAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccount) ProtoMessage() {}

func (x *UserAccount) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccount.ProtoReflect.Descriptor instead.
func (*UserAccount) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{4}
}

func (x *UserAccount) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccount) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *UserAccount) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserAccount) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserAccount) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccount) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *UserAccount) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

// path: #/components/schemas/userTestAccountGameDataItem
type UserTestAccountGameDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameUserId    string `protobuf:"bytes,1,opt,name=game_user_id,json=gameUserId,proto3" json:"game_user_id,omitempty"`
	GameNamespace string `protobuf:"bytes,2,opt,name=game_namespace,json=gameNamespace,proto3" json:"game_namespace,omitempty"`
}

func (x *UserTestAccountGameDataItem) Reset() {
	*x = UserTestAccountGameDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTestAccountGameDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTestAccountGameDataItem) ProtoMessage() {}

func (x *UserTestAccountGameDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTestAccountGameDataItem.ProtoReflect.Descriptor instead.
func (*UserTestAccountGameDataItem) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{5}
}

func (x *UserTestAccountGameDataItem) GetGameUserId() string {
	if x != nil {
		return x.GameUserId
	}
	return ""
}

func (x *UserTestAccountGameDataItem) GetGameNamespace() string {
	if x != nil {
		return x.GameNamespace
	}
	return ""
}

// path: #/components/schemas/userTestAccount
type UserTestAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string                         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmailAddress string                         `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	UserName     string                         `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Country      string                         `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Namespace    string                         `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TestAccount  bool                           `protobuf:"varint,6,opt,name=test_account,json=testAccount,proto3" json:"test_account,omitempty"`
	GameData     []*UserTestAccountGameDataItem `protobuf:"bytes,7,rep,name=game_data,json=gameData,proto3" json:"game_data,omitempty"`
}

func (x *UserTestAccount) Reset() {
	*x = UserTestAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTestAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTestAccount) ProtoMessage() {}

func (x *UserTestAccount) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTestAccount.ProtoReflect.Descriptor instead.
func (*UserTestAccount) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{6}
}

func (x *UserTestAccount) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserTestAccount) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *UserTestAccount) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserTestAccount) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserTestAccount) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserTestAccount) GetTestAccount() bool {
	if x != nil {
		return x.TestAccount
	}
	return false
}

func (x *UserTestAccount) GetGameData() []*UserTestAccountGameDataItem {
	if x != nil {
		return x.GameData
	}
	return nil
}

// path: #/components/schemas/userGameAccount
type UserGameAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmailAddress  string `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	GameNamespace string `protobuf:"bytes,3,opt,name=game_namespace,json=gameNamespace,proto3" json:"game_namespace,omitempty"`
	Country       string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	TestAccount   bool   `protobuf:"varint,5,opt,name=test_account,json=testAccount,proto3" json:"test_account,omitempty"`
}

func (x *UserGameAccount) Reset() {
	*x = UserGameAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGameAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGameAccount) ProtoMessage() {}

func (x *UserGameAccount) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGameAccount.ProtoReflect.Descriptor instead.
func (*UserGameAccount) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{7}
}

func (x *UserGameAccount) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserGameAccount) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *UserGameAccount) GetGameNamespace() string {
	if x != nil {
		return x.GameNamespace
	}
	return ""
}

func (x *UserGameAccount) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserGameAccount) GetTestAccount() bool {
	if x != nil {
		return x.TestAccount
	}
	return false
}

// path: #/components/schemas/userAccountStatus
type UserAccountStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletionStatus bool `protobuf:"varint,1,opt,name=deletion_status,json=deletionStatus,proto3" json:"deletion_status,omitempty"`
	Enabled        bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Verified       bool `protobuf:"varint,3,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *UserAccountStatus) Reset() {
	*x = UserAccountStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountStatus) ProtoMessage() {}

func (x *UserAccountStatus) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountStatus.ProtoReflect.Descriptor instead.
func (*UserAccountStatus) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{8}
}

func (x *UserAccountStatus) GetDeletionStatus() bool {
	if x != nil {
		return x.DeletionStatus
	}
	return false
}

func (x *UserAccountStatus) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UserAccountStatus) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

// path: #/components/schemas/userAccountBanItem
type UserAccountBanItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BanId           string `protobuf:"bytes,1,opt,name=ban_id,json=banId,proto3" json:"ban_id,omitempty"`
	TargetNamespace string `protobuf:"bytes,2,opt,name=target_namespace,json=targetNamespace,proto3" json:"target_namespace,omitempty"`
	TargetUserId    string `protobuf:"bytes,3,opt,name=target_user_id,json=targetUserId,proto3" json:"target_user_id,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Reason          string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	Comment         string `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	Enabled         bool   `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	EndDate         string `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *UserAccountBanItem) Reset() {
	*x = UserAccountBanItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountBanItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountBanItem) ProtoMessage() {}

func (x *UserAccountBanItem) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountBanItem.ProtoReflect.Descriptor instead.
func (*UserAccountBanItem) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{9}
}

func (x *UserAccountBanItem) GetBanId() string {
	if x != nil {
		return x.BanId
	}
	return ""
}

func (x *UserAccountBanItem) GetTargetNamespace() string {
	if x != nil {
		return x.TargetNamespace
	}
	return ""
}

func (x *UserAccountBanItem) GetTargetUserId() string {
	if x != nil {
		return x.TargetUserId
	}
	return ""
}

func (x *UserAccountBanItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountBanItem) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UserAccountBanItem) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UserAccountBanItem) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UserAccountBanItem) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

// path: #/components/schemas/userAccountBan
type UserAccountBan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ban []*UserAccountBanItem `protobuf:"bytes,1,rep,name=ban,proto3" json:"ban,omitempty"`
}

func (x *UserAccountBan) Reset() {
	*x = UserAccountBan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountBan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountBan) ProtoMessage() {}

func (x *UserAccountBan) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountBan.ProtoReflect.Descriptor instead.
func (*UserAccountBan) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{10}
}

func (x *UserAccountBan) GetBan() []*UserAccountBanItem {
	if x != nil {
		return x.Ban
	}
	return nil
}

// path: #/components/schemas/userInformation
type UserInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName       string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Username          string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Country           string `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Language          string `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	DateOfBirth       string `protobuf:"bytes,5,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	UniqueDisplayName string `protobuf:"bytes,6,opt,name=unique_display_name,json=uniqueDisplayName,proto3" json:"unique_display_name,omitempty"`
}

func (x *UserInformation) Reset() {
	*x = UserInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformation) ProtoMessage() {}

func (x *UserInformation) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformation.ProtoReflect.Descriptor instead.
func (*UserInformation) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{11}
}

func (x *UserInformation) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserInformation) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInformation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserInformation) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UserInformation) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *UserInformation) GetUniqueDisplayName() string {
	if x != nil {
		return x.UniqueDisplayName
	}
	return ""
}

// path: #/components/schemas/role
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{12}
}

func (x *Role) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// path: #/components/schemas/countryAgeRestriction
type CountryAgeRestriction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country       string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	RestrictedAge int64  `protobuf:"varint,2,opt,name=restricted_age,json=restrictedAge,proto3" json:"restricted_age,omitempty"`
}

func (x *CountryAgeRestriction) Reset() {
	*x = CountryAgeRestriction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryAgeRestriction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryAgeRestriction) ProtoMessage() {}

func (x *CountryAgeRestriction) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryAgeRestriction.ProtoReflect.Descriptor instead.
func (*CountryAgeRestriction) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{13}
}

func (x *CountryAgeRestriction) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CountryAgeRestriction) GetRestrictedAge() int64 {
	if x != nil {
		return x.RestrictedAge
	}
	return 0
}

// path: #/components/schemas/thirdParty
type ThirdParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ThirdPartyUserId string `protobuf:"bytes,2,opt,name=third_party_user_id,json=thirdPartyUserId,proto3" json:"third_party_user_id,omitempty"`
	PlatformId       string `protobuf:"bytes,3,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	Namespace        string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	DisplayName      string `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Country          string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	EmailAddress     string `protobuf:"bytes,7,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
}

func (x *ThirdParty) Reset() {
	*x = ThirdParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdParty) ProtoMessage() {}

func (x *ThirdParty) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdParty.ProtoReflect.Descriptor instead.
func (*ThirdParty) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{14}
}

func (x *ThirdParty) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ThirdParty) GetThirdPartyUserId() string {
	if x != nil {
		return x.ThirdPartyUserId
	}
	return ""
}

func (x *ThirdParty) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *ThirdParty) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ThirdParty) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ThirdParty) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ThirdParty) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

// path: #/components/schemas/platform
type Platform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameNamespace string `protobuf:"bytes,1,opt,name=game_namespace,json=gameNamespace,proto3" json:"game_namespace,omitempty"`
	GameUserId    string `protobuf:"bytes,2,opt,name=game_user_id,json=gameUserId,proto3" json:"game_user_id,omitempty"`
	Country       string `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	TestAccount   bool   `protobuf:"varint,4,opt,name=test_account,json=testAccount,proto3" json:"test_account,omitempty"`
}

func (x *Platform) Reset() {
	*x = Platform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform) ProtoMessage() {}

func (x *Platform) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform.ProtoReflect.Descriptor instead.
func (*Platform) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{15}
}

func (x *Platform) GetGameNamespace() string {
	if x != nil {
		return x.GameNamespace
	}
	return ""
}

func (x *Platform) GetGameUserId() string {
	if x != nil {
		return x.GameUserId
	}
	return ""
}

func (x *Platform) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Platform) GetTestAccount() bool {
	if x != nil {
		return x.TestAccount
	}
	return false
}

// path: #/components/schemas/userFeatureBan
type UserFeatureBan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Ban       string `protobuf:"bytes,3,opt,name=ban,proto3" json:"ban,omitempty"`
	EndDate   string `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Reason    string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	Enable    bool   `protobuf:"varint,6,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *UserFeatureBan) Reset() {
	*x = UserFeatureBan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFeatureBan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFeatureBan) ProtoMessage() {}

func (x *UserFeatureBan) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFeatureBan.ProtoReflect.Descriptor instead.
func (*UserFeatureBan) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{16}
}

func (x *UserFeatureBan) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserFeatureBan) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserFeatureBan) GetBan() string {
	if x != nil {
		return x.Ban
	}
	return ""
}

func (x *UserFeatureBan) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *UserFeatureBan) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UserFeatureBan) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

// path: #/components/schemas/deletionGDPR
type DeletionGDPR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	EventId   int64  `protobuf:"varint,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Code      int64  `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Message   string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeletionGDPR) Reset() {
	*x = DeletionGDPR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletionGDPR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletionGDPR) ProtoMessage() {}

func (x *DeletionGDPR) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletionGDPR.ProtoReflect.Descriptor instead.
func (*DeletionGDPR) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{17}
}

func (x *DeletionGDPR) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeletionGDPR) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeletionGDPR) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *DeletionGDPR) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeletionGDPR) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// path: #/components/schemas/userAccountThirdParty
type UserAccountThirdParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId     string `protobuf:"bytes,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	PlatformUserId string `protobuf:"bytes,2,opt,name=platform_user_id,json=platformUserId,proto3" json:"platform_user_id,omitempty"`
	Platform       string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *UserAccountThirdParty) Reset() {
	*x = UserAccountThirdParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountThirdParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountThirdParty) ProtoMessage() {}

func (x *UserAccountThirdParty) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountThirdParty.ProtoReflect.Descriptor instead.
func (*UserAccountThirdParty) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{18}
}

func (x *UserAccountThirdParty) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *UserAccountThirdParty) GetPlatformUserId() string {
	if x != nil {
		return x.PlatformUserId
	}
	return ""
}

func (x *UserAccountThirdParty) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

// path: #/components/schemas/userAccountThirdPartyLink
type UserAccountThirdPartyLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId          string `protobuf:"bytes,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	PlatformUserId      string `protobuf:"bytes,2,opt,name=platform_user_id,json=platformUserId,proto3" json:"platform_user_id,omitempty"`
	PlatformDisplayName string `protobuf:"bytes,3,opt,name=platform_display_name,json=platformDisplayName,proto3" json:"platform_display_name,omitempty"`
}

func (x *UserAccountThirdPartyLink) Reset() {
	*x = UserAccountThirdPartyLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountThirdPartyLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountThirdPartyLink) ProtoMessage() {}

func (x *UserAccountThirdPartyLink) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountThirdPartyLink.ProtoReflect.Descriptor instead.
func (*UserAccountThirdPartyLink) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{19}
}

func (x *UserAccountThirdPartyLink) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *UserAccountThirdPartyLink) GetPlatformUserId() string {
	if x != nil {
		return x.PlatformUserId
	}
	return ""
}

func (x *UserAccountThirdPartyLink) GetPlatformDisplayName() string {
	if x != nil {
		return x.PlatformDisplayName
	}
	return ""
}

// path: #/components/schemas/userAccountLink
type UserAccountLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace          string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId             string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmailAddress       string `protobuf:"bytes,3,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	TestAccount        bool   `protobuf:"varint,4,opt,name=test_account,json=testAccount,proto3" json:"test_account,omitempty"`
	PublisherNamespace string `protobuf:"bytes,5,opt,name=publisher_namespace,json=publisherNamespace,proto3" json:"publisher_namespace,omitempty"`
	PublisherUserId    string `protobuf:"bytes,6,opt,name=publisher_user_id,json=publisherUserId,proto3" json:"publisher_user_id,omitempty"`
}

func (x *UserAccountLink) Reset() {
	*x = UserAccountLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountLink) ProtoMessage() {}

func (x *UserAccountLink) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountLink.ProtoReflect.Descriptor instead.
func (*UserAccountLink) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{20}
}

func (x *UserAccountLink) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountLink) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountLink) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *UserAccountLink) GetTestAccount() bool {
	if x != nil {
		return x.TestAccount
	}
	return false
}

func (x *UserAccountLink) GetPublisherNamespace() string {
	if x != nil {
		return x.PublisherNamespace
	}
	return ""
}

func (x *UserAccountLink) GetPublisherUserId() string {
	if x != nil {
		return x.PublisherUserId
	}
	return ""
}

// path: #/components/schemas/userAccountUnlink
type UserAccountUnlink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmailAddress    string         `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	TargetNamespace string         `protobuf:"bytes,3,opt,name=target_namespace,json=targetNamespace,proto3" json:"target_namespace,omitempty"`
	TargetUserId    string         `protobuf:"bytes,4,opt,name=target_user_id,json=targetUserId,proto3" json:"target_user_id,omitempty"`
	TestAccount     bool           `protobuf:"varint,5,opt,name=test_account,json=testAccount,proto3" json:"test_account,omitempty"`
	Namespace       string         `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty"`
	LinkedAccounts  []*UserAccount `protobuf:"bytes,7,rep,name=linked_accounts,json=linkedAccounts,proto3" json:"linked_accounts,omitempty"`
}

func (x *UserAccountUnlink) Reset() {
	*x = UserAccountUnlink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountUnlink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountUnlink) ProtoMessage() {}

func (x *UserAccountUnlink) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountUnlink.ProtoReflect.Descriptor instead.
func (*UserAccountUnlink) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{21}
}

func (x *UserAccountUnlink) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountUnlink) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *UserAccountUnlink) GetTargetNamespace() string {
	if x != nil {
		return x.TargetNamespace
	}
	return ""
}

func (x *UserAccountUnlink) GetTargetUserId() string {
	if x != nil {
		return x.TargetUserId
	}
	return ""
}

func (x *UserAccountUnlink) GetTestAccount() bool {
	if x != nil {
		return x.TestAccount
	}
	return false
}

func (x *UserAccountUnlink) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountUnlink) GetLinkedAccounts() []*UserAccount {
	if x != nil {
		return x.LinkedAccounts
	}
	return nil
}

// path: #/components/schemas/userAccountUpgrade
type UserAccountUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmailAddress    string `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	PublisherUserId string `protobuf:"bytes,3,opt,name=publisher_user_id,json=publisherUserId,proto3" json:"publisher_user_id,omitempty"`
	Namespace       string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TestAccount     bool   `protobuf:"varint,5,opt,name=test_account,json=testAccount,proto3" json:"test_account,omitempty"`
}

func (x *UserAccountUpgrade) Reset() {
	*x = UserAccountUpgrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountUpgrade) ProtoMessage() {}

func (x *UserAccountUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountUpgrade.ProtoReflect.Descriptor instead.
func (*UserAccountUpgrade) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{22}
}

func (x *UserAccountUpgrade) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountUpgrade) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *UserAccountUpgrade) GetPublisherUserId() string {
	if x != nil {
		return x.PublisherUserId
	}
	return ""
}

func (x *UserAccountUpgrade) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountUpgrade) GetTestAccount() bool {
	if x != nil {
		return x.TestAccount
	}
	return false
}

// path: #/components/schemas/userAccountTypeChange
type UserAccountTypeChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TestAccount bool   `protobuf:"varint,3,opt,name=test_account,json=testAccount,proto3" json:"test_account,omitempty"`
}

func (x *UserAccountTypeChange) Reset() {
	*x = UserAccountTypeChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountTypeChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountTypeChange) ProtoMessage() {}

func (x *UserAccountTypeChange) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountTypeChange.ProtoReflect.Descriptor instead.
func (*UserAccountTypeChange) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{23}
}

func (x *UserAccountTypeChange) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountTypeChange) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountTypeChange) GetTestAccount() bool {
	if x != nil {
		return x.TestAccount
	}
	return false
}

// path: #/components/schemas/userAccountCreatedPayloadData
type UserAccountCreatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount       *UserTestAccount   `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountStatus *UserAccountStatus `protobuf:"bytes,2,opt,name=user_account_status,json=userAccountStatus,proto3" json:"user_account_status,omitempty"`
	Namespace         string             `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId            string             `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserAccountCreatedPayloadData) Reset() {
	*x = UserAccountCreatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountCreatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountCreatedPayloadData) ProtoMessage() {}

func (x *UserAccountCreatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountCreatedPayloadData.ProtoReflect.Descriptor instead.
func (*UserAccountCreatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{24}
}

func (x *UserAccountCreatedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserAccountCreatedPayloadData) GetUserAccountStatus() *UserAccountStatus {
	if x != nil {
		return x.UserAccountStatus
	}
	return nil
}

func (x *UserAccountCreatedPayloadData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountCreatedPayloadData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// path: #/components/schemas/userAccountDeletedPayloadData
type UserAccountDeletedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount       *UserTestAccount   `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountStatus *UserAccountStatus `protobuf:"bytes,2,opt,name=user_account_status,json=userAccountStatus,proto3" json:"user_account_status,omitempty"`
	Namespace         string             `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId            string             `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserAccountDeletedPayloadData) Reset() {
	*x = UserAccountDeletedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountDeletedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountDeletedPayloadData) ProtoMessage() {}

func (x *UserAccountDeletedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountDeletedPayloadData.ProtoReflect.Descriptor instead.
func (*UserAccountDeletedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{25}
}

func (x *UserAccountDeletedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserAccountDeletedPayloadData) GetUserAccountStatus() *UserAccountStatus {
	if x != nil {
		return x.UserAccountStatus
	}
	return nil
}

func (x *UserAccountDeletedPayloadData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountDeletedPayloadData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// path: #/components/schemas/userAccountEnabledPayloadData
type UserAccountEnabledPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount       *UserAccount       `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountStatus *UserAccountStatus `protobuf:"bytes,2,opt,name=user_account_status,json=userAccountStatus,proto3" json:"user_account_status,omitempty"`
	Namespace         string             `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId            string             `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserAccountEnabledPayloadData) Reset() {
	*x = UserAccountEnabledPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountEnabledPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountEnabledPayloadData) ProtoMessage() {}

func (x *UserAccountEnabledPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountEnabledPayloadData.ProtoReflect.Descriptor instead.
func (*UserAccountEnabledPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{26}
}

func (x *UserAccountEnabledPayloadData) GetUserAccount() *UserAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserAccountEnabledPayloadData) GetUserAccountStatus() *UserAccountStatus {
	if x != nil {
		return x.UserAccountStatus
	}
	return nil
}

func (x *UserAccountEnabledPayloadData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountEnabledPayloadData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// path: #/components/schemas/userAccountDisabledPayloadData
type UserAccountDisabledPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount       *UserAccount       `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountStatus *UserAccountStatus `protobuf:"bytes,2,opt,name=user_account_status,json=userAccountStatus,proto3" json:"user_account_status,omitempty"`
	Namespace         string             `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId            string             `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserAccountDisabledPayloadData) Reset() {
	*x = UserAccountDisabledPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountDisabledPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountDisabledPayloadData) ProtoMessage() {}

func (x *UserAccountDisabledPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountDisabledPayloadData.ProtoReflect.Descriptor instead.
func (*UserAccountDisabledPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{27}
}

func (x *UserAccountDisabledPayloadData) GetUserAccount() *UserAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserAccountDisabledPayloadData) GetUserAccountStatus() *UserAccountStatus {
	if x != nil {
		return x.UserAccountStatus
	}
	return nil
}

func (x *UserAccountDisabledPayloadData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountDisabledPayloadData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// path: #/components/schemas/userAccountEmailUpdatedPayloadData
type UserAccountEmailUpdatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount       *UserTestAccount   `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountStatus *UserAccountStatus `protobuf:"bytes,2,opt,name=user_account_status,json=userAccountStatus,proto3" json:"user_account_status,omitempty"`
	Namespace         string             `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId            string             `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserAccountEmailUpdatedPayloadData) Reset() {
	*x = UserAccountEmailUpdatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountEmailUpdatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountEmailUpdatedPayloadData) ProtoMessage() {}

func (x *UserAccountEmailUpdatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountEmailUpdatedPayloadData.ProtoReflect.Descriptor instead.
func (*UserAccountEmailUpdatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{28}
}

func (x *UserAccountEmailUpdatedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserAccountEmailUpdatedPayloadData) GetUserAccountStatus() *UserAccountStatus {
	if x != nil {
		return x.UserAccountStatus
	}
	return nil
}

func (x *UserAccountEmailUpdatedPayloadData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountEmailUpdatedPayloadData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// path: #/components/schemas/userAccountPasswordUpdatedPayloadData
type UserAccountPasswordUpdatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount       *UserTestAccount   `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountStatus *UserAccountStatus `protobuf:"bytes,2,opt,name=user_account_status,json=userAccountStatus,proto3" json:"user_account_status,omitempty"`
	Namespace         string             `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId            string             `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserAccountPasswordUpdatedPayloadData) Reset() {
	*x = UserAccountPasswordUpdatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountPasswordUpdatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountPasswordUpdatedPayloadData) ProtoMessage() {}

func (x *UserAccountPasswordUpdatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountPasswordUpdatedPayloadData.ProtoReflect.Descriptor instead.
func (*UserAccountPasswordUpdatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{29}
}

func (x *UserAccountPasswordUpdatedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserAccountPasswordUpdatedPayloadData) GetUserAccountStatus() *UserAccountStatus {
	if x != nil {
		return x.UserAccountStatus
	}
	return nil
}

func (x *UserAccountPasswordUpdatedPayloadData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountPasswordUpdatedPayloadData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// path: #/components/schemas/userAccountBannedPayloadData
type UserAccountBannedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount    *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountBan *UserAccountBan  `protobuf:"bytes,2,opt,name=user_account_ban,json=userAccountBan,proto3" json:"user_account_ban,omitempty"`
}

func (x *UserAccountBannedPayloadData) Reset() {
	*x = UserAccountBannedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountBannedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountBannedPayloadData) ProtoMessage() {}

func (x *UserAccountBannedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountBannedPayloadData.ProtoReflect.Descriptor instead.
func (*UserAccountBannedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{30}
}

func (x *UserAccountBannedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserAccountBannedPayloadData) GetUserAccountBan() *UserAccountBan {
	if x != nil {
		return x.UserAccountBan
	}
	return nil
}

// path: #/components/schemas/userAccountUnbannedPayloadData
type UserAccountUnbannedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount    *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountBan *UserAccountBan  `protobuf:"bytes,2,opt,name=user_account_ban,json=userAccountBan,proto3" json:"user_account_ban,omitempty"`
}

func (x *UserAccountUnbannedPayloadData) Reset() {
	*x = UserAccountUnbannedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountUnbannedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountUnbannedPayloadData) ProtoMessage() {}

func (x *UserAccountUnbannedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountUnbannedPayloadData.ProtoReflect.Descriptor instead.
func (*UserAccountUnbannedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{31}
}

func (x *UserAccountUnbannedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserAccountUnbannedPayloadData) GetUserAccountBan() *UserAccountBan {
	if x != nil {
		return x.UserAccountBan
	}
	return nil
}

// path: #/components/schemas/userAccountVerifiedPayloadData
type UserAccountVerifiedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount       *UserAccount       `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountStatus *UserAccountStatus `protobuf:"bytes,2,opt,name=user_account_status,json=userAccountStatus,proto3" json:"user_account_status,omitempty"`
	Namespace         string             `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId            string             `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserAccountVerifiedPayloadData) Reset() {
	*x = UserAccountVerifiedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountVerifiedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountVerifiedPayloadData) ProtoMessage() {}

func (x *UserAccountVerifiedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountVerifiedPayloadData.ProtoReflect.Descriptor instead.
func (*UserAccountVerifiedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{32}
}

func (x *UserAccountVerifiedPayloadData) GetUserAccount() *UserAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserAccountVerifiedPayloadData) GetUserAccountStatus() *UserAccountStatus {
	if x != nil {
		return x.UserAccountStatus
	}
	return nil
}

func (x *UserAccountVerifiedPayloadData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountVerifiedPayloadData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// path: #/components/schemas/userAccountLinkedPayloadData
type AnonymousSchema12 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount           *UserAccountLink           `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountThirdParty *UserAccountThirdPartyLink `protobuf:"bytes,2,opt,name=user_account_third_party,json=userAccountThirdParty,proto3" json:"user_account_third_party,omitempty"`
}

func (x *AnonymousSchema12) Reset() {
	*x = AnonymousSchema12{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema12) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema12) ProtoMessage() {}

func (x *AnonymousSchema12) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema12.ProtoReflect.Descriptor instead.
func (*AnonymousSchema12) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{33}
}

func (x *AnonymousSchema12) GetUserAccount() *UserAccountLink {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *AnonymousSchema12) GetUserAccountThirdParty() *UserAccountThirdPartyLink {
	if x != nil {
		return x.UserAccountThirdParty
	}
	return nil
}

// path: #/components/schemas/userAccountUnlinkedPayloadData
type AnonymousSchema13 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount           *UserAccountUnlink     `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountThirdParty *UserAccountThirdParty `protobuf:"bytes,2,opt,name=user_account_third_party,json=userAccountThirdParty,proto3" json:"user_account_third_party,omitempty"`
}

func (x *AnonymousSchema13) Reset() {
	*x = AnonymousSchema13{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema13) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema13) ProtoMessage() {}

func (x *AnonymousSchema13) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema13.ProtoReflect.Descriptor instead.
func (*AnonymousSchema13) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{34}
}

func (x *AnonymousSchema13) GetUserAccount() *UserAccountUnlink {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *AnonymousSchema13) GetUserAccountThirdParty() *UserAccountThirdParty {
	if x != nil {
		return x.UserAccountThirdParty
	}
	return nil
}

// path: #/components/schemas/userAccountUpgradedPayloadData
type UserAccountUpgradedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount *UserAccountUpgrade `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
}

func (x *UserAccountUpgradedPayloadData) Reset() {
	*x = UserAccountUpgradedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountUpgradedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountUpgradedPayloadData) ProtoMessage() {}

func (x *UserAccountUpgradedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountUpgradedPayloadData.ProtoReflect.Descriptor instead.
func (*UserAccountUpgradedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{35}
}

func (x *UserAccountUpgradedPayloadData) GetUserAccount() *UserAccountUpgrade {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

// path: #/components/schemas/gameUserAccountCreatedPayloadData
type GameUserAccountCreatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount       *UserGameAccount   `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAccountStatus *UserAccountStatus `protobuf:"bytes,2,opt,name=user_account_status,json=userAccountStatus,proto3" json:"user_account_status,omitempty"`
	Namespace         string             `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId            string             `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GameUserAccountCreatedPayloadData) Reset() {
	*x = GameUserAccountCreatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUserAccountCreatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserAccountCreatedPayloadData) ProtoMessage() {}

func (x *GameUserAccountCreatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserAccountCreatedPayloadData.ProtoReflect.Descriptor instead.
func (*GameUserAccountCreatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{36}
}

func (x *GameUserAccountCreatedPayloadData) GetUserAccount() *UserGameAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *GameUserAccountCreatedPayloadData) GetUserAccountStatus() *UserAccountStatus {
	if x != nil {
		return x.UserAccountStatus
	}
	return nil
}

func (x *GameUserAccountCreatedPayloadData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GameUserAccountCreatedPayloadData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// path: #/components/schemas/gameUserCreatedPayloadData
type GameUserCreatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform *Platform `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *GameUserCreatedPayloadData) Reset() {
	*x = GameUserCreatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUserCreatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserCreatedPayloadData) ProtoMessage() {}

func (x *GameUserCreatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserCreatedPayloadData.ProtoReflect.Descriptor instead.
func (*GameUserCreatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{37}
}

func (x *GameUserCreatedPayloadData) GetPlatform() *Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

// path: #/components/schemas/thirdPartyAccountCreatedPayloadData
type ThirdPartyAccountCreatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThirdParty *ThirdParty `protobuf:"bytes,1,opt,name=third_party,json=thirdParty,proto3" json:"third_party,omitempty"`
	Namespace  string      `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId     string      `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ThirdPartyAccountCreatedPayloadData) Reset() {
	*x = ThirdPartyAccountCreatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdPartyAccountCreatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdPartyAccountCreatedPayloadData) ProtoMessage() {}

func (x *ThirdPartyAccountCreatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdPartyAccountCreatedPayloadData.ProtoReflect.Descriptor instead.
func (*ThirdPartyAccountCreatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{38}
}

func (x *ThirdPartyAccountCreatedPayloadData) GetThirdParty() *ThirdParty {
	if x != nil {
		return x.ThirdParty
	}
	return nil
}

func (x *ThirdPartyAccountCreatedPayloadData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ThirdPartyAccountCreatedPayloadData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// path: #/components/schemas/userAccountTypeChangedPayloadData
type UserAccountTypeChangedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount *UserAccountTypeChange `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
}

func (x *UserAccountTypeChangedPayloadData) Reset() {
	*x = UserAccountTypeChangedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountTypeChangedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountTypeChangedPayloadData) ProtoMessage() {}

func (x *UserAccountTypeChangedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountTypeChangedPayloadData.ProtoReflect.Descriptor instead.
func (*UserAccountTypeChangedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{39}
}

func (x *UserAccountTypeChangedPayloadData) GetUserAccount() *UserAccountTypeChange {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

// path: #/components/schemas/userLoggedInPayloadData
type AnonymousSchema19 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount        *UserAccount        `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAuthentication *UserAuthentication `protobuf:"bytes,2,opt,name=user_authentication,json=userAuthentication,proto3" json:"user_authentication,omitempty"`
}

func (x *AnonymousSchema19) Reset() {
	*x = AnonymousSchema19{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema19) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema19) ProtoMessage() {}

func (x *AnonymousSchema19) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema19.ProtoReflect.Descriptor instead.
func (*AnonymousSchema19) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{40}
}

func (x *AnonymousSchema19) GetUserAccount() *UserAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *AnonymousSchema19) GetUserAuthentication() *UserAuthentication {
	if x != nil {
		return x.UserAuthentication
	}
	return nil
}

// path: #/components/schemas/userLoggedOutPayloadData
type AnonymousSchema20 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount        *UserAccount        `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAuthentication *UserAuthentication `protobuf:"bytes,2,opt,name=user_authentication,json=userAuthentication,proto3" json:"user_authentication,omitempty"`
}

func (x *AnonymousSchema20) Reset() {
	*x = AnonymousSchema20{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema20) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema20) ProtoMessage() {}

func (x *AnonymousSchema20) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema20.ProtoReflect.Descriptor instead.
func (*AnonymousSchema20) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{41}
}

func (x *AnonymousSchema20) GetUserAccount() *UserAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *AnonymousSchema20) GetUserAuthentication() *UserAuthentication {
	if x != nil {
		return x.UserAuthentication
	}
	return nil
}

// path: #/components/schemas/userThirdPartyLoggedInPayloadData
type AnonymousSchema21 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount        *UserAccount        `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAuthentication *UserAuthentication `protobuf:"bytes,2,opt,name=user_authentication,json=userAuthentication,proto3" json:"user_authentication,omitempty"`
}

func (x *AnonymousSchema21) Reset() {
	*x = AnonymousSchema21{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema21) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema21) ProtoMessage() {}

func (x *AnonymousSchema21) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema21.ProtoReflect.Descriptor instead.
func (*AnonymousSchema21) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{42}
}

func (x *AnonymousSchema21) GetUserAccount() *UserAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *AnonymousSchema21) GetUserAuthentication() *UserAuthentication {
	if x != nil {
		return x.UserAuthentication
	}
	return nil
}

// path: #/components/schemas/userLoginFailedPayloadData
type UserLoginFailedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount              *UserAccount              `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAuthenticationFailed *UserAuthenticationFailed `protobuf:"bytes,2,opt,name=user_authentication_failed,json=userAuthenticationFailed,proto3" json:"user_authentication_failed,omitempty"`
}

func (x *UserLoginFailedPayloadData) Reset() {
	*x = UserLoginFailedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginFailedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginFailedPayloadData) ProtoMessage() {}

func (x *UserLoginFailedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginFailedPayloadData.ProtoReflect.Descriptor instead.
func (*UserLoginFailedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{43}
}

func (x *UserLoginFailedPayloadData) GetUserAccount() *UserAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserLoginFailedPayloadData) GetUserAuthenticationFailed() *UserAuthenticationFailed {
	if x != nil {
		return x.UserAuthenticationFailed
	}
	return nil
}

// path: #/components/schemas/userThirdPartyLoginFailedPayloadData
type UserThirdPartyLoginFailedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount              *UserAccount              `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserAuthenticationFailed *UserAuthenticationFailed `protobuf:"bytes,2,opt,name=user_authentication_failed,json=userAuthenticationFailed,proto3" json:"user_authentication_failed,omitempty"`
}

func (x *UserThirdPartyLoginFailedPayloadData) Reset() {
	*x = UserThirdPartyLoginFailedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserThirdPartyLoginFailedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserThirdPartyLoginFailedPayloadData) ProtoMessage() {}

func (x *UserThirdPartyLoginFailedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserThirdPartyLoginFailedPayloadData.ProtoReflect.Descriptor instead.
func (*UserThirdPartyLoginFailedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{44}
}

func (x *UserThirdPartyLoginFailedPayloadData) GetUserAccount() *UserAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserThirdPartyLoginFailedPayloadData) GetUserAuthenticationFailed() *UserAuthenticationFailed {
	if x != nil {
		return x.UserAuthenticationFailed
	}
	return nil
}

// path: #/components/schemas/userInformationCreatedPayloadData
type AnonymousSchema24 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount     *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserInformation *UserInformation `protobuf:"bytes,2,opt,name=user_information,json=userInformation,proto3" json:"user_information,omitempty"`
}

func (x *AnonymousSchema24) Reset() {
	*x = AnonymousSchema24{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema24) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema24) ProtoMessage() {}

func (x *AnonymousSchema24) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema24.ProtoReflect.Descriptor instead.
func (*AnonymousSchema24) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{45}
}

func (x *AnonymousSchema24) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *AnonymousSchema24) GetUserInformation() *UserInformation {
	if x != nil {
		return x.UserInformation
	}
	return nil
}

// path: #/components/schemas/userInformationDisplayNameUpdatedPayloadData
type AnonymousSchema25 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount     *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserInformation *UserInformation `protobuf:"bytes,2,opt,name=user_information,json=userInformation,proto3" json:"user_information,omitempty"`
}

func (x *AnonymousSchema25) Reset() {
	*x = AnonymousSchema25{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema25) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema25) ProtoMessage() {}

func (x *AnonymousSchema25) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema25.ProtoReflect.Descriptor instead.
func (*AnonymousSchema25) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{46}
}

func (x *AnonymousSchema25) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *AnonymousSchema25) GetUserInformation() *UserInformation {
	if x != nil {
		return x.UserInformation
	}
	return nil
}

// path: #/components/schemas/userInformationCountryUpdatedPayloadData
type UserInformationCountryUpdatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount     *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserInformation *UserInformation `protobuf:"bytes,2,opt,name=user_information,json=userInformation,proto3" json:"user_information,omitempty"`
}

func (x *UserInformationCountryUpdatedPayloadData) Reset() {
	*x = UserInformationCountryUpdatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationCountryUpdatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationCountryUpdatedPayloadData) ProtoMessage() {}

func (x *UserInformationCountryUpdatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationCountryUpdatedPayloadData.ProtoReflect.Descriptor instead.
func (*UserInformationCountryUpdatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{47}
}

func (x *UserInformationCountryUpdatedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserInformationCountryUpdatedPayloadData) GetUserInformation() *UserInformation {
	if x != nil {
		return x.UserInformation
	}
	return nil
}

// path: #/components/schemas/userInformationLanguageUpdatedPayloadData
type UserInformationLanguageUpdatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount     *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserInformation *UserInformation `protobuf:"bytes,2,opt,name=user_information,json=userInformation,proto3" json:"user_information,omitempty"`
}

func (x *UserInformationLanguageUpdatedPayloadData) Reset() {
	*x = UserInformationLanguageUpdatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationLanguageUpdatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationLanguageUpdatedPayloadData) ProtoMessage() {}

func (x *UserInformationLanguageUpdatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationLanguageUpdatedPayloadData.ProtoReflect.Descriptor instead.
func (*UserInformationLanguageUpdatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{48}
}

func (x *UserInformationLanguageUpdatedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserInformationLanguageUpdatedPayloadData) GetUserInformation() *UserInformation {
	if x != nil {
		return x.UserInformation
	}
	return nil
}

// path: #/components/schemas/userInformationUsernameUpdatedPayloadData
type UserInformationUsernameUpdatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount     *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserInformation *UserInformation `protobuf:"bytes,2,opt,name=user_information,json=userInformation,proto3" json:"user_information,omitempty"`
}

func (x *UserInformationUsernameUpdatedPayloadData) Reset() {
	*x = UserInformationUsernameUpdatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationUsernameUpdatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationUsernameUpdatedPayloadData) ProtoMessage() {}

func (x *UserInformationUsernameUpdatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationUsernameUpdatedPayloadData.ProtoReflect.Descriptor instead.
func (*UserInformationUsernameUpdatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{49}
}

func (x *UserInformationUsernameUpdatedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserInformationUsernameUpdatedPayloadData) GetUserInformation() *UserInformation {
	if x != nil {
		return x.UserInformation
	}
	return nil
}

// path: #/components/schemas/userInformationDateOfBirthUpdatedPayloadData
type UserInformationDateOfBirthUpdatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount     *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	UserInformation *UserInformation `protobuf:"bytes,2,opt,name=user_information,json=userInformation,proto3" json:"user_information,omitempty"`
}

func (x *UserInformationDateOfBirthUpdatedPayloadData) Reset() {
	*x = UserInformationDateOfBirthUpdatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationDateOfBirthUpdatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationDateOfBirthUpdatedPayloadData) ProtoMessage() {}

func (x *UserInformationDateOfBirthUpdatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationDateOfBirthUpdatedPayloadData.ProtoReflect.Descriptor instead.
func (*UserInformationDateOfBirthUpdatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{50}
}

func (x *UserInformationDateOfBirthUpdatedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserInformationDateOfBirthUpdatedPayloadData) GetUserInformation() *UserInformation {
	if x != nil {
		return x.UserInformation
	}
	return nil
}

// path: #/components/schemas/userPermissionsCreatedPayloadData
type UserPermissionsCreatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	Permissions []*Permissions   `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *UserPermissionsCreatedPayloadData) Reset() {
	*x = UserPermissionsCreatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionsCreatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionsCreatedPayloadData) ProtoMessage() {}

func (x *UserPermissionsCreatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionsCreatedPayloadData.ProtoReflect.Descriptor instead.
func (*UserPermissionsCreatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{51}
}

func (x *UserPermissionsCreatedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserPermissionsCreatedPayloadData) GetPermissions() []*Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// path: #/components/schemas/userPermissionsDeletedPayloadData
type UserPermissionsDeletedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	Permissions []*Permissions   `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *UserPermissionsDeletedPayloadData) Reset() {
	*x = UserPermissionsDeletedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionsDeletedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionsDeletedPayloadData) ProtoMessage() {}

func (x *UserPermissionsDeletedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionsDeletedPayloadData.ProtoReflect.Descriptor instead.
func (*UserPermissionsDeletedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{52}
}

func (x *UserPermissionsDeletedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserPermissionsDeletedPayloadData) GetPermissions() []*Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// path: #/components/schemas/userRolesCreatedPayloadData
type UserRolesCreatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	Roles       []*Role          `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *UserRolesCreatedPayloadData) Reset() {
	*x = UserRolesCreatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRolesCreatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRolesCreatedPayloadData) ProtoMessage() {}

func (x *UserRolesCreatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRolesCreatedPayloadData.ProtoReflect.Descriptor instead.
func (*UserRolesCreatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{53}
}

func (x *UserRolesCreatedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserRolesCreatedPayloadData) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

// path: #/components/schemas/userRolesDeletedPayloadData
type UserRolesDeletedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAccount *UserTestAccount `protobuf:"bytes,1,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	Roles       []string         `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *UserRolesDeletedPayloadData) Reset() {
	*x = UserRolesDeletedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRolesDeletedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRolesDeletedPayloadData) ProtoMessage() {}

func (x *UserRolesDeletedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRolesDeletedPayloadData.ProtoReflect.Descriptor instead.
func (*UserRolesDeletedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{54}
}

func (x *UserRolesDeletedPayloadData) GetUserAccount() *UserTestAccount {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *UserRolesDeletedPayloadData) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

// path: #/components/schemas/countryAgeRestrictionCreatedPayloadData
type CountryAgeRestrictionCreatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryAgeRestriction *CountryAgeRestriction `protobuf:"bytes,1,opt,name=country_age_restriction,json=countryAgeRestriction,proto3" json:"country_age_restriction,omitempty"`
}

func (x *CountryAgeRestrictionCreatedPayloadData) Reset() {
	*x = CountryAgeRestrictionCreatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryAgeRestrictionCreatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryAgeRestrictionCreatedPayloadData) ProtoMessage() {}

func (x *CountryAgeRestrictionCreatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryAgeRestrictionCreatedPayloadData.ProtoReflect.Descriptor instead.
func (*CountryAgeRestrictionCreatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{55}
}

func (x *CountryAgeRestrictionCreatedPayloadData) GetCountryAgeRestriction() *CountryAgeRestriction {
	if x != nil {
		return x.CountryAgeRestriction
	}
	return nil
}

// path: #/components/schemas/countryAgeRestrictionUpdatedPayloadData
type CountryAgeRestrictionUpdatedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryAgeRestriction *CountryAgeRestriction `protobuf:"bytes,1,opt,name=country_age_restriction,json=countryAgeRestriction,proto3" json:"country_age_restriction,omitempty"`
}

func (x *CountryAgeRestrictionUpdatedPayloadData) Reset() {
	*x = CountryAgeRestrictionUpdatedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryAgeRestrictionUpdatedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryAgeRestrictionUpdatedPayloadData) ProtoMessage() {}

func (x *CountryAgeRestrictionUpdatedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryAgeRestrictionUpdatedPayloadData.ProtoReflect.Descriptor instead.
func (*CountryAgeRestrictionUpdatedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{56}
}

func (x *CountryAgeRestrictionUpdatedPayloadData) GetCountryAgeRestriction() *CountryAgeRestriction {
	if x != nil {
		return x.CountryAgeRestriction
	}
	return nil
}

// path: #/components/schemas/chatAllBannedPayloadData
type ChatAllBannedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserFeatureBan *UserFeatureBan `protobuf:"bytes,1,opt,name=user_feature_ban,json=userFeatureBan,proto3" json:"user_feature_ban,omitempty"`
}

func (x *ChatAllBannedPayloadData) Reset() {
	*x = ChatAllBannedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatAllBannedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAllBannedPayloadData) ProtoMessage() {}

func (x *ChatAllBannedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAllBannedPayloadData.ProtoReflect.Descriptor instead.
func (*ChatAllBannedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{57}
}

func (x *ChatAllBannedPayloadData) GetUserFeatureBan() *UserFeatureBan {
	if x != nil {
		return x.UserFeatureBan
	}
	return nil
}

// path: #/components/schemas/chatSendBannedPayloadData
type ChatSendBannedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserFeatureBan *UserFeatureBan `protobuf:"bytes,1,opt,name=user_feature_ban,json=userFeatureBan,proto3" json:"user_feature_ban,omitempty"`
}

func (x *ChatSendBannedPayloadData) Reset() {
	*x = ChatSendBannedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatSendBannedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatSendBannedPayloadData) ProtoMessage() {}

func (x *ChatSendBannedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatSendBannedPayloadData.ProtoReflect.Descriptor instead.
func (*ChatSendBannedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{58}
}

func (x *ChatSendBannedPayloadData) GetUserFeatureBan() *UserFeatureBan {
	if x != nil {
		return x.UserFeatureBan
	}
	return nil
}

// path: #/components/schemas/leaderboardBannedPayloadData
type LeaderboardBannedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserFeatureBan *UserFeatureBan `protobuf:"bytes,1,opt,name=user_feature_ban,json=userFeatureBan,proto3" json:"user_feature_ban,omitempty"`
}

func (x *LeaderboardBannedPayloadData) Reset() {
	*x = LeaderboardBannedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardBannedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardBannedPayloadData) ProtoMessage() {}

func (x *LeaderboardBannedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardBannedPayloadData.ProtoReflect.Descriptor instead.
func (*LeaderboardBannedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{59}
}

func (x *LeaderboardBannedPayloadData) GetUserFeatureBan() *UserFeatureBan {
	if x != nil {
		return x.UserFeatureBan
	}
	return nil
}

// path: #/components/schemas/statisticsBannedPayloadData
type StatisticsBannedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserFeatureBan *UserFeatureBan `protobuf:"bytes,1,opt,name=user_feature_ban,json=userFeatureBan,proto3" json:"user_feature_ban,omitempty"`
}

func (x *StatisticsBannedPayloadData) Reset() {
	*x = StatisticsBannedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsBannedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsBannedPayloadData) ProtoMessage() {}

func (x *StatisticsBannedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsBannedPayloadData.ProtoReflect.Descriptor instead.
func (*StatisticsBannedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{60}
}

func (x *StatisticsBannedPayloadData) GetUserFeatureBan() *UserFeatureBan {
	if x != nil {
		return x.UserFeatureBan
	}
	return nil
}

// path: #/components/schemas/orderAndPaymentBannedPayloadData
type OrderAndPaymentBannedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserFeatureBan *UserFeatureBan `protobuf:"bytes,1,opt,name=user_feature_ban,json=userFeatureBan,proto3" json:"user_feature_ban,omitempty"`
}

func (x *OrderAndPaymentBannedPayloadData) Reset() {
	*x = OrderAndPaymentBannedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAndPaymentBannedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAndPaymentBannedPayloadData) ProtoMessage() {}

func (x *OrderAndPaymentBannedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAndPaymentBannedPayloadData.ProtoReflect.Descriptor instead.
func (*OrderAndPaymentBannedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{61}
}

func (x *OrderAndPaymentBannedPayloadData) GetUserFeatureBan() *UserFeatureBan {
	if x != nil {
		return x.UserFeatureBan
	}
	return nil
}

// path: #/components/schemas/matchmakingBannedPayloadData
type MatchmakingBannedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserFeatureBan *UserFeatureBan `protobuf:"bytes,1,opt,name=user_feature_ban,json=userFeatureBan,proto3" json:"user_feature_ban,omitempty"`
}

func (x *MatchmakingBannedPayloadData) Reset() {
	*x = MatchmakingBannedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchmakingBannedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchmakingBannedPayloadData) ProtoMessage() {}

func (x *MatchmakingBannedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchmakingBannedPayloadData.ProtoReflect.Descriptor instead.
func (*MatchmakingBannedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{62}
}

func (x *MatchmakingBannedPayloadData) GetUserFeatureBan() *UserFeatureBan {
	if x != nil {
		return x.UserFeatureBan
	}
	return nil
}

// path: #/components/schemas/ugcCreateUpdateBannedPayloadData
type UgcCreateUpdateBannedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserFeatureBan *UserFeatureBan `protobuf:"bytes,1,opt,name=user_feature_ban,json=userFeatureBan,proto3" json:"user_feature_ban,omitempty"`
}

func (x *UgcCreateUpdateBannedPayloadData) Reset() {
	*x = UgcCreateUpdateBannedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcCreateUpdateBannedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcCreateUpdateBannedPayloadData) ProtoMessage() {}

func (x *UgcCreateUpdateBannedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcCreateUpdateBannedPayloadData.ProtoReflect.Descriptor instead.
func (*UgcCreateUpdateBannedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{63}
}

func (x *UgcCreateUpdateBannedPayloadData) GetUserFeatureBan() *UserFeatureBan {
	if x != nil {
		return x.UserFeatureBan
	}
	return nil
}

// path: #/components/schemas/userDisconnectRequestedPayloadData
type UserDisconnectRequestedPayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserDisconnectRequestedPayloadData) Reset() {
	*x = UserDisconnectRequestedPayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDisconnectRequestedPayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDisconnectRequestedPayloadData) ProtoMessage() {}

func (x *UserDisconnectRequestedPayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDisconnectRequestedPayloadData.ProtoReflect.Descriptor instead.
func (*UserDisconnectRequestedPayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{64}
}

func (x *UserDisconnectRequestedPayloadData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// path: #/components/schemas/gdprRequestDataDeletionResponsePayloadData
type GdprRequestDataDeletionResponsePayloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletionGdpr *DeletionGDPR `protobuf:"bytes,1,opt,name=deletion_gdpr,json=deletionGDPR,proto3" json:"deletion_gdpr,omitempty"`
}

func (x *GdprRequestDataDeletionResponsePayloadData) Reset() {
	*x = GdprRequestDataDeletionResponsePayloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdprRequestDataDeletionResponsePayloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdprRequestDataDeletionResponsePayloadData) ProtoMessage() {}

func (x *GdprRequestDataDeletionResponsePayloadData) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdprRequestDataDeletionResponsePayloadData.ProtoReflect.Descriptor instead.
func (*GdprRequestDataDeletionResponsePayloadData) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{65}
}

func (x *GdprRequestDataDeletionResponsePayloadData) GetDeletionGdpr() *DeletionGDPR {
	if x != nil {
		return x.DeletionGdpr
	}
	return nil
}

// path: #/components/messages/userAccountCreated/payload
type UserAccountCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountCreatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountCreated) Reset() {
	*x = UserAccountCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountCreated) ProtoMessage() {}

func (x *UserAccountCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountCreated.ProtoReflect.Descriptor instead.
func (*UserAccountCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{66}
}

func (x *UserAccountCreated) GetPayload() *UserAccountCreatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountDeleted/payload
type UserAccountDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountDeletedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountDeleted) Reset() {
	*x = UserAccountDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountDeleted) ProtoMessage() {}

func (x *UserAccountDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountDeleted.ProtoReflect.Descriptor instead.
func (*UserAccountDeleted) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{67}
}

func (x *UserAccountDeleted) GetPayload() *UserAccountDeletedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountDeleted) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountDeleted) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountDeleted) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountDeleted) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountDeleted) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountDeleted) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountDeleted) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountDeleted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountDeleted) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountDeleted) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountEnabled/payload
type UserAccountEnabled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountEnabledPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountEnabled) Reset() {
	*x = UserAccountEnabled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountEnabled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountEnabled) ProtoMessage() {}

func (x *UserAccountEnabled) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountEnabled.ProtoReflect.Descriptor instead.
func (*UserAccountEnabled) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{68}
}

func (x *UserAccountEnabled) GetPayload() *UserAccountEnabledPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountEnabled) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountEnabled) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountEnabled) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountEnabled) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountEnabled) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountEnabled) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountEnabled) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountEnabled) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountEnabled) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountEnabled) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountDisabled/payload
type UserAccountDisabled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountDisabledPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountDisabled) Reset() {
	*x = UserAccountDisabled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountDisabled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountDisabled) ProtoMessage() {}

func (x *UserAccountDisabled) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountDisabled.ProtoReflect.Descriptor instead.
func (*UserAccountDisabled) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{69}
}

func (x *UserAccountDisabled) GetPayload() *UserAccountDisabledPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountDisabled) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountDisabled) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountDisabled) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountDisabled) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountDisabled) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountDisabled) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountDisabled) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountDisabled) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountDisabled) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountDisabled) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountEmailUpdated/payload
type UserAccountEmailUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountEmailUpdatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountEmailUpdated) Reset() {
	*x = UserAccountEmailUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountEmailUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountEmailUpdated) ProtoMessage() {}

func (x *UserAccountEmailUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountEmailUpdated.ProtoReflect.Descriptor instead.
func (*UserAccountEmailUpdated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{70}
}

func (x *UserAccountEmailUpdated) GetPayload() *UserAccountEmailUpdatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountEmailUpdated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountEmailUpdated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountEmailUpdated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountEmailUpdated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountEmailUpdated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountEmailUpdated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountEmailUpdated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountEmailUpdated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountEmailUpdated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountEmailUpdated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountPasswordUpdated/payload
type UserAccountPasswordUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountPasswordUpdatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountPasswordUpdated) Reset() {
	*x = UserAccountPasswordUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountPasswordUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountPasswordUpdated) ProtoMessage() {}

func (x *UserAccountPasswordUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountPasswordUpdated.ProtoReflect.Descriptor instead.
func (*UserAccountPasswordUpdated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{71}
}

func (x *UserAccountPasswordUpdated) GetPayload() *UserAccountPasswordUpdatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountPasswordUpdated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountPasswordUpdated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountPasswordUpdated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountPasswordUpdated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountPasswordUpdated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountPasswordUpdated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountPasswordUpdated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountPasswordUpdated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountPasswordUpdated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountPasswordUpdated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountBanned/payload
type UserAccountBanned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountBannedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountBanned) Reset() {
	*x = UserAccountBanned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountBanned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountBanned) ProtoMessage() {}

func (x *UserAccountBanned) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountBanned.ProtoReflect.Descriptor instead.
func (*UserAccountBanned) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{72}
}

func (x *UserAccountBanned) GetPayload() *UserAccountBannedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountBanned) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountBanned) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountBanned) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountBanned) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountBanned) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountBanned) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountBanned) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountBanned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountBanned) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountBanned) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountUnbanned/payload
type UserAccountUnbanned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountUnbannedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountUnbanned) Reset() {
	*x = UserAccountUnbanned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountUnbanned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountUnbanned) ProtoMessage() {}

func (x *UserAccountUnbanned) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountUnbanned.ProtoReflect.Descriptor instead.
func (*UserAccountUnbanned) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{73}
}

func (x *UserAccountUnbanned) GetPayload() *UserAccountUnbannedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountUnbanned) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountUnbanned) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountUnbanned) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountUnbanned) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountUnbanned) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountUnbanned) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountUnbanned) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountUnbanned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountUnbanned) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountUnbanned) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountVerified/payload
type UserAccountVerified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountVerifiedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountVerified) Reset() {
	*x = UserAccountVerified{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountVerified) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountVerified) ProtoMessage() {}

func (x *UserAccountVerified) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountVerified.ProtoReflect.Descriptor instead.
func (*UserAccountVerified) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{74}
}

func (x *UserAccountVerified) GetPayload() *UserAccountVerifiedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountVerified) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountVerified) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountVerified) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountVerified) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountVerified) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountVerified) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountVerified) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountVerified) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountVerified) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountVerified) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountLinked/payload
type UserAccountLinked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema12 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountLinked) Reset() {
	*x = UserAccountLinked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountLinked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountLinked) ProtoMessage() {}

func (x *UserAccountLinked) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountLinked.ProtoReflect.Descriptor instead.
func (*UserAccountLinked) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{75}
}

func (x *UserAccountLinked) GetPayload() *AnonymousSchema12 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountLinked) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountLinked) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountLinked) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountLinked) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountLinked) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountLinked) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountLinked) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountLinked) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountLinked) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountLinked) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountUnlinked/payload
type UserAccountUnlinked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema13 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountUnlinked) Reset() {
	*x = UserAccountUnlinked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountUnlinked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountUnlinked) ProtoMessage() {}

func (x *UserAccountUnlinked) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountUnlinked.ProtoReflect.Descriptor instead.
func (*UserAccountUnlinked) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{76}
}

func (x *UserAccountUnlinked) GetPayload() *AnonymousSchema13 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountUnlinked) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountUnlinked) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountUnlinked) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountUnlinked) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountUnlinked) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountUnlinked) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountUnlinked) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountUnlinked) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountUnlinked) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountUnlinked) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountUpgraded/payload
type UserAccountUpgraded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountUpgradedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountUpgraded) Reset() {
	*x = UserAccountUpgraded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountUpgraded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountUpgraded) ProtoMessage() {}

func (x *UserAccountUpgraded) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountUpgraded.ProtoReflect.Descriptor instead.
func (*UserAccountUpgraded) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{77}
}

func (x *UserAccountUpgraded) GetPayload() *UserAccountUpgradedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountUpgraded) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountUpgraded) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountUpgraded) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountUpgraded) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountUpgraded) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountUpgraded) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountUpgraded) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountUpgraded) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountUpgraded) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountUpgraded) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/gameUserAccountCreated/payload
type GameUserAccountCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *GameUserAccountCreatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *GameUserAccountCreated) Reset() {
	*x = GameUserAccountCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUserAccountCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserAccountCreated) ProtoMessage() {}

func (x *GameUserAccountCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserAccountCreated.ProtoReflect.Descriptor instead.
func (*GameUserAccountCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{78}
}

func (x *GameUserAccountCreated) GetPayload() *GameUserAccountCreatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GameUserAccountCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameUserAccountCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GameUserAccountCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameUserAccountCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GameUserAccountCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *GameUserAccountCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GameUserAccountCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GameUserAccountCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GameUserAccountCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *GameUserAccountCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/gameUserCreated/payload
type GameUserCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *GameUserCreatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *GameUserCreated) Reset() {
	*x = GameUserCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUserCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserCreated) ProtoMessage() {}

func (x *GameUserCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserCreated.ProtoReflect.Descriptor instead.
func (*GameUserCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{79}
}

func (x *GameUserCreated) GetPayload() *GameUserCreatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GameUserCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameUserCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GameUserCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameUserCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GameUserCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *GameUserCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GameUserCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GameUserCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GameUserCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *GameUserCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/thirdPartyAccountCreated/payload
type ThirdPartyAccountCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *ThirdPartyAccountCreatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *ThirdPartyAccountCreated) Reset() {
	*x = ThirdPartyAccountCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdPartyAccountCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdPartyAccountCreated) ProtoMessage() {}

func (x *ThirdPartyAccountCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdPartyAccountCreated.ProtoReflect.Descriptor instead.
func (*ThirdPartyAccountCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{80}
}

func (x *ThirdPartyAccountCreated) GetPayload() *ThirdPartyAccountCreatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ThirdPartyAccountCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ThirdPartyAccountCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ThirdPartyAccountCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ThirdPartyAccountCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ThirdPartyAccountCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *ThirdPartyAccountCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ThirdPartyAccountCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ThirdPartyAccountCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ThirdPartyAccountCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *ThirdPartyAccountCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountTypeChanged/payload
type UserAccountTypeChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountTypeChangedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserAccountTypeChanged) Reset() {
	*x = UserAccountTypeChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountTypeChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountTypeChanged) ProtoMessage() {}

func (x *UserAccountTypeChanged) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountTypeChanged.ProtoReflect.Descriptor instead.
func (*UserAccountTypeChanged) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{81}
}

func (x *UserAccountTypeChanged) GetPayload() *UserAccountTypeChangedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserAccountTypeChanged) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAccountTypeChanged) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserAccountTypeChanged) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAccountTypeChanged) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserAccountTypeChanged) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserAccountTypeChanged) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserAccountTypeChanged) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserAccountTypeChanged) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAccountTypeChanged) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserAccountTypeChanged) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userLoggedIn/payload
type UserLoggedIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema19 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserLoggedIn) Reset() {
	*x = UserLoggedIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoggedIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoggedIn) ProtoMessage() {}

func (x *UserLoggedIn) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoggedIn.ProtoReflect.Descriptor instead.
func (*UserLoggedIn) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{82}
}

func (x *UserLoggedIn) GetPayload() *AnonymousSchema19 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserLoggedIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserLoggedIn) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserLoggedIn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserLoggedIn) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserLoggedIn) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserLoggedIn) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserLoggedIn) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserLoggedIn) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserLoggedIn) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserLoggedIn) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userLoggedOut/payload
type UserLoggedOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema20 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserLoggedOut) Reset() {
	*x = UserLoggedOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoggedOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoggedOut) ProtoMessage() {}

func (x *UserLoggedOut) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoggedOut.ProtoReflect.Descriptor instead.
func (*UserLoggedOut) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{83}
}

func (x *UserLoggedOut) GetPayload() *AnonymousSchema20 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserLoggedOut) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserLoggedOut) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserLoggedOut) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserLoggedOut) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserLoggedOut) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserLoggedOut) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserLoggedOut) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserLoggedOut) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserLoggedOut) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserLoggedOut) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userThirdPartyLoggedIn/payload
type UserThirdPartyLoggedIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema21 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserThirdPartyLoggedIn) Reset() {
	*x = UserThirdPartyLoggedIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserThirdPartyLoggedIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserThirdPartyLoggedIn) ProtoMessage() {}

func (x *UserThirdPartyLoggedIn) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserThirdPartyLoggedIn.ProtoReflect.Descriptor instead.
func (*UserThirdPartyLoggedIn) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{84}
}

func (x *UserThirdPartyLoggedIn) GetPayload() *AnonymousSchema21 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserThirdPartyLoggedIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserThirdPartyLoggedIn) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserThirdPartyLoggedIn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserThirdPartyLoggedIn) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserThirdPartyLoggedIn) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserThirdPartyLoggedIn) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserThirdPartyLoggedIn) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserThirdPartyLoggedIn) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserThirdPartyLoggedIn) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserThirdPartyLoggedIn) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userLoginFailed/payload
type UserLoginFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserLoginFailedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserLoginFailed) Reset() {
	*x = UserLoginFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginFailed) ProtoMessage() {}

func (x *UserLoginFailed) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginFailed.ProtoReflect.Descriptor instead.
func (*UserLoginFailed) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{85}
}

func (x *UserLoginFailed) GetPayload() *UserLoginFailedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserLoginFailed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserLoginFailed) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserLoginFailed) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserLoginFailed) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserLoginFailed) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserLoginFailed) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserLoginFailed) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserLoginFailed) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserLoginFailed) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserLoginFailed) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userThirdPartyLoginFailed/payload
type UserThirdPartyLoginFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserThirdPartyLoginFailedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserThirdPartyLoginFailed) Reset() {
	*x = UserThirdPartyLoginFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserThirdPartyLoginFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserThirdPartyLoginFailed) ProtoMessage() {}

func (x *UserThirdPartyLoginFailed) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserThirdPartyLoginFailed.ProtoReflect.Descriptor instead.
func (*UserThirdPartyLoginFailed) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{86}
}

func (x *UserThirdPartyLoginFailed) GetPayload() *UserThirdPartyLoginFailedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserThirdPartyLoginFailed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserThirdPartyLoginFailed) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserThirdPartyLoginFailed) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserThirdPartyLoginFailed) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserThirdPartyLoginFailed) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserThirdPartyLoginFailed) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserThirdPartyLoginFailed) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserThirdPartyLoginFailed) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserThirdPartyLoginFailed) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserThirdPartyLoginFailed) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userInformationCreated/payload
type UserInformationCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema24 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserInformationCreated) Reset() {
	*x = UserInformationCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationCreated) ProtoMessage() {}

func (x *UserInformationCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationCreated.ProtoReflect.Descriptor instead.
func (*UserInformationCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{87}
}

func (x *UserInformationCreated) GetPayload() *AnonymousSchema24 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserInformationCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInformationCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserInformationCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInformationCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserInformationCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserInformationCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserInformationCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserInformationCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInformationCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserInformationCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userInformationDisplayNameUpdated/payload
type UserInformationDisplayNameUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema25 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserInformationDisplayNameUpdated) Reset() {
	*x = UserInformationDisplayNameUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationDisplayNameUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationDisplayNameUpdated) ProtoMessage() {}

func (x *UserInformationDisplayNameUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationDisplayNameUpdated.ProtoReflect.Descriptor instead.
func (*UserInformationDisplayNameUpdated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{88}
}

func (x *UserInformationDisplayNameUpdated) GetPayload() *AnonymousSchema25 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserInformationDisplayNameUpdated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInformationDisplayNameUpdated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserInformationDisplayNameUpdated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInformationDisplayNameUpdated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserInformationDisplayNameUpdated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserInformationDisplayNameUpdated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserInformationDisplayNameUpdated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserInformationDisplayNameUpdated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInformationDisplayNameUpdated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserInformationDisplayNameUpdated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userInformationCountryUpdated/payload
type UserInformationCountryUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserInformationCountryUpdatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserInformationCountryUpdated) Reset() {
	*x = UserInformationCountryUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationCountryUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationCountryUpdated) ProtoMessage() {}

func (x *UserInformationCountryUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationCountryUpdated.ProtoReflect.Descriptor instead.
func (*UserInformationCountryUpdated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{89}
}

func (x *UserInformationCountryUpdated) GetPayload() *UserInformationCountryUpdatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserInformationCountryUpdated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInformationCountryUpdated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserInformationCountryUpdated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInformationCountryUpdated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserInformationCountryUpdated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserInformationCountryUpdated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserInformationCountryUpdated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserInformationCountryUpdated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInformationCountryUpdated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserInformationCountryUpdated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userInformationLanguageUpdated/payload
type UserInformationLanguageUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserInformationLanguageUpdatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserInformationLanguageUpdated) Reset() {
	*x = UserInformationLanguageUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationLanguageUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationLanguageUpdated) ProtoMessage() {}

func (x *UserInformationLanguageUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationLanguageUpdated.ProtoReflect.Descriptor instead.
func (*UserInformationLanguageUpdated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{90}
}

func (x *UserInformationLanguageUpdated) GetPayload() *UserInformationLanguageUpdatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserInformationLanguageUpdated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInformationLanguageUpdated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserInformationLanguageUpdated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInformationLanguageUpdated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserInformationLanguageUpdated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserInformationLanguageUpdated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserInformationLanguageUpdated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserInformationLanguageUpdated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInformationLanguageUpdated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserInformationLanguageUpdated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userInformationUsernameUpdated/payload
type UserInformationUsernameUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserInformationUsernameUpdatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserInformationUsernameUpdated) Reset() {
	*x = UserInformationUsernameUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationUsernameUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationUsernameUpdated) ProtoMessage() {}

func (x *UserInformationUsernameUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationUsernameUpdated.ProtoReflect.Descriptor instead.
func (*UserInformationUsernameUpdated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{91}
}

func (x *UserInformationUsernameUpdated) GetPayload() *UserInformationUsernameUpdatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserInformationUsernameUpdated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInformationUsernameUpdated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserInformationUsernameUpdated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInformationUsernameUpdated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserInformationUsernameUpdated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserInformationUsernameUpdated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserInformationUsernameUpdated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserInformationUsernameUpdated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInformationUsernameUpdated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserInformationUsernameUpdated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userInformationDateOfBirthUpdated/payload
type UserInformationDateOfBirthUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserInformationDateOfBirthUpdatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserInformationDateOfBirthUpdated) Reset() {
	*x = UserInformationDateOfBirthUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationDateOfBirthUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationDateOfBirthUpdated) ProtoMessage() {}

func (x *UserInformationDateOfBirthUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationDateOfBirthUpdated.ProtoReflect.Descriptor instead.
func (*UserInformationDateOfBirthUpdated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{92}
}

func (x *UserInformationDateOfBirthUpdated) GetPayload() *UserInformationDateOfBirthUpdatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserInformationDateOfBirthUpdated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInformationDateOfBirthUpdated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserInformationDateOfBirthUpdated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInformationDateOfBirthUpdated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserInformationDateOfBirthUpdated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserInformationDateOfBirthUpdated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserInformationDateOfBirthUpdated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserInformationDateOfBirthUpdated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInformationDateOfBirthUpdated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserInformationDateOfBirthUpdated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userPermissionsCreated/payload
type UserPermissionCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserPermissionsCreatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserPermissionCreated) Reset() {
	*x = UserPermissionCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionCreated) ProtoMessage() {}

func (x *UserPermissionCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionCreated.ProtoReflect.Descriptor instead.
func (*UserPermissionCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{93}
}

func (x *UserPermissionCreated) GetPayload() *UserPermissionsCreatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserPermissionCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserPermissionCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserPermissionCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserPermissionCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserPermissionCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserPermissionCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserPermissionCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserPermissionCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserPermissionCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserPermissionCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userPermissionsDeleted/payload
type UserPermissionDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserPermissionsDeletedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserPermissionDeleted) Reset() {
	*x = UserPermissionDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionDeleted) ProtoMessage() {}

func (x *UserPermissionDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionDeleted.ProtoReflect.Descriptor instead.
func (*UserPermissionDeleted) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{94}
}

func (x *UserPermissionDeleted) GetPayload() *UserPermissionsDeletedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserPermissionDeleted) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserPermissionDeleted) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserPermissionDeleted) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserPermissionDeleted) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserPermissionDeleted) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserPermissionDeleted) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserPermissionDeleted) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserPermissionDeleted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserPermissionDeleted) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserPermissionDeleted) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userRolesCreated/payload
type UserRoleCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserRolesCreatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserRoleCreated) Reset() {
	*x = UserRoleCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRoleCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoleCreated) ProtoMessage() {}

func (x *UserRoleCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoleCreated.ProtoReflect.Descriptor instead.
func (*UserRoleCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{95}
}

func (x *UserRoleCreated) GetPayload() *UserRolesCreatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserRoleCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserRoleCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserRoleCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserRoleCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserRoleCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserRoleCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserRoleCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserRoleCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserRoleCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserRoleCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userRolesDeleted/payload
type UserRoleDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserRolesDeletedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserRoleDeleted) Reset() {
	*x = UserRoleDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRoleDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoleDeleted) ProtoMessage() {}

func (x *UserRoleDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoleDeleted.ProtoReflect.Descriptor instead.
func (*UserRoleDeleted) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{96}
}

func (x *UserRoleDeleted) GetPayload() *UserRolesDeletedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserRoleDeleted) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserRoleDeleted) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserRoleDeleted) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserRoleDeleted) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserRoleDeleted) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserRoleDeleted) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserRoleDeleted) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserRoleDeleted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserRoleDeleted) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserRoleDeleted) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/countryAgeRestrictionCreated/payload
type CountryAgeRestrictionCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *CountryAgeRestrictionCreatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *CountryAgeRestrictionCreated) Reset() {
	*x = CountryAgeRestrictionCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryAgeRestrictionCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryAgeRestrictionCreated) ProtoMessage() {}

func (x *CountryAgeRestrictionCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryAgeRestrictionCreated.ProtoReflect.Descriptor instead.
func (*CountryAgeRestrictionCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{97}
}

func (x *CountryAgeRestrictionCreated) GetPayload() *CountryAgeRestrictionCreatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CountryAgeRestrictionCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CountryAgeRestrictionCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CountryAgeRestrictionCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CountryAgeRestrictionCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CountryAgeRestrictionCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *CountryAgeRestrictionCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *CountryAgeRestrictionCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CountryAgeRestrictionCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CountryAgeRestrictionCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *CountryAgeRestrictionCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/countryAgeRestrictionUpdated/payload
type CountryAgeRestrictionUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *CountryAgeRestrictionUpdatedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *CountryAgeRestrictionUpdated) Reset() {
	*x = CountryAgeRestrictionUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryAgeRestrictionUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryAgeRestrictionUpdated) ProtoMessage() {}

func (x *CountryAgeRestrictionUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryAgeRestrictionUpdated.ProtoReflect.Descriptor instead.
func (*CountryAgeRestrictionUpdated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{98}
}

func (x *CountryAgeRestrictionUpdated) GetPayload() *CountryAgeRestrictionUpdatedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CountryAgeRestrictionUpdated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CountryAgeRestrictionUpdated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CountryAgeRestrictionUpdated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CountryAgeRestrictionUpdated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CountryAgeRestrictionUpdated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *CountryAgeRestrictionUpdated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *CountryAgeRestrictionUpdated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CountryAgeRestrictionUpdated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CountryAgeRestrictionUpdated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *CountryAgeRestrictionUpdated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/chatAllBanned/payload
type ChatAllBanned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *ChatAllBannedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *ChatAllBanned) Reset() {
	*x = ChatAllBanned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatAllBanned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAllBanned) ProtoMessage() {}

func (x *ChatAllBanned) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAllBanned.ProtoReflect.Descriptor instead.
func (*ChatAllBanned) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{99}
}

func (x *ChatAllBanned) GetPayload() *ChatAllBannedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ChatAllBanned) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatAllBanned) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ChatAllBanned) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatAllBanned) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ChatAllBanned) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *ChatAllBanned) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ChatAllBanned) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ChatAllBanned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChatAllBanned) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *ChatAllBanned) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/chatSendBanned/payload
type ChatSendBanned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *ChatSendBannedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *ChatSendBanned) Reset() {
	*x = ChatSendBanned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatSendBanned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatSendBanned) ProtoMessage() {}

func (x *ChatSendBanned) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatSendBanned.ProtoReflect.Descriptor instead.
func (*ChatSendBanned) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{100}
}

func (x *ChatSendBanned) GetPayload() *ChatSendBannedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ChatSendBanned) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatSendBanned) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ChatSendBanned) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatSendBanned) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ChatSendBanned) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *ChatSendBanned) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ChatSendBanned) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ChatSendBanned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChatSendBanned) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *ChatSendBanned) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/leaderboardBanned/payload
type LeaderboardBanned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *LeaderboardBannedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *LeaderboardBanned) Reset() {
	*x = LeaderboardBanned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardBanned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardBanned) ProtoMessage() {}

func (x *LeaderboardBanned) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardBanned.ProtoReflect.Descriptor instead.
func (*LeaderboardBanned) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{101}
}

func (x *LeaderboardBanned) GetPayload() *LeaderboardBannedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *LeaderboardBanned) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LeaderboardBanned) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *LeaderboardBanned) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LeaderboardBanned) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *LeaderboardBanned) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *LeaderboardBanned) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *LeaderboardBanned) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LeaderboardBanned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LeaderboardBanned) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *LeaderboardBanned) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/statisticsBanned/payload
type StatisticsBanned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *StatisticsBannedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *StatisticsBanned) Reset() {
	*x = StatisticsBanned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsBanned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsBanned) ProtoMessage() {}

func (x *StatisticsBanned) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsBanned.ProtoReflect.Descriptor instead.
func (*StatisticsBanned) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{102}
}

func (x *StatisticsBanned) GetPayload() *StatisticsBannedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StatisticsBanned) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StatisticsBanned) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StatisticsBanned) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StatisticsBanned) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *StatisticsBanned) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *StatisticsBanned) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *StatisticsBanned) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *StatisticsBanned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StatisticsBanned) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *StatisticsBanned) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/orderAndPaymentBanned/payload
type OrderAndPaymentBanned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *OrderAndPaymentBannedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *OrderAndPaymentBanned) Reset() {
	*x = OrderAndPaymentBanned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAndPaymentBanned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAndPaymentBanned) ProtoMessage() {}

func (x *OrderAndPaymentBanned) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAndPaymentBanned.ProtoReflect.Descriptor instead.
func (*OrderAndPaymentBanned) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{103}
}

func (x *OrderAndPaymentBanned) GetPayload() *OrderAndPaymentBannedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *OrderAndPaymentBanned) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderAndPaymentBanned) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *OrderAndPaymentBanned) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderAndPaymentBanned) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *OrderAndPaymentBanned) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *OrderAndPaymentBanned) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *OrderAndPaymentBanned) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OrderAndPaymentBanned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OrderAndPaymentBanned) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *OrderAndPaymentBanned) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/matchmakingBanned/payload
type MatchmakingBanned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *MatchmakingBannedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *MatchmakingBanned) Reset() {
	*x = MatchmakingBanned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchmakingBanned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchmakingBanned) ProtoMessage() {}

func (x *MatchmakingBanned) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchmakingBanned.ProtoReflect.Descriptor instead.
func (*MatchmakingBanned) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{104}
}

func (x *MatchmakingBanned) GetPayload() *MatchmakingBannedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *MatchmakingBanned) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MatchmakingBanned) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MatchmakingBanned) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MatchmakingBanned) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *MatchmakingBanned) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *MatchmakingBanned) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *MatchmakingBanned) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *MatchmakingBanned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MatchmakingBanned) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *MatchmakingBanned) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/ugcCreateUpdateBanned/payload
type UgcCreateUpdateBanned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UgcCreateUpdateBannedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UgcCreateUpdateBanned) Reset() {
	*x = UgcCreateUpdateBanned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcCreateUpdateBanned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcCreateUpdateBanned) ProtoMessage() {}

func (x *UgcCreateUpdateBanned) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcCreateUpdateBanned.ProtoReflect.Descriptor instead.
func (*UgcCreateUpdateBanned) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{105}
}

func (x *UgcCreateUpdateBanned) GetPayload() *UgcCreateUpdateBannedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UgcCreateUpdateBanned) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UgcCreateUpdateBanned) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UgcCreateUpdateBanned) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UgcCreateUpdateBanned) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UgcCreateUpdateBanned) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UgcCreateUpdateBanned) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UgcCreateUpdateBanned) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UgcCreateUpdateBanned) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UgcCreateUpdateBanned) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UgcCreateUpdateBanned) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userDisconnectRequested/payload
type UserDisconnectRequested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserDisconnectRequestedPayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UserDisconnectRequested) Reset() {
	*x = UserDisconnectRequested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDisconnectRequested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDisconnectRequested) ProtoMessage() {}

func (x *UserDisconnectRequested) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDisconnectRequested.ProtoReflect.Descriptor instead.
func (*UserDisconnectRequested) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{106}
}

func (x *UserDisconnectRequested) GetPayload() *UserDisconnectRequestedPayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserDisconnectRequested) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserDisconnectRequested) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UserDisconnectRequested) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserDisconnectRequested) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserDisconnectRequested) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *UserDisconnectRequested) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UserDisconnectRequested) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserDisconnectRequested) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserDisconnectRequested) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserDisconnectRequested) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/gdprRequestDataDeletionResponse/payload
type GdprRequestDataDeletionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *GdprRequestDataDeletionResponsePayloadData `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parent_namespace,json=parentNamespace,proto3" json:"parent_namespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *GdprRequestDataDeletionResponse) Reset() {
	*x = GdprRequestDataDeletionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdprRequestDataDeletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdprRequestDataDeletionResponse) ProtoMessage() {}

func (x *GdprRequestDataDeletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdprRequestDataDeletionResponse.ProtoReflect.Descriptor instead.
func (*GdprRequestDataDeletionResponse) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{107}
}

func (x *GdprRequestDataDeletionResponse) GetPayload() *GdprRequestDataDeletionResponsePayloadData {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GdprRequestDataDeletionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GdprRequestDataDeletionResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GdprRequestDataDeletionResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GdprRequestDataDeletionResponse) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GdprRequestDataDeletionResponse) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *GdprRequestDataDeletionResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GdprRequestDataDeletionResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GdprRequestDataDeletionResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GdprRequestDataDeletionResponse) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *GdprRequestDataDeletionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/userAccountCreated
type UserAccountCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountCreatedMessage) Reset() {
	*x = UserAccountCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountCreatedMessage) ProtoMessage() {}

func (x *UserAccountCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountCreatedMessage.ProtoReflect.Descriptor instead.
func (*UserAccountCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{108}
}

func (x *UserAccountCreatedMessage) GetPayload() *UserAccountCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountDeleted
type UserAccountDeletedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountDeleted `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountDeletedMessage) Reset() {
	*x = UserAccountDeletedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountDeletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountDeletedMessage) ProtoMessage() {}

func (x *UserAccountDeletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountDeletedMessage.ProtoReflect.Descriptor instead.
func (*UserAccountDeletedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{109}
}

func (x *UserAccountDeletedMessage) GetPayload() *UserAccountDeleted {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountEnabled
type UserAccountEnabledMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountEnabled `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountEnabledMessage) Reset() {
	*x = UserAccountEnabledMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountEnabledMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountEnabledMessage) ProtoMessage() {}

func (x *UserAccountEnabledMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountEnabledMessage.ProtoReflect.Descriptor instead.
func (*UserAccountEnabledMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{110}
}

func (x *UserAccountEnabledMessage) GetPayload() *UserAccountEnabled {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountDisabled
type UserAccountDisabledMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountDisabled `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountDisabledMessage) Reset() {
	*x = UserAccountDisabledMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountDisabledMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountDisabledMessage) ProtoMessage() {}

func (x *UserAccountDisabledMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountDisabledMessage.ProtoReflect.Descriptor instead.
func (*UserAccountDisabledMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{111}
}

func (x *UserAccountDisabledMessage) GetPayload() *UserAccountDisabled {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountEmailUpdated
type UserAccountEmailUpdatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountEmailUpdated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountEmailUpdatedMessage) Reset() {
	*x = UserAccountEmailUpdatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountEmailUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountEmailUpdatedMessage) ProtoMessage() {}

func (x *UserAccountEmailUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountEmailUpdatedMessage.ProtoReflect.Descriptor instead.
func (*UserAccountEmailUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{112}
}

func (x *UserAccountEmailUpdatedMessage) GetPayload() *UserAccountEmailUpdated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountPasswordUpdated
type UserAccountPasswordUpdatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountPasswordUpdated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountPasswordUpdatedMessage) Reset() {
	*x = UserAccountPasswordUpdatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountPasswordUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountPasswordUpdatedMessage) ProtoMessage() {}

func (x *UserAccountPasswordUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountPasswordUpdatedMessage.ProtoReflect.Descriptor instead.
func (*UserAccountPasswordUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{113}
}

func (x *UserAccountPasswordUpdatedMessage) GetPayload() *UserAccountPasswordUpdated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountBanned
type UserAccountBannedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountBanned `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountBannedMessage) Reset() {
	*x = UserAccountBannedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountBannedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountBannedMessage) ProtoMessage() {}

func (x *UserAccountBannedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountBannedMessage.ProtoReflect.Descriptor instead.
func (*UserAccountBannedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{114}
}

func (x *UserAccountBannedMessage) GetPayload() *UserAccountBanned {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountUnbanned
type UserAccountUnbannedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountUnbanned `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountUnbannedMessage) Reset() {
	*x = UserAccountUnbannedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountUnbannedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountUnbannedMessage) ProtoMessage() {}

func (x *UserAccountUnbannedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountUnbannedMessage.ProtoReflect.Descriptor instead.
func (*UserAccountUnbannedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{115}
}

func (x *UserAccountUnbannedMessage) GetPayload() *UserAccountUnbanned {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountVerified
type UserAccountVerifiedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountVerified `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountVerifiedMessage) Reset() {
	*x = UserAccountVerifiedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountVerifiedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountVerifiedMessage) ProtoMessage() {}

func (x *UserAccountVerifiedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountVerifiedMessage.ProtoReflect.Descriptor instead.
func (*UserAccountVerifiedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{116}
}

func (x *UserAccountVerifiedMessage) GetPayload() *UserAccountVerified {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountLinked
type UserAccountLinkedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountLinked `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountLinkedMessage) Reset() {
	*x = UserAccountLinkedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountLinkedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountLinkedMessage) ProtoMessage() {}

func (x *UserAccountLinkedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountLinkedMessage.ProtoReflect.Descriptor instead.
func (*UserAccountLinkedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{117}
}

func (x *UserAccountLinkedMessage) GetPayload() *UserAccountLinked {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountUnlinked
type UserAccountUnlinkedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountUnlinked `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountUnlinkedMessage) Reset() {
	*x = UserAccountUnlinkedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountUnlinkedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountUnlinkedMessage) ProtoMessage() {}

func (x *UserAccountUnlinkedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountUnlinkedMessage.ProtoReflect.Descriptor instead.
func (*UserAccountUnlinkedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{118}
}

func (x *UserAccountUnlinkedMessage) GetPayload() *UserAccountUnlinked {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountUpgraded
type UserAccountUpgradedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountUpgraded `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountUpgradedMessage) Reset() {
	*x = UserAccountUpgradedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountUpgradedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountUpgradedMessage) ProtoMessage() {}

func (x *UserAccountUpgradedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountUpgradedMessage.ProtoReflect.Descriptor instead.
func (*UserAccountUpgradedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{119}
}

func (x *UserAccountUpgradedMessage) GetPayload() *UserAccountUpgraded {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/gameUserAccountCreated
type GameUserAccountCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *GameUserAccountCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GameUserAccountCreatedMessage) Reset() {
	*x = GameUserAccountCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUserAccountCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserAccountCreatedMessage) ProtoMessage() {}

func (x *GameUserAccountCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserAccountCreatedMessage.ProtoReflect.Descriptor instead.
func (*GameUserAccountCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{120}
}

func (x *GameUserAccountCreatedMessage) GetPayload() *GameUserAccountCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/gameUserCreated
type GameUserCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *GameUserCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GameUserCreatedMessage) Reset() {
	*x = GameUserCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUserCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserCreatedMessage) ProtoMessage() {}

func (x *GameUserCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserCreatedMessage.ProtoReflect.Descriptor instead.
func (*GameUserCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{121}
}

func (x *GameUserCreatedMessage) GetPayload() *GameUserCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/thirdPartyAccountCreated
type ThirdPartyAccountCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *ThirdPartyAccountCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ThirdPartyAccountCreatedMessage) Reset() {
	*x = ThirdPartyAccountCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdPartyAccountCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdPartyAccountCreatedMessage) ProtoMessage() {}

func (x *ThirdPartyAccountCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdPartyAccountCreatedMessage.ProtoReflect.Descriptor instead.
func (*ThirdPartyAccountCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{122}
}

func (x *ThirdPartyAccountCreatedMessage) GetPayload() *ThirdPartyAccountCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userAccountTypeChanged
type UserAccountTypeChangedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserAccountTypeChanged `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserAccountTypeChangedMessage) Reset() {
	*x = UserAccountTypeChangedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountTypeChangedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountTypeChangedMessage) ProtoMessage() {}

func (x *UserAccountTypeChangedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountTypeChangedMessage.ProtoReflect.Descriptor instead.
func (*UserAccountTypeChangedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{123}
}

func (x *UserAccountTypeChangedMessage) GetPayload() *UserAccountTypeChanged {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userLoggedIn
type UserLoggedInMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserLoggedIn `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserLoggedInMessage) Reset() {
	*x = UserLoggedInMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoggedInMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoggedInMessage) ProtoMessage() {}

func (x *UserLoggedInMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoggedInMessage.ProtoReflect.Descriptor instead.
func (*UserLoggedInMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{124}
}

func (x *UserLoggedInMessage) GetPayload() *UserLoggedIn {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userLoggedOut
type UserLoggedOutMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserLoggedOut `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserLoggedOutMessage) Reset() {
	*x = UserLoggedOutMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoggedOutMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoggedOutMessage) ProtoMessage() {}

func (x *UserLoggedOutMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoggedOutMessage.ProtoReflect.Descriptor instead.
func (*UserLoggedOutMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{125}
}

func (x *UserLoggedOutMessage) GetPayload() *UserLoggedOut {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userThirdPartyLoggedIn
type UserThirdPartyLoggedInMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserThirdPartyLoggedIn `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserThirdPartyLoggedInMessage) Reset() {
	*x = UserThirdPartyLoggedInMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserThirdPartyLoggedInMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserThirdPartyLoggedInMessage) ProtoMessage() {}

func (x *UserThirdPartyLoggedInMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserThirdPartyLoggedInMessage.ProtoReflect.Descriptor instead.
func (*UserThirdPartyLoggedInMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{126}
}

func (x *UserThirdPartyLoggedInMessage) GetPayload() *UserThirdPartyLoggedIn {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userLoginFailed
type UserLoginFailedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserLoginFailed `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserLoginFailedMessage) Reset() {
	*x = UserLoginFailedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginFailedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginFailedMessage) ProtoMessage() {}

func (x *UserLoginFailedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginFailedMessage.ProtoReflect.Descriptor instead.
func (*UserLoginFailedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{127}
}

func (x *UserLoginFailedMessage) GetPayload() *UserLoginFailed {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userThirdPartyLoginFailed
type UserThirdPartyLoginFailedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserThirdPartyLoginFailed `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserThirdPartyLoginFailedMessage) Reset() {
	*x = UserThirdPartyLoginFailedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserThirdPartyLoginFailedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserThirdPartyLoginFailedMessage) ProtoMessage() {}

func (x *UserThirdPartyLoginFailedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserThirdPartyLoginFailedMessage.ProtoReflect.Descriptor instead.
func (*UserThirdPartyLoginFailedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{128}
}

func (x *UserThirdPartyLoginFailedMessage) GetPayload() *UserThirdPartyLoginFailed {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userInformationCreated
type UserInformationCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserInformationCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserInformationCreatedMessage) Reset() {
	*x = UserInformationCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationCreatedMessage) ProtoMessage() {}

func (x *UserInformationCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationCreatedMessage.ProtoReflect.Descriptor instead.
func (*UserInformationCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{129}
}

func (x *UserInformationCreatedMessage) GetPayload() *UserInformationCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userInformationDisplayNameUpdated
type UserInformationDisplayNameUpdatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserInformationDisplayNameUpdated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserInformationDisplayNameUpdatedMessage) Reset() {
	*x = UserInformationDisplayNameUpdatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationDisplayNameUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationDisplayNameUpdatedMessage) ProtoMessage() {}

func (x *UserInformationDisplayNameUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationDisplayNameUpdatedMessage.ProtoReflect.Descriptor instead.
func (*UserInformationDisplayNameUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{130}
}

func (x *UserInformationDisplayNameUpdatedMessage) GetPayload() *UserInformationDisplayNameUpdated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userInformationCountryUpdated
type UserInformationCountryUpdatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserInformationCountryUpdated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserInformationCountryUpdatedMessage) Reset() {
	*x = UserInformationCountryUpdatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationCountryUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationCountryUpdatedMessage) ProtoMessage() {}

func (x *UserInformationCountryUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationCountryUpdatedMessage.ProtoReflect.Descriptor instead.
func (*UserInformationCountryUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{131}
}

func (x *UserInformationCountryUpdatedMessage) GetPayload() *UserInformationCountryUpdated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userInformationLanguageUpdated
type UserInformationLanguageUpdatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserInformationLanguageUpdated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserInformationLanguageUpdatedMessage) Reset() {
	*x = UserInformationLanguageUpdatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationLanguageUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationLanguageUpdatedMessage) ProtoMessage() {}

func (x *UserInformationLanguageUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationLanguageUpdatedMessage.ProtoReflect.Descriptor instead.
func (*UserInformationLanguageUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{132}
}

func (x *UserInformationLanguageUpdatedMessage) GetPayload() *UserInformationLanguageUpdated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userInformationUsernameUpdated
type UserInformationUsernameUpdatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserInformationUsernameUpdated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserInformationUsernameUpdatedMessage) Reset() {
	*x = UserInformationUsernameUpdatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationUsernameUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationUsernameUpdatedMessage) ProtoMessage() {}

func (x *UserInformationUsernameUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationUsernameUpdatedMessage.ProtoReflect.Descriptor instead.
func (*UserInformationUsernameUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{133}
}

func (x *UserInformationUsernameUpdatedMessage) GetPayload() *UserInformationUsernameUpdated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userInformationDateOfBirthUpdated
type UserInformationDateOfBirthUpdatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserInformationDateOfBirthUpdated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserInformationDateOfBirthUpdatedMessage) Reset() {
	*x = UserInformationDateOfBirthUpdatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationDateOfBirthUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationDateOfBirthUpdatedMessage) ProtoMessage() {}

func (x *UserInformationDateOfBirthUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationDateOfBirthUpdatedMessage.ProtoReflect.Descriptor instead.
func (*UserInformationDateOfBirthUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{134}
}

func (x *UserInformationDateOfBirthUpdatedMessage) GetPayload() *UserInformationDateOfBirthUpdated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userPermissionsCreated
type UserPermissionsCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserPermissionCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserPermissionsCreatedMessage) Reset() {
	*x = UserPermissionsCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionsCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionsCreatedMessage) ProtoMessage() {}

func (x *UserPermissionsCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionsCreatedMessage.ProtoReflect.Descriptor instead.
func (*UserPermissionsCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{135}
}

func (x *UserPermissionsCreatedMessage) GetPayload() *UserPermissionCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userPermissionsDeleted
type UserPermissionsDeletedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserPermissionDeleted `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserPermissionsDeletedMessage) Reset() {
	*x = UserPermissionsDeletedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionsDeletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionsDeletedMessage) ProtoMessage() {}

func (x *UserPermissionsDeletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionsDeletedMessage.ProtoReflect.Descriptor instead.
func (*UserPermissionsDeletedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{136}
}

func (x *UserPermissionsDeletedMessage) GetPayload() *UserPermissionDeleted {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userRolesCreated
type UserRolesCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserRoleCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserRolesCreatedMessage) Reset() {
	*x = UserRolesCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRolesCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRolesCreatedMessage) ProtoMessage() {}

func (x *UserRolesCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRolesCreatedMessage.ProtoReflect.Descriptor instead.
func (*UserRolesCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{137}
}

func (x *UserRolesCreatedMessage) GetPayload() *UserRoleCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userRolesDeleted
type UserRolesDeletedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserRoleDeleted `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserRolesDeletedMessage) Reset() {
	*x = UserRolesDeletedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRolesDeletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRolesDeletedMessage) ProtoMessage() {}

func (x *UserRolesDeletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRolesDeletedMessage.ProtoReflect.Descriptor instead.
func (*UserRolesDeletedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{138}
}

func (x *UserRolesDeletedMessage) GetPayload() *UserRoleDeleted {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/countryAgeRestrictionCreated
type CountryAgeRestrictionCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *CountryAgeRestrictionCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CountryAgeRestrictionCreatedMessage) Reset() {
	*x = CountryAgeRestrictionCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryAgeRestrictionCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryAgeRestrictionCreatedMessage) ProtoMessage() {}

func (x *CountryAgeRestrictionCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryAgeRestrictionCreatedMessage.ProtoReflect.Descriptor instead.
func (*CountryAgeRestrictionCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{139}
}

func (x *CountryAgeRestrictionCreatedMessage) GetPayload() *CountryAgeRestrictionCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/countryAgeRestrictionUpdated
type CountryAgeRestrictionUpdatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *CountryAgeRestrictionUpdated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CountryAgeRestrictionUpdatedMessage) Reset() {
	*x = CountryAgeRestrictionUpdatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryAgeRestrictionUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryAgeRestrictionUpdatedMessage) ProtoMessage() {}

func (x *CountryAgeRestrictionUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryAgeRestrictionUpdatedMessage.ProtoReflect.Descriptor instead.
func (*CountryAgeRestrictionUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{140}
}

func (x *CountryAgeRestrictionUpdatedMessage) GetPayload() *CountryAgeRestrictionUpdated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/chatAllBanned
type ChatAllBannedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *ChatAllBanned `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ChatAllBannedMessage) Reset() {
	*x = ChatAllBannedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatAllBannedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAllBannedMessage) ProtoMessage() {}

func (x *ChatAllBannedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAllBannedMessage.ProtoReflect.Descriptor instead.
func (*ChatAllBannedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{141}
}

func (x *ChatAllBannedMessage) GetPayload() *ChatAllBanned {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/chatSendBanned
type ChatSendBannedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *ChatSendBanned `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ChatSendBannedMessage) Reset() {
	*x = ChatSendBannedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatSendBannedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatSendBannedMessage) ProtoMessage() {}

func (x *ChatSendBannedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatSendBannedMessage.ProtoReflect.Descriptor instead.
func (*ChatSendBannedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{142}
}

func (x *ChatSendBannedMessage) GetPayload() *ChatSendBanned {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/leaderboardBanned
type LeaderboardBannedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *LeaderboardBanned `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *LeaderboardBannedMessage) Reset() {
	*x = LeaderboardBannedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardBannedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardBannedMessage) ProtoMessage() {}

func (x *LeaderboardBannedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardBannedMessage.ProtoReflect.Descriptor instead.
func (*LeaderboardBannedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{143}
}

func (x *LeaderboardBannedMessage) GetPayload() *LeaderboardBanned {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/statisticsBanned
type StatisticsBannedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *StatisticsBanned `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *StatisticsBannedMessage) Reset() {
	*x = StatisticsBannedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsBannedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsBannedMessage) ProtoMessage() {}

func (x *StatisticsBannedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsBannedMessage.ProtoReflect.Descriptor instead.
func (*StatisticsBannedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{144}
}

func (x *StatisticsBannedMessage) GetPayload() *StatisticsBanned {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/orderAndPaymentBanned
type OrderAndPaymentBannedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *OrderAndPaymentBanned `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *OrderAndPaymentBannedMessage) Reset() {
	*x = OrderAndPaymentBannedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAndPaymentBannedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAndPaymentBannedMessage) ProtoMessage() {}

func (x *OrderAndPaymentBannedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAndPaymentBannedMessage.ProtoReflect.Descriptor instead.
func (*OrderAndPaymentBannedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{145}
}

func (x *OrderAndPaymentBannedMessage) GetPayload() *OrderAndPaymentBanned {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/matchmakingBanned
type MatchmakingBannedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *MatchmakingBanned `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *MatchmakingBannedMessage) Reset() {
	*x = MatchmakingBannedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchmakingBannedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchmakingBannedMessage) ProtoMessage() {}

func (x *MatchmakingBannedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchmakingBannedMessage.ProtoReflect.Descriptor instead.
func (*MatchmakingBannedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{146}
}

func (x *MatchmakingBannedMessage) GetPayload() *MatchmakingBanned {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/ugcCreateUpdateBanned
type UgcCreateUpdateBannedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UgcCreateUpdateBanned `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UgcCreateUpdateBannedMessage) Reset() {
	*x = UgcCreateUpdateBannedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcCreateUpdateBannedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcCreateUpdateBannedMessage) ProtoMessage() {}

func (x *UgcCreateUpdateBannedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcCreateUpdateBannedMessage.ProtoReflect.Descriptor instead.
func (*UgcCreateUpdateBannedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{147}
}

func (x *UgcCreateUpdateBannedMessage) GetPayload() *UgcCreateUpdateBanned {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/userDisconnectRequested
type UserDisconnectRequestedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *UserDisconnectRequested `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UserDisconnectRequestedMessage) Reset() {
	*x = UserDisconnectRequestedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDisconnectRequestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDisconnectRequestedMessage) ProtoMessage() {}

func (x *UserDisconnectRequestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDisconnectRequestedMessage.ProtoReflect.Descriptor instead.
func (*UserDisconnectRequestedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{148}
}

func (x *UserDisconnectRequestedMessage) GetPayload() *UserDisconnectRequested {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/gdprRequestDataDeletionResponse
type GdprRequestDataDeletionResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *GdprRequestDataDeletionResponse `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GdprRequestDataDeletionResponseMessage) Reset() {
	*x = GdprRequestDataDeletionResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdprRequestDataDeletionResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdprRequestDataDeletionResponseMessage) ProtoMessage() {}

func (x *GdprRequestDataDeletionResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdprRequestDataDeletionResponseMessage.ProtoReflect.Descriptor instead.
func (*GdprRequestDataDeletionResponseMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{149}
}

func (x *GdprRequestDataDeletionResponseMessage) GetPayload() *GdprRequestDataDeletionResponse {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/channels/userAccount/publish/message
type UserAccountPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*UserAccountPublish_Variant0
	//	*UserAccountPublish_Variant1
	//	*UserAccountPublish_Variant2
	//	*UserAccountPublish_Variant3
	//	*UserAccountPublish_Variant4
	//	*UserAccountPublish_Variant5
	//	*UserAccountPublish_Variant6
	//	*UserAccountPublish_Variant7
	//	*UserAccountPublish_Variant8
	//	*UserAccountPublish_Variant9
	//	*UserAccountPublish_Variant10
	//	*UserAccountPublish_Variant11
	//	*UserAccountPublish_Variant12
	//	*UserAccountPublish_Variant13
	//	*UserAccountPublish_Variant14
	Payload isUserAccountPublish_Payload `protobuf_oneof:"payload"`
}

func (x *UserAccountPublish) Reset() {
	*x = UserAccountPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountPublish) ProtoMessage() {}

func (x *UserAccountPublish) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountPublish.ProtoReflect.Descriptor instead.
func (*UserAccountPublish) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{150}
}

func (m *UserAccountPublish) GetPayload() isUserAccountPublish_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *UserAccountPublish) GetVariant0() *UserAccountCreatedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant0); ok {
		return x.Variant0
	}
	return nil
}

func (x *UserAccountPublish) GetVariant1() *UserAccountDeletedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant1); ok {
		return x.Variant1
	}
	return nil
}

func (x *UserAccountPublish) GetVariant2() *UserAccountEnabledMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant2); ok {
		return x.Variant2
	}
	return nil
}

func (x *UserAccountPublish) GetVariant3() *UserAccountDisabledMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant3); ok {
		return x.Variant3
	}
	return nil
}

func (x *UserAccountPublish) GetVariant4() *UserAccountEmailUpdatedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant4); ok {
		return x.Variant4
	}
	return nil
}

func (x *UserAccountPublish) GetVariant5() *UserAccountPasswordUpdatedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant5); ok {
		return x.Variant5
	}
	return nil
}

func (x *UserAccountPublish) GetVariant6() *UserAccountBannedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant6); ok {
		return x.Variant6
	}
	return nil
}

func (x *UserAccountPublish) GetVariant7() *UserAccountUnbannedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant7); ok {
		return x.Variant7
	}
	return nil
}

func (x *UserAccountPublish) GetVariant8() *UserAccountVerifiedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant8); ok {
		return x.Variant8
	}
	return nil
}

func (x *UserAccountPublish) GetVariant9() *UserAccountLinkedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant9); ok {
		return x.Variant9
	}
	return nil
}

func (x *UserAccountPublish) GetVariant10() *UserAccountUnlinkedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant10); ok {
		return x.Variant10
	}
	return nil
}

func (x *UserAccountPublish) GetVariant11() *UserAccountUpgradedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant11); ok {
		return x.Variant11
	}
	return nil
}

func (x *UserAccountPublish) GetVariant12() *GameUserAccountCreatedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant12); ok {
		return x.Variant12
	}
	return nil
}

func (x *UserAccountPublish) GetVariant13() *ThirdPartyAccountCreatedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant13); ok {
		return x.Variant13
	}
	return nil
}

func (x *UserAccountPublish) GetVariant14() *UserAccountTypeChangedMessage {
	if x, ok := x.GetPayload().(*UserAccountPublish_Variant14); ok {
		return x.Variant14
	}
	return nil
}

type isUserAccountPublish_Payload interface {
	isUserAccountPublish_Payload()
}

type UserAccountPublish_Variant0 struct {
	Variant0 *UserAccountCreatedMessage `protobuf:"bytes,1,opt,name=variant0,proto3,oneof"`
}

type UserAccountPublish_Variant1 struct {
	Variant1 *UserAccountDeletedMessage `protobuf:"bytes,2,opt,name=variant1,proto3,oneof"`
}

type UserAccountPublish_Variant2 struct {
	Variant2 *UserAccountEnabledMessage `protobuf:"bytes,3,opt,name=variant2,proto3,oneof"`
}

type UserAccountPublish_Variant3 struct {
	Variant3 *UserAccountDisabledMessage `protobuf:"bytes,4,opt,name=variant3,proto3,oneof"`
}

type UserAccountPublish_Variant4 struct {
	Variant4 *UserAccountEmailUpdatedMessage `protobuf:"bytes,5,opt,name=variant4,proto3,oneof"`
}

type UserAccountPublish_Variant5 struct {
	Variant5 *UserAccountPasswordUpdatedMessage `protobuf:"bytes,6,opt,name=variant5,proto3,oneof"`
}

type UserAccountPublish_Variant6 struct {
	Variant6 *UserAccountBannedMessage `protobuf:"bytes,7,opt,name=variant6,proto3,oneof"`
}

type UserAccountPublish_Variant7 struct {
	Variant7 *UserAccountUnbannedMessage `protobuf:"bytes,8,opt,name=variant7,proto3,oneof"`
}

type UserAccountPublish_Variant8 struct {
	Variant8 *UserAccountVerifiedMessage `protobuf:"bytes,9,opt,name=variant8,proto3,oneof"`
}

type UserAccountPublish_Variant9 struct {
	Variant9 *UserAccountLinkedMessage `protobuf:"bytes,10,opt,name=variant9,proto3,oneof"`
}

type UserAccountPublish_Variant10 struct {
	Variant10 *UserAccountUnlinkedMessage `protobuf:"bytes,11,opt,name=variant10,proto3,oneof"`
}

type UserAccountPublish_Variant11 struct {
	Variant11 *UserAccountUpgradedMessage `protobuf:"bytes,12,opt,name=variant11,proto3,oneof"`
}

type UserAccountPublish_Variant12 struct {
	Variant12 *GameUserAccountCreatedMessage `protobuf:"bytes,13,opt,name=variant12,proto3,oneof"`
}

type UserAccountPublish_Variant13 struct {
	Variant13 *ThirdPartyAccountCreatedMessage `protobuf:"bytes,14,opt,name=variant13,proto3,oneof"`
}

type UserAccountPublish_Variant14 struct {
	Variant14 *UserAccountTypeChangedMessage `protobuf:"bytes,15,opt,name=variant14,proto3,oneof"`
}

func (*UserAccountPublish_Variant0) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant1) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant2) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant3) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant4) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant5) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant6) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant7) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant8) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant9) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant10) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant11) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant12) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant13) isUserAccountPublish_Payload() {}

func (*UserAccountPublish_Variant14) isUserAccountPublish_Payload() {}

// path: #/channels/userAuthentication/publish/message
type UserAuthenticationPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*UserAuthenticationPublish_Variant0
	//	*UserAuthenticationPublish_Variant1
	//	*UserAuthenticationPublish_Variant2
	//	*UserAuthenticationPublish_Variant3
	//	*UserAuthenticationPublish_Variant4
	Payload isUserAuthenticationPublish_Payload `protobuf_oneof:"payload"`
}

func (x *UserAuthenticationPublish) Reset() {
	*x = UserAuthenticationPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAuthenticationPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthenticationPublish) ProtoMessage() {}

func (x *UserAuthenticationPublish) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthenticationPublish.ProtoReflect.Descriptor instead.
func (*UserAuthenticationPublish) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{151}
}

func (m *UserAuthenticationPublish) GetPayload() isUserAuthenticationPublish_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *UserAuthenticationPublish) GetVariant0() *UserLoggedInMessage {
	if x, ok := x.GetPayload().(*UserAuthenticationPublish_Variant0); ok {
		return x.Variant0
	}
	return nil
}

func (x *UserAuthenticationPublish) GetVariant1() *UserLoggedOutMessage {
	if x, ok := x.GetPayload().(*UserAuthenticationPublish_Variant1); ok {
		return x.Variant1
	}
	return nil
}

func (x *UserAuthenticationPublish) GetVariant2() *UserThirdPartyLoggedInMessage {
	if x, ok := x.GetPayload().(*UserAuthenticationPublish_Variant2); ok {
		return x.Variant2
	}
	return nil
}

func (x *UserAuthenticationPublish) GetVariant3() *UserLoginFailedMessage {
	if x, ok := x.GetPayload().(*UserAuthenticationPublish_Variant3); ok {
		return x.Variant3
	}
	return nil
}

func (x *UserAuthenticationPublish) GetVariant4() *UserThirdPartyLoginFailedMessage {
	if x, ok := x.GetPayload().(*UserAuthenticationPublish_Variant4); ok {
		return x.Variant4
	}
	return nil
}

type isUserAuthenticationPublish_Payload interface {
	isUserAuthenticationPublish_Payload()
}

type UserAuthenticationPublish_Variant0 struct {
	Variant0 *UserLoggedInMessage `protobuf:"bytes,1,opt,name=variant0,proto3,oneof"`
}

type UserAuthenticationPublish_Variant1 struct {
	Variant1 *UserLoggedOutMessage `protobuf:"bytes,2,opt,name=variant1,proto3,oneof"`
}

type UserAuthenticationPublish_Variant2 struct {
	Variant2 *UserThirdPartyLoggedInMessage `protobuf:"bytes,3,opt,name=variant2,proto3,oneof"`
}

type UserAuthenticationPublish_Variant3 struct {
	Variant3 *UserLoginFailedMessage `protobuf:"bytes,4,opt,name=variant3,proto3,oneof"`
}

type UserAuthenticationPublish_Variant4 struct {
	Variant4 *UserThirdPartyLoginFailedMessage `protobuf:"bytes,5,opt,name=variant4,proto3,oneof"`
}

func (*UserAuthenticationPublish_Variant0) isUserAuthenticationPublish_Payload() {}

func (*UserAuthenticationPublish_Variant1) isUserAuthenticationPublish_Payload() {}

func (*UserAuthenticationPublish_Variant2) isUserAuthenticationPublish_Payload() {}

func (*UserAuthenticationPublish_Variant3) isUserAuthenticationPublish_Payload() {}

func (*UserAuthenticationPublish_Variant4) isUserAuthenticationPublish_Payload() {}

// path: #/channels/userInformation/publish/message
type UserInformationPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*UserInformationPublish_Variant0
	//	*UserInformationPublish_Variant1
	//	*UserInformationPublish_Variant2
	//	*UserInformationPublish_Variant3
	//	*UserInformationPublish_Variant4
	//	*UserInformationPublish_Variant5
	Payload isUserInformationPublish_Payload `protobuf_oneof:"payload"`
}

func (x *UserInformationPublish) Reset() {
	*x = UserInformationPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInformationPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInformationPublish) ProtoMessage() {}

func (x *UserInformationPublish) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInformationPublish.ProtoReflect.Descriptor instead.
func (*UserInformationPublish) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{152}
}

func (m *UserInformationPublish) GetPayload() isUserInformationPublish_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *UserInformationPublish) GetVariant0() *UserInformationCreatedMessage {
	if x, ok := x.GetPayload().(*UserInformationPublish_Variant0); ok {
		return x.Variant0
	}
	return nil
}

func (x *UserInformationPublish) GetVariant1() *UserInformationDisplayNameUpdatedMessage {
	if x, ok := x.GetPayload().(*UserInformationPublish_Variant1); ok {
		return x.Variant1
	}
	return nil
}

func (x *UserInformationPublish) GetVariant2() *UserInformationCountryUpdatedMessage {
	if x, ok := x.GetPayload().(*UserInformationPublish_Variant2); ok {
		return x.Variant2
	}
	return nil
}

func (x *UserInformationPublish) GetVariant3() *UserInformationLanguageUpdatedMessage {
	if x, ok := x.GetPayload().(*UserInformationPublish_Variant3); ok {
		return x.Variant3
	}
	return nil
}

func (x *UserInformationPublish) GetVariant4() *UserInformationDateOfBirthUpdatedMessage {
	if x, ok := x.GetPayload().(*UserInformationPublish_Variant4); ok {
		return x.Variant4
	}
	return nil
}

func (x *UserInformationPublish) GetVariant5() *UserInformationUsernameUpdatedMessage {
	if x, ok := x.GetPayload().(*UserInformationPublish_Variant5); ok {
		return x.Variant5
	}
	return nil
}

type isUserInformationPublish_Payload interface {
	isUserInformationPublish_Payload()
}

type UserInformationPublish_Variant0 struct {
	Variant0 *UserInformationCreatedMessage `protobuf:"bytes,1,opt,name=variant0,proto3,oneof"`
}

type UserInformationPublish_Variant1 struct {
	Variant1 *UserInformationDisplayNameUpdatedMessage `protobuf:"bytes,2,opt,name=variant1,proto3,oneof"`
}

type UserInformationPublish_Variant2 struct {
	Variant2 *UserInformationCountryUpdatedMessage `protobuf:"bytes,3,opt,name=variant2,proto3,oneof"`
}

type UserInformationPublish_Variant3 struct {
	Variant3 *UserInformationLanguageUpdatedMessage `protobuf:"bytes,4,opt,name=variant3,proto3,oneof"`
}

type UserInformationPublish_Variant4 struct {
	Variant4 *UserInformationDateOfBirthUpdatedMessage `protobuf:"bytes,5,opt,name=variant4,proto3,oneof"`
}

type UserInformationPublish_Variant5 struct {
	Variant5 *UserInformationUsernameUpdatedMessage `protobuf:"bytes,6,opt,name=variant5,proto3,oneof"`
}

func (*UserInformationPublish_Variant0) isUserInformationPublish_Payload() {}

func (*UserInformationPublish_Variant1) isUserInformationPublish_Payload() {}

func (*UserInformationPublish_Variant2) isUserInformationPublish_Payload() {}

func (*UserInformationPublish_Variant3) isUserInformationPublish_Payload() {}

func (*UserInformationPublish_Variant4) isUserInformationPublish_Payload() {}

func (*UserInformationPublish_Variant5) isUserInformationPublish_Payload() {}

// path: #/channels/userPermissions/publish/message
type UserPermissionsPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*UserPermissionsPublish_Variant0
	//	*UserPermissionsPublish_Variant1
	Payload isUserPermissionsPublish_Payload `protobuf_oneof:"payload"`
}

func (x *UserPermissionsPublish) Reset() {
	*x = UserPermissionsPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionsPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionsPublish) ProtoMessage() {}

func (x *UserPermissionsPublish) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionsPublish.ProtoReflect.Descriptor instead.
func (*UserPermissionsPublish) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{153}
}

func (m *UserPermissionsPublish) GetPayload() isUserPermissionsPublish_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *UserPermissionsPublish) GetVariant0() *UserPermissionsCreatedMessage {
	if x, ok := x.GetPayload().(*UserPermissionsPublish_Variant0); ok {
		return x.Variant0
	}
	return nil
}

func (x *UserPermissionsPublish) GetVariant1() *UserPermissionsDeletedMessage {
	if x, ok := x.GetPayload().(*UserPermissionsPublish_Variant1); ok {
		return x.Variant1
	}
	return nil
}

type isUserPermissionsPublish_Payload interface {
	isUserPermissionsPublish_Payload()
}

type UserPermissionsPublish_Variant0 struct {
	Variant0 *UserPermissionsCreatedMessage `protobuf:"bytes,1,opt,name=variant0,proto3,oneof"`
}

type UserPermissionsPublish_Variant1 struct {
	Variant1 *UserPermissionsDeletedMessage `protobuf:"bytes,2,opt,name=variant1,proto3,oneof"`
}

func (*UserPermissionsPublish_Variant0) isUserPermissionsPublish_Payload() {}

func (*UserPermissionsPublish_Variant1) isUserPermissionsPublish_Payload() {}

// path: #/channels/userRoles/publish/message
type UserRolesPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*UserRolesPublish_Variant0
	//	*UserRolesPublish_Variant1
	Payload isUserRolesPublish_Payload `protobuf_oneof:"payload"`
}

func (x *UserRolesPublish) Reset() {
	*x = UserRolesPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRolesPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRolesPublish) ProtoMessage() {}

func (x *UserRolesPublish) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRolesPublish.ProtoReflect.Descriptor instead.
func (*UserRolesPublish) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{154}
}

func (m *UserRolesPublish) GetPayload() isUserRolesPublish_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *UserRolesPublish) GetVariant0() *UserRolesCreatedMessage {
	if x, ok := x.GetPayload().(*UserRolesPublish_Variant0); ok {
		return x.Variant0
	}
	return nil
}

func (x *UserRolesPublish) GetVariant1() *UserRolesDeletedMessage {
	if x, ok := x.GetPayload().(*UserRolesPublish_Variant1); ok {
		return x.Variant1
	}
	return nil
}

type isUserRolesPublish_Payload interface {
	isUserRolesPublish_Payload()
}

type UserRolesPublish_Variant0 struct {
	Variant0 *UserRolesCreatedMessage `protobuf:"bytes,1,opt,name=variant0,proto3,oneof"`
}

type UserRolesPublish_Variant1 struct {
	Variant1 *UserRolesDeletedMessage `protobuf:"bytes,2,opt,name=variant1,proto3,oneof"`
}

func (*UserRolesPublish_Variant0) isUserRolesPublish_Payload() {}

func (*UserRolesPublish_Variant1) isUserRolesPublish_Payload() {}

// path: #/channels/countryAgeRestriction/publish/message
type CountryAgeRestrictionPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*CountryAgeRestrictionPublish_Variant0
	//	*CountryAgeRestrictionPublish_Variant1
	Payload isCountryAgeRestrictionPublish_Payload `protobuf_oneof:"payload"`
}

func (x *CountryAgeRestrictionPublish) Reset() {
	*x = CountryAgeRestrictionPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryAgeRestrictionPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryAgeRestrictionPublish) ProtoMessage() {}

func (x *CountryAgeRestrictionPublish) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryAgeRestrictionPublish.ProtoReflect.Descriptor instead.
func (*CountryAgeRestrictionPublish) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{155}
}

func (m *CountryAgeRestrictionPublish) GetPayload() isCountryAgeRestrictionPublish_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *CountryAgeRestrictionPublish) GetVariant0() *CountryAgeRestrictionCreatedMessage {
	if x, ok := x.GetPayload().(*CountryAgeRestrictionPublish_Variant0); ok {
		return x.Variant0
	}
	return nil
}

func (x *CountryAgeRestrictionPublish) GetVariant1() *CountryAgeRestrictionUpdatedMessage {
	if x, ok := x.GetPayload().(*CountryAgeRestrictionPublish_Variant1); ok {
		return x.Variant1
	}
	return nil
}

type isCountryAgeRestrictionPublish_Payload interface {
	isCountryAgeRestrictionPublish_Payload()
}

type CountryAgeRestrictionPublish_Variant0 struct {
	Variant0 *CountryAgeRestrictionCreatedMessage `protobuf:"bytes,1,opt,name=variant0,proto3,oneof"`
}

type CountryAgeRestrictionPublish_Variant1 struct {
	Variant1 *CountryAgeRestrictionUpdatedMessage `protobuf:"bytes,2,opt,name=variant1,proto3,oneof"`
}

func (*CountryAgeRestrictionPublish_Variant0) isCountryAgeRestrictionPublish_Payload() {}

func (*CountryAgeRestrictionPublish_Variant1) isCountryAgeRestrictionPublish_Payload() {}

// path: #/channels/userFeatureBan/publish/message
type UserFeatureBanPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*UserFeatureBanPublish_Variant0
	//	*UserFeatureBanPublish_Variant1
	//	*UserFeatureBanPublish_Variant2
	//	*UserFeatureBanPublish_Variant3
	//	*UserFeatureBanPublish_Variant4
	//	*UserFeatureBanPublish_Variant5
	//	*UserFeatureBanPublish_Variant6
	Payload isUserFeatureBanPublish_Payload `protobuf_oneof:"payload"`
}

func (x *UserFeatureBanPublish) Reset() {
	*x = UserFeatureBanPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFeatureBanPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFeatureBanPublish) ProtoMessage() {}

func (x *UserFeatureBanPublish) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFeatureBanPublish.ProtoReflect.Descriptor instead.
func (*UserFeatureBanPublish) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP(), []int{156}
}

func (m *UserFeatureBanPublish) GetPayload() isUserFeatureBanPublish_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *UserFeatureBanPublish) GetVariant0() *ChatAllBannedMessage {
	if x, ok := x.GetPayload().(*UserFeatureBanPublish_Variant0); ok {
		return x.Variant0
	}
	return nil
}

func (x *UserFeatureBanPublish) GetVariant1() *ChatSendBannedMessage {
	if x, ok := x.GetPayload().(*UserFeatureBanPublish_Variant1); ok {
		return x.Variant1
	}
	return nil
}

func (x *UserFeatureBanPublish) GetVariant2() *LeaderboardBannedMessage {
	if x, ok := x.GetPayload().(*UserFeatureBanPublish_Variant2); ok {
		return x.Variant2
	}
	return nil
}

func (x *UserFeatureBanPublish) GetVariant3() *StatisticsBannedMessage {
	if x, ok := x.GetPayload().(*UserFeatureBanPublish_Variant3); ok {
		return x.Variant3
	}
	return nil
}

func (x *UserFeatureBanPublish) GetVariant4() *OrderAndPaymentBannedMessage {
	if x, ok := x.GetPayload().(*UserFeatureBanPublish_Variant4); ok {
		return x.Variant4
	}
	return nil
}

func (x *UserFeatureBanPublish) GetVariant5() *MatchmakingBannedMessage {
	if x, ok := x.GetPayload().(*UserFeatureBanPublish_Variant5); ok {
		return x.Variant5
	}
	return nil
}

func (x *UserFeatureBanPublish) GetVariant6() *UgcCreateUpdateBannedMessage {
	if x, ok := x.GetPayload().(*UserFeatureBanPublish_Variant6); ok {
		return x.Variant6
	}
	return nil
}

type isUserFeatureBanPublish_Payload interface {
	isUserFeatureBanPublish_Payload()
}

type UserFeatureBanPublish_Variant0 struct {
	Variant0 *ChatAllBannedMessage `protobuf:"bytes,1,opt,name=variant0,proto3,oneof"`
}

type UserFeatureBanPublish_Variant1 struct {
	Variant1 *ChatSendBannedMessage `protobuf:"bytes,2,opt,name=variant1,proto3,oneof"`
}

type UserFeatureBanPublish_Variant2 struct {
	Variant2 *LeaderboardBannedMessage `protobuf:"bytes,3,opt,name=variant2,proto3,oneof"`
}

type UserFeatureBanPublish_Variant3 struct {
	Variant3 *StatisticsBannedMessage `protobuf:"bytes,4,opt,name=variant3,proto3,oneof"`
}

type UserFeatureBanPublish_Variant4 struct {
	Variant4 *OrderAndPaymentBannedMessage `protobuf:"bytes,5,opt,name=variant4,proto3,oneof"`
}

type UserFeatureBanPublish_Variant5 struct {
	Variant5 *MatchmakingBannedMessage `protobuf:"bytes,6,opt,name=variant5,proto3,oneof"`
}

type UserFeatureBanPublish_Variant6 struct {
	Variant6 *UgcCreateUpdateBannedMessage `protobuf:"bytes,7,opt,name=variant6,proto3,oneof"`
}

func (*UserFeatureBanPublish_Variant0) isUserFeatureBanPublish_Payload() {}

func (*UserFeatureBanPublish_Variant1) isUserFeatureBanPublish_Payload() {}

func (*UserFeatureBanPublish_Variant2) isUserFeatureBanPublish_Payload() {}

func (*UserFeatureBanPublish_Variant3) isUserFeatureBanPublish_Payload() {}

func (*UserFeatureBanPublish_Variant4) isUserFeatureBanPublish_Payload() {}

func (*UserFeatureBanPublish_Variant5) isUserFeatureBanPublish_Payload() {}

func (*UserFeatureBanPublish_Variant6) isUserFeatureBanPublish_Payload() {}

var File_accelbyte_asyncapi_iam_account_v1_account_proto protoreflect.FileDescriptor

var file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2d, 0x61, 0x73, 0x79, 0x6e,
	0x63, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9c, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0xae, 0x01, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x09, 0x53, 0x63, 0x68, 0x65, 0x64, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x53, 0x63, 0x68, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x22, 0xf6, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x18, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x1d, 0x73, 0x69, 0x6d, 0x75, 0x6c,
	0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a,
	0x73, 0x69, 0x6d, 0x75, 0x6c, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x18, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x22, 0xe4, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x1b, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x22, 0x9b, 0x02, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x09, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xb3, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0xf7, 0x01, 0x0a, 0x12, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x15, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x50, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x61, 0x6e, 0x12, 0x3e, 0x0a, 0x03, 0x62, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x03, 0x62, 0x61, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x33, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x41, 0x67,
	0x65, 0x22, 0xf5, 0x01, 0x0a, 0x0a, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa4, 0x01, 0x0a,
	0x0e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x61, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x44, 0x50, 0x52, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x22, 0x9a, 0x01, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a,
	0x15, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xed, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xb3, 0x02, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x71, 0x0a, 0x15, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x81, 0x02, 0x0a,
	0x1d, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x13,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x81, 0x02, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x5b, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xfd, 0x01, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x5b, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x5b, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x86, 0x02, 0x0a, 0x22, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x13, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x89,
	0x02, 0x0a, 0x25, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x1c, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x10, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x52, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x22, 0xc2, 0x01,
	0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x4c, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x52,
	0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x61, 0x6e, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x61, 0x6e, 0x22, 0xfe, 0x01, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x5b, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x11, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75,
	0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x31, 0x32, 0x12, 0x4c, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6c, 0x0a, 0x18, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x15,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x31, 0x33, 0x12, 0x4e, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x68, 0x0a, 0x18, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x15,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x22, 0x71, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x85, 0x02, 0x0a, 0x21, 0x47, 0x61, 0x6d,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x13,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x5c, 0x0a, 0x1a, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0xa3,
	0x01, 0x0a, 0x23, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x52, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x21, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbc, 0x01,
	0x0a, 0x11, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x31, 0x39, 0x12, 0x48, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5d, 0x0a,
	0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbc, 0x01, 0x0a,
	0x11, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x32, 0x30, 0x12, 0x48, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x13,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x11,
	0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x32,
	0x31, 0x12, 0x48, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x13, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd8, 0x01, 0x0a, 0x1a, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x70, 0x0a, 0x1a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x18, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x24, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x48,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x70, 0x0a, 0x1a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x52, 0x18, 0x75, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x11, 0x41,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x32, 0x34,
	0x12, 0x4c, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54,
	0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x11, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f,
	0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x32, 0x35, 0x12, 0x4c, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xce,
	0x01, 0x0a, 0x28, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x10, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xcf, 0x01, 0x0a, 0x29, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x10, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xcf, 0x01, 0x0a, 0x29, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x4c, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xd2, 0x01, 0x0a, 0x2c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x54, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x21, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x21, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x1b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x34, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x1b, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x27, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x67, 0x0a, 0x17, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x92, 0x01, 0x0a, 0x27, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x67, 0x0a, 0x17, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6e, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x52, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x62, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x61, 0x6e, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x61, 0x6e, 0x22, 0x6f, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x6e, 0x64,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x52, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x42, 0x61, 0x6e, 0x22, 0x72, 0x0a, 0x1c, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x6e, 0x22, 0x71, 0x0a, 0x1b, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x6e, 0x22, 0x76, 0x0a, 0x20,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x52, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x62, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x61, 0x6e, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x61, 0x6e, 0x22, 0x72, 0x0a, 0x1c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x6e, 0x22, 0x76, 0x0a, 0x20, 0x55, 0x67, 0x63, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x10,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x6e,
	0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x6e,
	0x22, 0x3d, 0x0a, 0x22, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x79, 0x0a, 0x2a, 0x47, 0x64, 0x70, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a,
	0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x64, 0x70, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x44, 0x50, 0x52, 0x52, 0x0c, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x44, 0x50, 0x52, 0x22, 0xfc, 0x02, 0x0a, 0x12, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x51, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xfc, 0x02, 0x0a, 0x12, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x51, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xfc, 0x02, 0x0a, 0x12, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x51, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xfe, 0x02, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x52, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x86, 0x03, 0x0a, 0x17, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x8c, 0x03, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x59, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0xfa, 0x02, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xfe, 0x02,
	0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xfe,
	0x02, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xef, 0x02, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x31, 0x32, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xf1, 0x02, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x31, 0x33, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xfe, 0x02, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x12, 0x52, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x84, 0x03, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x55, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf6, 0x02,
	0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x4e, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x88, 0x03, 0x0a, 0x18, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x57, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x84, 0x03, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xea, 0x02, 0x0a, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x12, 0x45, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x31, 0x39, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xeb, 0x02, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x67, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x45, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x32, 0x30, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0xf4, 0x02, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x12, 0x45,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x32, 0x31, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf6, 0x02, 0x0a, 0x0f, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x4e,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x8a, 0x03, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x12, 0x58, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0xf4, 0x02, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75,
	0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x32, 0x34, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xff, 0x02, 0x0a, 0x21, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x45, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x32, 0x35, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x92, 0x03, 0x0a, 0x1d, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x94,
	0x03, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x5d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x94, 0x03, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x5d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x9a, 0x03, 0x0a,
	0x21, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x60, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x83, 0x03, 0x0a, 0x15, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x83, 0x03, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf7, 0x02, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xf7, 0x02, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x90, 0x03, 0x0a, 0x1c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x5b, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x90, 0x03, 0x0a,
	0x1c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x5b, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xf2, 0x02, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x12, 0x4c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf4, 0x02, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x6e,
	0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xfa, 0x02, 0x0a, 0x11,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x12, 0x50, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf8, 0x02, 0x0a, 0x10, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x4f, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x82, 0x03, 0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x54, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xfa, 0x02, 0x0a, 0x11, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x50,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x82, 0x03, 0x0a, 0x15, 0x55, 0x67, 0x63, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12,
	0x54, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x67, 0x63, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x86, 0x03, 0x0a, 0x17, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x96, 0x03, 0x0a, 0x1f, 0x47, 0x64, 0x70, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x64, 0x70, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x19,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x63, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x63, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x65, 0x0a, 0x1a, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x6d, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x73, 0x0a, 0x21, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x61, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x65, 0x0a, 0x1a, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x6e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x65, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x61, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x65, 0x0a, 0x1a, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x65, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x47, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x6b, 0x0a, 0x1d, 0x47, 0x61, 0x6d, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x5d, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x43, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0x6f, 0x0a, 0x1f, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x6b, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x57, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64,
	0x49, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64,
	0x49, 0x6e, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x59, 0x0a, 0x14, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x6b, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x5d, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x71, 0x0a, 0x20, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x6b, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x28, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x55, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x79, 0x0a, 0x24, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x51,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x7b, 0x0a, 0x25, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x7b,
	0x0a, 0x25, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x28,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x55, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x6a, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x49, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x6a, 0x0a, 0x1d, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x5e, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x5e, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x77, 0x0a, 0x23, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x77, 0x0a, 0x23, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x59, 0x0a, 0x14, 0x43, 0x68, 0x61,
	0x74, 0x41, 0x6c, 0x6c, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x41, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0x5b, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x6e, 0x64,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x61, 0x0a, 0x18, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0x5f, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x44, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x69, 0x0a, 0x1c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6e,
	0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x61, 0x0a, 0x18, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x69, 0x0a, 0x1c, 0x55, 0x67, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x67, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x6d,
	0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x4b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x7d, 0x0a,
	0x26, 0x47, 0x64, 0x70, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x64, 0x70, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xa4, 0x0a, 0x0a,
	0x12, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x12, 0x51, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x12, 0x51, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x12, 0x51, 0x0a, 0x08, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32, 0x12, 0x52, 0x0a, 0x08,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x33,
	0x12, 0x56, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x34, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x34, 0x12, 0x59, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x35, 0x12, 0x50, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x36, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x36, 0x12, 0x52, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x37, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x37, 0x12, 0x52, 0x0a, 0x08, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x38, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x38, 0x12, 0x50, 0x0a,
	0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x39, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x39, 0x12,
	0x54, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x30, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x31, 0x30, 0x12, 0x54, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x31, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x31, 0x12, 0x57, 0x0a, 0x09, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x32, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x31, 0x32, 0x12, 0x59, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31,
	0x33, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x33, 0x12,
	0x57, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x34, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x34, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0xc2, 0x03, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x12, 0x4b, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x12, 0x4c,
	0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x12, 0x55, 0x0a, 0x08,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x32, 0x12, 0x4e, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x33, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x33, 0x12, 0x58, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x34, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x34, 0x42, 0x09, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xda, 0x04, 0x0a, 0x16, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x12, 0x55, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x12, 0x60, 0x0a, 0x08, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x12, 0x5c, 0x0a, 0x08,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32, 0x12, 0x5d, 0x0a, 0x08, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x33, 0x12, 0x60, 0x0a, 0x08, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74,
	0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x34, 0x12, 0x5d, 0x0a, 0x08, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x35, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x12, 0x55, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x12, 0x55, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x42, 0x09,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xbf, 0x01, 0x0a, 0x10, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x4f,
	0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x12,
	0x4f, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x1c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x5b, 0x0a, 0x08,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x12, 0x5b, 0x0a, 0x08, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0xe0, 0x04, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x61, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x4c, 0x0a, 0x08, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x12, 0x4d, 0x0a, 0x08, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x12, 0x50, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32, 0x12, 0x4f, 0x0a, 0x08, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x33, 0x12, 0x54, 0x0a, 0x08, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6e,
	0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x34, 0x12, 0x50, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x35, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x35, 0x12, 0x54, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x36, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x67, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x36, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x32, 0x79, 0x0a, 0x24, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x09,
	0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32,
	0x79, 0x0a, 0x24, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x79, 0x0a, 0x24, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x51, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x7b, 0x0a, 0x25, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52,
	0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x32, 0x83, 0x01, 0x0a, 0x29, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x56, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x89, 0x01, 0x0a, 0x2c, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x09, 0x4f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0x77, 0x0a, 0x23, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x4f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x7b, 0x0a,
	0x25, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x7b, 0x0a, 0x25, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x77, 0x0a, 0x23, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50,
	0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x32, 0x7b, 0x0a, 0x25, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x4f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x7b, 0x0a,
	0x25, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x81, 0x01, 0x0a, 0x28, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x85,
	0x01, 0x0a, 0x2a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a,
	0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x81, 0x01, 0x0a, 0x28, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x74, 0x0a, 0x25, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x32, 0x76, 0x0a, 0x26, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64,
	0x4f, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x4f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x4f, 0x75, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x88, 0x01, 0x0a, 0x2f, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67,
	0x67, 0x65, 0x64, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x09,
	0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x32, 0x7a, 0x0a, 0x28, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4e, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32,
	0x8e, 0x01, 0x0a, 0x32, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x32, 0x85, 0x01, 0x0a, 0x2c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x55, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x9b, 0x01, 0x0a, 0x37, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x60, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x93, 0x01, 0x0a, 0x33, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c,
	0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x95, 0x01, 0x0a,
	0x34, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0x9b, 0x01, 0x0a, 0x37, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x60, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x32, 0x95, 0x01, 0x0a, 0x34, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x09, 0x4f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x84, 0x01, 0x0a, 0x2c, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x4f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x32, 0x84, 0x01, 0x0a, 0x2c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2f, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x72, 0x0a, 0x20, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x09,
	0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x72, 0x0a, 0x20,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4e, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x32, 0x97, 0x01, 0x0a, 0x38, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a,
	0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x97, 0x01, 0x0a, 0x38, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0x78, 0x0a, 0x26, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e,
	0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x72,
	0x0a, 0x22, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x6e,
	0x43, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x41, 0x6c, 0x6c, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x32, 0x74, 0x0a, 0x23, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x61, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x4f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x7a, 0x0a, 0x26, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x6e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0x78, 0x0a, 0x25, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x42, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a,
	0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x82,
	0x01, 0x0a, 0x2a, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a,
	0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x32, 0x7a, 0x0a, 0x26, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x42, 0x61, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a,
	0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32,
	0x82, 0x01, 0x0a, 0x2a, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42,
	0x61, 0x6e, 0x55, 0x67, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54,
	0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x67, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0x7d, 0x0a, 0x23, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x4f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x32, 0x9b, 0x01, 0x0a, 0x39, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x64, 0x70, 0x72, 0x47, 0x64, 0x70, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5e, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x64, 0x70, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x42, 0x50, 0x0a, 0x19, 0x6e, 0x65, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x01,
	0x5a, 0x19, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x2f,
	0x69, 0x61, 0x6d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0xaa, 0x02, 0x15, 0x41, 0x63,
	0x63, 0x65, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x2e, 0x49, 0x41, 0x4d, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescOnce sync.Once
	file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescData = file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDesc
)

func file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescGZIP() []byte {
	file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescOnce.Do(func() {
		file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescData)
	})
	return file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDescData
}

var file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes = make([]protoimpl.MessageInfo, 157)
var file_accelbyte_asyncapi_iam_account_v1_account_proto_goTypes = []interface{}{
	(*Event)(nil),                                        // 0: accelbyte.iam.account.v1.Event
	(*Permissions)(nil),                                  // 1: accelbyte.iam.account.v1.Permissions
	(*UserAuthentication)(nil),                           // 2: accelbyte.iam.account.v1.UserAuthentication
	(*UserAuthenticationFailed)(nil),                     // 3: accelbyte.iam.account.v1.UserAuthenticationFailed
	(*UserAccount)(nil),                                  // 4: accelbyte.iam.account.v1.UserAccount
	(*UserTestAccountGameDataItem)(nil),                  // 5: accelbyte.iam.account.v1.UserTestAccountGameDataItem
	(*UserTestAccount)(nil),                              // 6: accelbyte.iam.account.v1.UserTestAccount
	(*UserGameAccount)(nil),                              // 7: accelbyte.iam.account.v1.UserGameAccount
	(*UserAccountStatus)(nil),                            // 8: accelbyte.iam.account.v1.UserAccountStatus
	(*UserAccountBanItem)(nil),                           // 9: accelbyte.iam.account.v1.UserAccountBanItem
	(*UserAccountBan)(nil),                               // 10: accelbyte.iam.account.v1.UserAccountBan
	(*UserInformation)(nil),                              // 11: accelbyte.iam.account.v1.UserInformation
	(*Role)(nil),                                         // 12: accelbyte.iam.account.v1.Role
	(*CountryAgeRestriction)(nil),                        // 13: accelbyte.iam.account.v1.CountryAgeRestriction
	(*ThirdParty)(nil),                                   // 14: accelbyte.iam.account.v1.ThirdParty
	(*Platform)(nil),                                     // 15: accelbyte.iam.account.v1.Platform
	(*UserFeatureBan)(nil),                               // 16: accelbyte.iam.account.v1.UserFeatureBan
	(*DeletionGDPR)(nil),                                 // 17: accelbyte.iam.account.v1.DeletionGDPR
	(*UserAccountThirdParty)(nil),                        // 18: accelbyte.iam.account.v1.UserAccountThirdParty
	(*UserAccountThirdPartyLink)(nil),                    // 19: accelbyte.iam.account.v1.UserAccountThirdPartyLink
	(*UserAccountLink)(nil),                              // 20: accelbyte.iam.account.v1.UserAccountLink
	(*UserAccountUnlink)(nil),                            // 21: accelbyte.iam.account.v1.UserAccountUnlink
	(*UserAccountUpgrade)(nil),                           // 22: accelbyte.iam.account.v1.UserAccountUpgrade
	(*UserAccountTypeChange)(nil),                        // 23: accelbyte.iam.account.v1.UserAccountTypeChange
	(*UserAccountCreatedPayloadData)(nil),                // 24: accelbyte.iam.account.v1.UserAccountCreatedPayloadData
	(*UserAccountDeletedPayloadData)(nil),                // 25: accelbyte.iam.account.v1.UserAccountDeletedPayloadData
	(*UserAccountEnabledPayloadData)(nil),                // 26: accelbyte.iam.account.v1.UserAccountEnabledPayloadData
	(*UserAccountDisabledPayloadData)(nil),               // 27: accelbyte.iam.account.v1.UserAccountDisabledPayloadData
	(*UserAccountEmailUpdatedPayloadData)(nil),           // 28: accelbyte.iam.account.v1.UserAccountEmailUpdatedPayloadData
	(*UserAccountPasswordUpdatedPayloadData)(nil),        // 29: accelbyte.iam.account.v1.UserAccountPasswordUpdatedPayloadData
	(*UserAccountBannedPayloadData)(nil),                 // 30: accelbyte.iam.account.v1.UserAccountBannedPayloadData
	(*UserAccountUnbannedPayloadData)(nil),               // 31: accelbyte.iam.account.v1.UserAccountUnbannedPayloadData
	(*UserAccountVerifiedPayloadData)(nil),               // 32: accelbyte.iam.account.v1.UserAccountVerifiedPayloadData
	(*AnonymousSchema12)(nil),                            // 33: accelbyte.iam.account.v1.AnonymousSchema12
	(*AnonymousSchema13)(nil),                            // 34: accelbyte.iam.account.v1.AnonymousSchema13
	(*UserAccountUpgradedPayloadData)(nil),               // 35: accelbyte.iam.account.v1.UserAccountUpgradedPayloadData
	(*GameUserAccountCreatedPayloadData)(nil),            // 36: accelbyte.iam.account.v1.GameUserAccountCreatedPayloadData
	(*GameUserCreatedPayloadData)(nil),                   // 37: accelbyte.iam.account.v1.GameUserCreatedPayloadData
	(*ThirdPartyAccountCreatedPayloadData)(nil),          // 38: accelbyte.iam.account.v1.ThirdPartyAccountCreatedPayloadData
	(*UserAccountTypeChangedPayloadData)(nil),            // 39: accelbyte.iam.account.v1.UserAccountTypeChangedPayloadData
	(*AnonymousSchema19)(nil),                            // 40: accelbyte.iam.account.v1.AnonymousSchema19
	(*AnonymousSchema20)(nil),                            // 41: accelbyte.iam.account.v1.AnonymousSchema20
	(*AnonymousSchema21)(nil),                            // 42: accelbyte.iam.account.v1.AnonymousSchema21
	(*UserLoginFailedPayloadData)(nil),                   // 43: accelbyte.iam.account.v1.UserLoginFailedPayloadData
	(*UserThirdPartyLoginFailedPayloadData)(nil),         // 44: accelbyte.iam.account.v1.UserThirdPartyLoginFailedPayloadData
	(*AnonymousSchema24)(nil),                            // 45: accelbyte.iam.account.v1.AnonymousSchema24
	(*AnonymousSchema25)(nil),                            // 46: accelbyte.iam.account.v1.AnonymousSchema25
	(*UserInformationCountryUpdatedPayloadData)(nil),     // 47: accelbyte.iam.account.v1.UserInformationCountryUpdatedPayloadData
	(*UserInformationLanguageUpdatedPayloadData)(nil),    // 48: accelbyte.iam.account.v1.UserInformationLanguageUpdatedPayloadData
	(*UserInformationUsernameUpdatedPayloadData)(nil),    // 49: accelbyte.iam.account.v1.UserInformationUsernameUpdatedPayloadData
	(*UserInformationDateOfBirthUpdatedPayloadData)(nil), // 50: accelbyte.iam.account.v1.UserInformationDateOfBirthUpdatedPayloadData
	(*UserPermissionsCreatedPayloadData)(nil),            // 51: accelbyte.iam.account.v1.UserPermissionsCreatedPayloadData
	(*UserPermissionsDeletedPayloadData)(nil),            // 52: accelbyte.iam.account.v1.UserPermissionsDeletedPayloadData
	(*UserRolesCreatedPayloadData)(nil),                  // 53: accelbyte.iam.account.v1.UserRolesCreatedPayloadData
	(*UserRolesDeletedPayloadData)(nil),                  // 54: accelbyte.iam.account.v1.UserRolesDeletedPayloadData
	(*CountryAgeRestrictionCreatedPayloadData)(nil),      // 55: accelbyte.iam.account.v1.CountryAgeRestrictionCreatedPayloadData
	(*CountryAgeRestrictionUpdatedPayloadData)(nil),      // 56: accelbyte.iam.account.v1.CountryAgeRestrictionUpdatedPayloadData
	(*ChatAllBannedPayloadData)(nil),                     // 57: accelbyte.iam.account.v1.ChatAllBannedPayloadData
	(*ChatSendBannedPayloadData)(nil),                    // 58: accelbyte.iam.account.v1.ChatSendBannedPayloadData
	(*LeaderboardBannedPayloadData)(nil),                 // 59: accelbyte.iam.account.v1.LeaderboardBannedPayloadData
	(*StatisticsBannedPayloadData)(nil),                  // 60: accelbyte.iam.account.v1.StatisticsBannedPayloadData
	(*OrderAndPaymentBannedPayloadData)(nil),             // 61: accelbyte.iam.account.v1.OrderAndPaymentBannedPayloadData
	(*MatchmakingBannedPayloadData)(nil),                 // 62: accelbyte.iam.account.v1.MatchmakingBannedPayloadData
	(*UgcCreateUpdateBannedPayloadData)(nil),             // 63: accelbyte.iam.account.v1.UgcCreateUpdateBannedPayloadData
	(*UserDisconnectRequestedPayloadData)(nil),           // 64: accelbyte.iam.account.v1.UserDisconnectRequestedPayloadData
	(*GdprRequestDataDeletionResponsePayloadData)(nil),   // 65: accelbyte.iam.account.v1.GdprRequestDataDeletionResponsePayloadData
	(*UserAccountCreated)(nil),                           // 66: accelbyte.iam.account.v1.UserAccountCreated
	(*UserAccountDeleted)(nil),                           // 67: accelbyte.iam.account.v1.UserAccountDeleted
	(*UserAccountEnabled)(nil),                           // 68: accelbyte.iam.account.v1.UserAccountEnabled
	(*UserAccountDisabled)(nil),                          // 69: accelbyte.iam.account.v1.UserAccountDisabled
	(*UserAccountEmailUpdated)(nil),                      // 70: accelbyte.iam.account.v1.UserAccountEmailUpdated
	(*UserAccountPasswordUpdated)(nil),                   // 71: accelbyte.iam.account.v1.UserAccountPasswordUpdated
	(*UserAccountBanned)(nil),                            // 72: accelbyte.iam.account.v1.UserAccountBanned
	(*UserAccountUnbanned)(nil),                          // 73: accelbyte.iam.account.v1.UserAccountUnbanned
	(*UserAccountVerified)(nil),                          // 74: accelbyte.iam.account.v1.UserAccountVerified
	(*UserAccountLinked)(nil),                            // 75: accelbyte.iam.account.v1.UserAccountLinked
	(*UserAccountUnlinked)(nil),                          // 76: accelbyte.iam.account.v1.UserAccountUnlinked
	(*UserAccountUpgraded)(nil),                          // 77: accelbyte.iam.account.v1.UserAccountUpgraded
	(*GameUserAccountCreated)(nil),                       // 78: accelbyte.iam.account.v1.GameUserAccountCreated
	(*GameUserCreated)(nil),                              // 79: accelbyte.iam.account.v1.GameUserCreated
	(*ThirdPartyAccountCreated)(nil),                     // 80: accelbyte.iam.account.v1.ThirdPartyAccountCreated
	(*UserAccountTypeChanged)(nil),                       // 81: accelbyte.iam.account.v1.UserAccountTypeChanged
	(*UserLoggedIn)(nil),                                 // 82: accelbyte.iam.account.v1.UserLoggedIn
	(*UserLoggedOut)(nil),                                // 83: accelbyte.iam.account.v1.UserLoggedOut
	(*UserThirdPartyLoggedIn)(nil),                       // 84: accelbyte.iam.account.v1.UserThirdPartyLoggedIn
	(*UserLoginFailed)(nil),                              // 85: accelbyte.iam.account.v1.UserLoginFailed
	(*UserThirdPartyLoginFailed)(nil),                    // 86: accelbyte.iam.account.v1.UserThirdPartyLoginFailed
	(*UserInformationCreated)(nil),                       // 87: accelbyte.iam.account.v1.UserInformationCreated
	(*UserInformationDisplayNameUpdated)(nil),            // 88: accelbyte.iam.account.v1.UserInformationDisplayNameUpdated
	(*UserInformationCountryUpdated)(nil),                // 89: accelbyte.iam.account.v1.UserInformationCountryUpdated
	(*UserInformationLanguageUpdated)(nil),               // 90: accelbyte.iam.account.v1.UserInformationLanguageUpdated
	(*UserInformationUsernameUpdated)(nil),               // 91: accelbyte.iam.account.v1.UserInformationUsernameUpdated
	(*UserInformationDateOfBirthUpdated)(nil),            // 92: accelbyte.iam.account.v1.UserInformationDateOfBirthUpdated
	(*UserPermissionCreated)(nil),                        // 93: accelbyte.iam.account.v1.UserPermissionCreated
	(*UserPermissionDeleted)(nil),                        // 94: accelbyte.iam.account.v1.UserPermissionDeleted
	(*UserRoleCreated)(nil),                              // 95: accelbyte.iam.account.v1.UserRoleCreated
	(*UserRoleDeleted)(nil),                              // 96: accelbyte.iam.account.v1.UserRoleDeleted
	(*CountryAgeRestrictionCreated)(nil),                 // 97: accelbyte.iam.account.v1.CountryAgeRestrictionCreated
	(*CountryAgeRestrictionUpdated)(nil),                 // 98: accelbyte.iam.account.v1.CountryAgeRestrictionUpdated
	(*ChatAllBanned)(nil),                                // 99: accelbyte.iam.account.v1.ChatAllBanned
	(*ChatSendBanned)(nil),                               // 100: accelbyte.iam.account.v1.ChatSendBanned
	(*LeaderboardBanned)(nil),                            // 101: accelbyte.iam.account.v1.LeaderboardBanned
	(*StatisticsBanned)(nil),                             // 102: accelbyte.iam.account.v1.StatisticsBanned
	(*OrderAndPaymentBanned)(nil),                        // 103: accelbyte.iam.account.v1.OrderAndPaymentBanned
	(*MatchmakingBanned)(nil),                            // 104: accelbyte.iam.account.v1.MatchmakingBanned
	(*UgcCreateUpdateBanned)(nil),                        // 105: accelbyte.iam.account.v1.UgcCreateUpdateBanned
	(*UserDisconnectRequested)(nil),                      // 106: accelbyte.iam.account.v1.UserDisconnectRequested
	(*GdprRequestDataDeletionResponse)(nil),              // 107: accelbyte.iam.account.v1.GdprRequestDataDeletionResponse
	(*UserAccountCreatedMessage)(nil),                    // 108: accelbyte.iam.account.v1.UserAccountCreatedMessage
	(*UserAccountDeletedMessage)(nil),                    // 109: accelbyte.iam.account.v1.UserAccountDeletedMessage
	(*UserAccountEnabledMessage)(nil),                    // 110: accelbyte.iam.account.v1.UserAccountEnabledMessage
	(*UserAccountDisabledMessage)(nil),                   // 111: accelbyte.iam.account.v1.UserAccountDisabledMessage
	(*UserAccountEmailUpdatedMessage)(nil),               // 112: accelbyte.iam.account.v1.UserAccountEmailUpdatedMessage
	(*UserAccountPasswordUpdatedMessage)(nil),            // 113: accelbyte.iam.account.v1.UserAccountPasswordUpdatedMessage
	(*UserAccountBannedMessage)(nil),                     // 114: accelbyte.iam.account.v1.UserAccountBannedMessage
	(*UserAccountUnbannedMessage)(nil),                   // 115: accelbyte.iam.account.v1.UserAccountUnbannedMessage
	(*UserAccountVerifiedMessage)(nil),                   // 116: accelbyte.iam.account.v1.UserAccountVerifiedMessage
	(*UserAccountLinkedMessage)(nil),                     // 117: accelbyte.iam.account.v1.UserAccountLinkedMessage
	(*UserAccountUnlinkedMessage)(nil),                   // 118: accelbyte.iam.account.v1.UserAccountUnlinkedMessage
	(*UserAccountUpgradedMessage)(nil),                   // 119: accelbyte.iam.account.v1.UserAccountUpgradedMessage
	(*GameUserAccountCreatedMessage)(nil),                // 120: accelbyte.iam.account.v1.GameUserAccountCreatedMessage
	(*GameUserCreatedMessage)(nil),                       // 121: accelbyte.iam.account.v1.GameUserCreatedMessage
	(*ThirdPartyAccountCreatedMessage)(nil),              // 122: accelbyte.iam.account.v1.ThirdPartyAccountCreatedMessage
	(*UserAccountTypeChangedMessage)(nil),                // 123: accelbyte.iam.account.v1.UserAccountTypeChangedMessage
	(*UserLoggedInMessage)(nil),                          // 124: accelbyte.iam.account.v1.UserLoggedInMessage
	(*UserLoggedOutMessage)(nil),                         // 125: accelbyte.iam.account.v1.UserLoggedOutMessage
	(*UserThirdPartyLoggedInMessage)(nil),                // 126: accelbyte.iam.account.v1.UserThirdPartyLoggedInMessage
	(*UserLoginFailedMessage)(nil),                       // 127: accelbyte.iam.account.v1.UserLoginFailedMessage
	(*UserThirdPartyLoginFailedMessage)(nil),             // 128: accelbyte.iam.account.v1.UserThirdPartyLoginFailedMessage
	(*UserInformationCreatedMessage)(nil),                // 129: accelbyte.iam.account.v1.UserInformationCreatedMessage
	(*UserInformationDisplayNameUpdatedMessage)(nil),     // 130: accelbyte.iam.account.v1.UserInformationDisplayNameUpdatedMessage
	(*UserInformationCountryUpdatedMessage)(nil),         // 131: accelbyte.iam.account.v1.UserInformationCountryUpdatedMessage
	(*UserInformationLanguageUpdatedMessage)(nil),        // 132: accelbyte.iam.account.v1.UserInformationLanguageUpdatedMessage
	(*UserInformationUsernameUpdatedMessage)(nil),        // 133: accelbyte.iam.account.v1.UserInformationUsernameUpdatedMessage
	(*UserInformationDateOfBirthUpdatedMessage)(nil),     // 134: accelbyte.iam.account.v1.UserInformationDateOfBirthUpdatedMessage
	(*UserPermissionsCreatedMessage)(nil),                // 135: accelbyte.iam.account.v1.UserPermissionsCreatedMessage
	(*UserPermissionsDeletedMessage)(nil),                // 136: accelbyte.iam.account.v1.UserPermissionsDeletedMessage
	(*UserRolesCreatedMessage)(nil),                      // 137: accelbyte.iam.account.v1.UserRolesCreatedMessage
	(*UserRolesDeletedMessage)(nil),                      // 138: accelbyte.iam.account.v1.UserRolesDeletedMessage
	(*CountryAgeRestrictionCreatedMessage)(nil),          // 139: accelbyte.iam.account.v1.CountryAgeRestrictionCreatedMessage
	(*CountryAgeRestrictionUpdatedMessage)(nil),          // 140: accelbyte.iam.account.v1.CountryAgeRestrictionUpdatedMessage
	(*ChatAllBannedMessage)(nil),                         // 141: accelbyte.iam.account.v1.ChatAllBannedMessage
	(*ChatSendBannedMessage)(nil),                        // 142: accelbyte.iam.account.v1.ChatSendBannedMessage
	(*LeaderboardBannedMessage)(nil),                     // 143: accelbyte.iam.account.v1.LeaderboardBannedMessage
	(*StatisticsBannedMessage)(nil),                      // 144: accelbyte.iam.account.v1.StatisticsBannedMessage
	(*OrderAndPaymentBannedMessage)(nil),                 // 145: accelbyte.iam.account.v1.OrderAndPaymentBannedMessage
	(*MatchmakingBannedMessage)(nil),                     // 146: accelbyte.iam.account.v1.MatchmakingBannedMessage
	(*UgcCreateUpdateBannedMessage)(nil),                 // 147: accelbyte.iam.account.v1.UgcCreateUpdateBannedMessage
	(*UserDisconnectRequestedMessage)(nil),               // 148: accelbyte.iam.account.v1.UserDisconnectRequestedMessage
	(*GdprRequestDataDeletionResponseMessage)(nil),       // 149: accelbyte.iam.account.v1.GdprRequestDataDeletionResponseMessage
	(*UserAccountPublish)(nil),                           // 150: accelbyte.iam.account.v1.UserAccountPublish
	(*UserAuthenticationPublish)(nil),                    // 151: accelbyte.iam.account.v1.UserAuthenticationPublish
	(*UserInformationPublish)(nil),                       // 152: accelbyte.iam.account.v1.UserInformationPublish
	(*UserPermissionsPublish)(nil),                       // 153: accelbyte.iam.account.v1.UserPermissionsPublish
	(*UserRolesPublish)(nil),                             // 154: accelbyte.iam.account.v1.UserRolesPublish
	(*CountryAgeRestrictionPublish)(nil),                 // 155: accelbyte.iam.account.v1.CountryAgeRestrictionPublish
	(*UserFeatureBanPublish)(nil),                        // 156: accelbyte.iam.account.v1.UserFeatureBanPublish
	(*emptypb.Empty)(nil),                                // 157: google.protobuf.Empty
}
var file_accelbyte_asyncapi_iam_account_v1_account_proto_depIdxs = []int32{
	5,   // 0: accelbyte.iam.account.v1.UserTestAccount.game_data:type_name -> accelbyte.iam.account.v1.UserTestAccountGameDataItem
	9,   // 1: accelbyte.iam.account.v1.UserAccountBan.ban:type_name -> accelbyte.iam.account.v1.UserAccountBanItem
	4,   // 2: accelbyte.iam.account.v1.UserAccountUnlink.linked_accounts:type_name -> accelbyte.iam.account.v1.UserAccount
	6,   // 3: accelbyte.iam.account.v1.UserAccountCreatedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	8,   // 4: accelbyte.iam.account.v1.UserAccountCreatedPayloadData.user_account_status:type_name -> accelbyte.iam.account.v1.UserAccountStatus
	6,   // 5: accelbyte.iam.account.v1.UserAccountDeletedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	8,   // 6: accelbyte.iam.account.v1.UserAccountDeletedPayloadData.user_account_status:type_name -> accelbyte.iam.account.v1.UserAccountStatus
	4,   // 7: accelbyte.iam.account.v1.UserAccountEnabledPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserAccount
	8,   // 8: accelbyte.iam.account.v1.UserAccountEnabledPayloadData.user_account_status:type_name -> accelbyte.iam.account.v1.UserAccountStatus
	4,   // 9: accelbyte.iam.account.v1.UserAccountDisabledPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserAccount
	8,   // 10: accelbyte.iam.account.v1.UserAccountDisabledPayloadData.user_account_status:type_name -> accelbyte.iam.account.v1.UserAccountStatus
	6,   // 11: accelbyte.iam.account.v1.UserAccountEmailUpdatedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	8,   // 12: accelbyte.iam.account.v1.UserAccountEmailUpdatedPayloadData.user_account_status:type_name -> accelbyte.iam.account.v1.UserAccountStatus
	6,   // 13: accelbyte.iam.account.v1.UserAccountPasswordUpdatedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	8,   // 14: accelbyte.iam.account.v1.UserAccountPasswordUpdatedPayloadData.user_account_status:type_name -> accelbyte.iam.account.v1.UserAccountStatus
	6,   // 15: accelbyte.iam.account.v1.UserAccountBannedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	10,  // 16: accelbyte.iam.account.v1.UserAccountBannedPayloadData.user_account_ban:type_name -> accelbyte.iam.account.v1.UserAccountBan
	6,   // 17: accelbyte.iam.account.v1.UserAccountUnbannedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	10,  // 18: accelbyte.iam.account.v1.UserAccountUnbannedPayloadData.user_account_ban:type_name -> accelbyte.iam.account.v1.UserAccountBan
	4,   // 19: accelbyte.iam.account.v1.UserAccountVerifiedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserAccount
	8,   // 20: accelbyte.iam.account.v1.UserAccountVerifiedPayloadData.user_account_status:type_name -> accelbyte.iam.account.v1.UserAccountStatus
	20,  // 21: accelbyte.iam.account.v1.AnonymousSchema12.user_account:type_name -> accelbyte.iam.account.v1.UserAccountLink
	19,  // 22: accelbyte.iam.account.v1.AnonymousSchema12.user_account_third_party:type_name -> accelbyte.iam.account.v1.UserAccountThirdPartyLink
	21,  // 23: accelbyte.iam.account.v1.AnonymousSchema13.user_account:type_name -> accelbyte.iam.account.v1.UserAccountUnlink
	18,  // 24: accelbyte.iam.account.v1.AnonymousSchema13.user_account_third_party:type_name -> accelbyte.iam.account.v1.UserAccountThirdParty
	22,  // 25: accelbyte.iam.account.v1.UserAccountUpgradedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserAccountUpgrade
	7,   // 26: accelbyte.iam.account.v1.GameUserAccountCreatedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserGameAccount
	8,   // 27: accelbyte.iam.account.v1.GameUserAccountCreatedPayloadData.user_account_status:type_name -> accelbyte.iam.account.v1.UserAccountStatus
	15,  // 28: accelbyte.iam.account.v1.GameUserCreatedPayloadData.platform:type_name -> accelbyte.iam.account.v1.Platform
	14,  // 29: accelbyte.iam.account.v1.ThirdPartyAccountCreatedPayloadData.third_party:type_name -> accelbyte.iam.account.v1.ThirdParty
	23,  // 30: accelbyte.iam.account.v1.UserAccountTypeChangedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserAccountTypeChange
	4,   // 31: accelbyte.iam.account.v1.AnonymousSchema19.user_account:type_name -> accelbyte.iam.account.v1.UserAccount
	2,   // 32: accelbyte.iam.account.v1.AnonymousSchema19.user_authentication:type_name -> accelbyte.iam.account.v1.UserAuthentication
	4,   // 33: accelbyte.iam.account.v1.AnonymousSchema20.user_account:type_name -> accelbyte.iam.account.v1.UserAccount
	2,   // 34: accelbyte.iam.account.v1.AnonymousSchema20.user_authentication:type_name -> accelbyte.iam.account.v1.UserAuthentication
	4,   // 35: accelbyte.iam.account.v1.AnonymousSchema21.user_account:type_name -> accelbyte.iam.account.v1.UserAccount
	2,   // 36: accelbyte.iam.account.v1.AnonymousSchema21.user_authentication:type_name -> accelbyte.iam.account.v1.UserAuthentication
	4,   // 37: accelbyte.iam.account.v1.UserLoginFailedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserAccount
	3,   // 38: accelbyte.iam.account.v1.UserLoginFailedPayloadData.user_authentication_failed:type_name -> accelbyte.iam.account.v1.UserAuthenticationFailed
	4,   // 39: accelbyte.iam.account.v1.UserThirdPartyLoginFailedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserAccount
	3,   // 40: accelbyte.iam.account.v1.UserThirdPartyLoginFailedPayloadData.user_authentication_failed:type_name -> accelbyte.iam.account.v1.UserAuthenticationFailed
	6,   // 41: accelbyte.iam.account.v1.AnonymousSchema24.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	11,  // 42: accelbyte.iam.account.v1.AnonymousSchema24.user_information:type_name -> accelbyte.iam.account.v1.UserInformation
	6,   // 43: accelbyte.iam.account.v1.AnonymousSchema25.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	11,  // 44: accelbyte.iam.account.v1.AnonymousSchema25.user_information:type_name -> accelbyte.iam.account.v1.UserInformation
	6,   // 45: accelbyte.iam.account.v1.UserInformationCountryUpdatedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	11,  // 46: accelbyte.iam.account.v1.UserInformationCountryUpdatedPayloadData.user_information:type_name -> accelbyte.iam.account.v1.UserInformation
	6,   // 47: accelbyte.iam.account.v1.UserInformationLanguageUpdatedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	11,  // 48: accelbyte.iam.account.v1.UserInformationLanguageUpdatedPayloadData.user_information:type_name -> accelbyte.iam.account.v1.UserInformation
	6,   // 49: accelbyte.iam.account.v1.UserInformationUsernameUpdatedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	11,  // 50: accelbyte.iam.account.v1.UserInformationUsernameUpdatedPayloadData.user_information:type_name -> accelbyte.iam.account.v1.UserInformation
	6,   // 51: accelbyte.iam.account.v1.UserInformationDateOfBirthUpdatedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	11,  // 52: accelbyte.iam.account.v1.UserInformationDateOfBirthUpdatedPayloadData.user_information:type_name -> accelbyte.iam.account.v1.UserInformation
	6,   // 53: accelbyte.iam.account.v1.UserPermissionsCreatedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	1,   // 54: accelbyte.iam.account.v1.UserPermissionsCreatedPayloadData.permissions:type_name -> accelbyte.iam.account.v1.Permissions
	6,   // 55: accelbyte.iam.account.v1.UserPermissionsDeletedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	1,   // 56: accelbyte.iam.account.v1.UserPermissionsDeletedPayloadData.permissions:type_name -> accelbyte.iam.account.v1.Permissions
	6,   // 57: accelbyte.iam.account.v1.UserRolesCreatedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	12,  // 58: accelbyte.iam.account.v1.UserRolesCreatedPayloadData.roles:type_name -> accelbyte.iam.account.v1.Role
	6,   // 59: accelbyte.iam.account.v1.UserRolesDeletedPayloadData.user_account:type_name -> accelbyte.iam.account.v1.UserTestAccount
	13,  // 60: accelbyte.iam.account.v1.CountryAgeRestrictionCreatedPayloadData.country_age_restriction:type_name -> accelbyte.iam.account.v1.CountryAgeRestriction
	13,  // 61: accelbyte.iam.account.v1.CountryAgeRestrictionUpdatedPayloadData.country_age_restriction:type_name -> accelbyte.iam.account.v1.CountryAgeRestriction
	16,  // 62: accelbyte.iam.account.v1.ChatAllBannedPayloadData.user_feature_ban:type_name -> accelbyte.iam.account.v1.UserFeatureBan
	16,  // 63: accelbyte.iam.account.v1.ChatSendBannedPayloadData.user_feature_ban:type_name -> accelbyte.iam.account.v1.UserFeatureBan
	16,  // 64: accelbyte.iam.account.v1.LeaderboardBannedPayloadData.user_feature_ban:type_name -> accelbyte.iam.account.v1.UserFeatureBan
	16,  // 65: accelbyte.iam.account.v1.StatisticsBannedPayloadData.user_feature_ban:type_name -> accelbyte.iam.account.v1.UserFeatureBan
	16,  // 66: accelbyte.iam.account.v1.OrderAndPaymentBannedPayloadData.user_feature_ban:type_name -> accelbyte.iam.account.v1.UserFeatureBan
	16,  // 67: accelbyte.iam.account.v1.MatchmakingBannedPayloadData.user_feature_ban:type_name -> accelbyte.iam.account.v1.UserFeatureBan
	16,  // 68: accelbyte.iam.account.v1.UgcCreateUpdateBannedPayloadData.user_feature_ban:type_name -> accelbyte.iam.account.v1.UserFeatureBan
	17,  // 69: accelbyte.iam.account.v1.GdprRequestDataDeletionResponsePayloadData.deletion_gdpr:type_name -> accelbyte.iam.account.v1.DeletionGDPR
	24,  // 70: accelbyte.iam.account.v1.UserAccountCreated.payload:type_name -> accelbyte.iam.account.v1.UserAccountCreatedPayloadData
	25,  // 71: accelbyte.iam.account.v1.UserAccountDeleted.payload:type_name -> accelbyte.iam.account.v1.UserAccountDeletedPayloadData
	26,  // 72: accelbyte.iam.account.v1.UserAccountEnabled.payload:type_name -> accelbyte.iam.account.v1.UserAccountEnabledPayloadData
	27,  // 73: accelbyte.iam.account.v1.UserAccountDisabled.payload:type_name -> accelbyte.iam.account.v1.UserAccountDisabledPayloadData
	28,  // 74: accelbyte.iam.account.v1.UserAccountEmailUpdated.payload:type_name -> accelbyte.iam.account.v1.UserAccountEmailUpdatedPayloadData
	29,  // 75: accelbyte.iam.account.v1.UserAccountPasswordUpdated.payload:type_name -> accelbyte.iam.account.v1.UserAccountPasswordUpdatedPayloadData
	30,  // 76: accelbyte.iam.account.v1.UserAccountBanned.payload:type_name -> accelbyte.iam.account.v1.UserAccountBannedPayloadData
	31,  // 77: accelbyte.iam.account.v1.UserAccountUnbanned.payload:type_name -> accelbyte.iam.account.v1.UserAccountUnbannedPayloadData
	32,  // 78: accelbyte.iam.account.v1.UserAccountVerified.payload:type_name -> accelbyte.iam.account.v1.UserAccountVerifiedPayloadData
	33,  // 79: accelbyte.iam.account.v1.UserAccountLinked.payload:type_name -> accelbyte.iam.account.v1.AnonymousSchema12
	34,  // 80: accelbyte.iam.account.v1.UserAccountUnlinked.payload:type_name -> accelbyte.iam.account.v1.AnonymousSchema13
	35,  // 81: accelbyte.iam.account.v1.UserAccountUpgraded.payload:type_name -> accelbyte.iam.account.v1.UserAccountUpgradedPayloadData
	36,  // 82: accelbyte.iam.account.v1.GameUserAccountCreated.payload:type_name -> accelbyte.iam.account.v1.GameUserAccountCreatedPayloadData
	37,  // 83: accelbyte.iam.account.v1.GameUserCreated.payload:type_name -> accelbyte.iam.account.v1.GameUserCreatedPayloadData
	38,  // 84: accelbyte.iam.account.v1.ThirdPartyAccountCreated.payload:type_name -> accelbyte.iam.account.v1.ThirdPartyAccountCreatedPayloadData
	39,  // 85: accelbyte.iam.account.v1.UserAccountTypeChanged.payload:type_name -> accelbyte.iam.account.v1.UserAccountTypeChangedPayloadData
	40,  // 86: accelbyte.iam.account.v1.UserLoggedIn.payload:type_name -> accelbyte.iam.account.v1.AnonymousSchema19
	41,  // 87: accelbyte.iam.account.v1.UserLoggedOut.payload:type_name -> accelbyte.iam.account.v1.AnonymousSchema20
	42,  // 88: accelbyte.iam.account.v1.UserThirdPartyLoggedIn.payload:type_name -> accelbyte.iam.account.v1.AnonymousSchema21
	43,  // 89: accelbyte.iam.account.v1.UserLoginFailed.payload:type_name -> accelbyte.iam.account.v1.UserLoginFailedPayloadData
	44,  // 90: accelbyte.iam.account.v1.UserThirdPartyLoginFailed.payload:type_name -> accelbyte.iam.account.v1.UserThirdPartyLoginFailedPayloadData
	45,  // 91: accelbyte.iam.account.v1.UserInformationCreated.payload:type_name -> accelbyte.iam.account.v1.AnonymousSchema24
	46,  // 92: accelbyte.iam.account.v1.UserInformationDisplayNameUpdated.payload:type_name -> accelbyte.iam.account.v1.AnonymousSchema25
	47,  // 93: accelbyte.iam.account.v1.UserInformationCountryUpdated.payload:type_name -> accelbyte.iam.account.v1.UserInformationCountryUpdatedPayloadData
	48,  // 94: accelbyte.iam.account.v1.UserInformationLanguageUpdated.payload:type_name -> accelbyte.iam.account.v1.UserInformationLanguageUpdatedPayloadData
	49,  // 95: accelbyte.iam.account.v1.UserInformationUsernameUpdated.payload:type_name -> accelbyte.iam.account.v1.UserInformationUsernameUpdatedPayloadData
	50,  // 96: accelbyte.iam.account.v1.UserInformationDateOfBirthUpdated.payload:type_name -> accelbyte.iam.account.v1.UserInformationDateOfBirthUpdatedPayloadData
	51,  // 97: accelbyte.iam.account.v1.UserPermissionCreated.payload:type_name -> accelbyte.iam.account.v1.UserPermissionsCreatedPayloadData
	52,  // 98: accelbyte.iam.account.v1.UserPermissionDeleted.payload:type_name -> accelbyte.iam.account.v1.UserPermissionsDeletedPayloadData
	53,  // 99: accelbyte.iam.account.v1.UserRoleCreated.payload:type_name -> accelbyte.iam.account.v1.UserRolesCreatedPayloadData
	54,  // 100: accelbyte.iam.account.v1.UserRoleDeleted.payload:type_name -> accelbyte.iam.account.v1.UserRolesDeletedPayloadData
	55,  // 101: accelbyte.iam.account.v1.CountryAgeRestrictionCreated.payload:type_name -> accelbyte.iam.account.v1.CountryAgeRestrictionCreatedPayloadData
	56,  // 102: accelbyte.iam.account.v1.CountryAgeRestrictionUpdated.payload:type_name -> accelbyte.iam.account.v1.CountryAgeRestrictionUpdatedPayloadData
	57,  // 103: accelbyte.iam.account.v1.ChatAllBanned.payload:type_name -> accelbyte.iam.account.v1.ChatAllBannedPayloadData
	58,  // 104: accelbyte.iam.account.v1.ChatSendBanned.payload:type_name -> accelbyte.iam.account.v1.ChatSendBannedPayloadData
	59,  // 105: accelbyte.iam.account.v1.LeaderboardBanned.payload:type_name -> accelbyte.iam.account.v1.LeaderboardBannedPayloadData
	60,  // 106: accelbyte.iam.account.v1.StatisticsBanned.payload:type_name -> accelbyte.iam.account.v1.StatisticsBannedPayloadData
	61,  // 107: accelbyte.iam.account.v1.OrderAndPaymentBanned.payload:type_name -> accelbyte.iam.account.v1.OrderAndPaymentBannedPayloadData
	62,  // 108: accelbyte.iam.account.v1.MatchmakingBanned.payload:type_name -> accelbyte.iam.account.v1.MatchmakingBannedPayloadData
	63,  // 109: accelbyte.iam.account.v1.UgcCreateUpdateBanned.payload:type_name -> accelbyte.iam.account.v1.UgcCreateUpdateBannedPayloadData
	64,  // 110: accelbyte.iam.account.v1.UserDisconnectRequested.payload:type_name -> accelbyte.iam.account.v1.UserDisconnectRequestedPayloadData
	65,  // 111: accelbyte.iam.account.v1.GdprRequestDataDeletionResponse.payload:type_name -> accelbyte.iam.account.v1.GdprRequestDataDeletionResponsePayloadData
	66,  // 112: accelbyte.iam.account.v1.UserAccountCreatedMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountCreated
	67,  // 113: accelbyte.iam.account.v1.UserAccountDeletedMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountDeleted
	68,  // 114: accelbyte.iam.account.v1.UserAccountEnabledMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountEnabled
	69,  // 115: accelbyte.iam.account.v1.UserAccountDisabledMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountDisabled
	70,  // 116: accelbyte.iam.account.v1.UserAccountEmailUpdatedMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountEmailUpdated
	71,  // 117: accelbyte.iam.account.v1.UserAccountPasswordUpdatedMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountPasswordUpdated
	72,  // 118: accelbyte.iam.account.v1.UserAccountBannedMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountBanned
	73,  // 119: accelbyte.iam.account.v1.UserAccountUnbannedMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountUnbanned
	74,  // 120: accelbyte.iam.account.v1.UserAccountVerifiedMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountVerified
	75,  // 121: accelbyte.iam.account.v1.UserAccountLinkedMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountLinked
	76,  // 122: accelbyte.iam.account.v1.UserAccountUnlinkedMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountUnlinked
	77,  // 123: accelbyte.iam.account.v1.UserAccountUpgradedMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountUpgraded
	78,  // 124: accelbyte.iam.account.v1.GameUserAccountCreatedMessage.payload:type_name -> accelbyte.iam.account.v1.GameUserAccountCreated
	79,  // 125: accelbyte.iam.account.v1.GameUserCreatedMessage.payload:type_name -> accelbyte.iam.account.v1.GameUserCreated
	80,  // 126: accelbyte.iam.account.v1.ThirdPartyAccountCreatedMessage.payload:type_name -> accelbyte.iam.account.v1.ThirdPartyAccountCreated
	81,  // 127: accelbyte.iam.account.v1.UserAccountTypeChangedMessage.payload:type_name -> accelbyte.iam.account.v1.UserAccountTypeChanged
	82,  // 128: accelbyte.iam.account.v1.UserLoggedInMessage.payload:type_name -> accelbyte.iam.account.v1.UserLoggedIn
	83,  // 129: accelbyte.iam.account.v1.UserLoggedOutMessage.payload:type_name -> accelbyte.iam.account.v1.UserLoggedOut
	84,  // 130: accelbyte.iam.account.v1.UserThirdPartyLoggedInMessage.payload:type_name -> accelbyte.iam.account.v1.UserThirdPartyLoggedIn
	85,  // 131: accelbyte.iam.account.v1.UserLoginFailedMessage.payload:type_name -> accelbyte.iam.account.v1.UserLoginFailed
	86,  // 132: accelbyte.iam.account.v1.UserThirdPartyLoginFailedMessage.payload:type_name -> accelbyte.iam.account.v1.UserThirdPartyLoginFailed
	87,  // 133: accelbyte.iam.account.v1.UserInformationCreatedMessage.payload:type_name -> accelbyte.iam.account.v1.UserInformationCreated
	88,  // 134: accelbyte.iam.account.v1.UserInformationDisplayNameUpdatedMessage.payload:type_name -> accelbyte.iam.account.v1.UserInformationDisplayNameUpdated
	89,  // 135: accelbyte.iam.account.v1.UserInformationCountryUpdatedMessage.payload:type_name -> accelbyte.iam.account.v1.UserInformationCountryUpdated
	90,  // 136: accelbyte.iam.account.v1.UserInformationLanguageUpdatedMessage.payload:type_name -> accelbyte.iam.account.v1.UserInformationLanguageUpdated
	91,  // 137: accelbyte.iam.account.v1.UserInformationUsernameUpdatedMessage.payload:type_name -> accelbyte.iam.account.v1.UserInformationUsernameUpdated
	92,  // 138: accelbyte.iam.account.v1.UserInformationDateOfBirthUpdatedMessage.payload:type_name -> accelbyte.iam.account.v1.UserInformationDateOfBirthUpdated
	93,  // 139: accelbyte.iam.account.v1.UserPermissionsCreatedMessage.payload:type_name -> accelbyte.iam.account.v1.UserPermissionCreated
	94,  // 140: accelbyte.iam.account.v1.UserPermissionsDeletedMessage.payload:type_name -> accelbyte.iam.account.v1.UserPermissionDeleted
	95,  // 141: accelbyte.iam.account.v1.UserRolesCreatedMessage.payload:type_name -> accelbyte.iam.account.v1.UserRoleCreated
	96,  // 142: accelbyte.iam.account.v1.UserRolesDeletedMessage.payload:type_name -> accelbyte.iam.account.v1.UserRoleDeleted
	97,  // 143: accelbyte.iam.account.v1.CountryAgeRestrictionCreatedMessage.payload:type_name -> accelbyte.iam.account.v1.CountryAgeRestrictionCreated
	98,  // 144: accelbyte.iam.account.v1.CountryAgeRestrictionUpdatedMessage.payload:type_name -> accelbyte.iam.account.v1.CountryAgeRestrictionUpdated
	99,  // 145: accelbyte.iam.account.v1.ChatAllBannedMessage.payload:type_name -> accelbyte.iam.account.v1.ChatAllBanned
	100, // 146: accelbyte.iam.account.v1.ChatSendBannedMessage.payload:type_name -> accelbyte.iam.account.v1.ChatSendBanned
	101, // 147: accelbyte.iam.account.v1.LeaderboardBannedMessage.payload:type_name -> accelbyte.iam.account.v1.LeaderboardBanned
	102, // 148: accelbyte.iam.account.v1.StatisticsBannedMessage.payload:type_name -> accelbyte.iam.account.v1.StatisticsBanned
	103, // 149: accelbyte.iam.account.v1.OrderAndPaymentBannedMessage.payload:type_name -> accelbyte.iam.account.v1.OrderAndPaymentBanned
	104, // 150: accelbyte.iam.account.v1.MatchmakingBannedMessage.payload:type_name -> accelbyte.iam.account.v1.MatchmakingBanned
	105, // 151: accelbyte.iam.account.v1.UgcCreateUpdateBannedMessage.payload:type_name -> accelbyte.iam.account.v1.UgcCreateUpdateBanned
	106, // 152: accelbyte.iam.account.v1.UserDisconnectRequestedMessage.payload:type_name -> accelbyte.iam.account.v1.UserDisconnectRequested
	107, // 153: accelbyte.iam.account.v1.GdprRequestDataDeletionResponseMessage.payload:type_name -> accelbyte.iam.account.v1.GdprRequestDataDeletionResponse
	108, // 154: accelbyte.iam.account.v1.UserAccountPublish.variant0:type_name -> accelbyte.iam.account.v1.UserAccountCreatedMessage
	109, // 155: accelbyte.iam.account.v1.UserAccountPublish.variant1:type_name -> accelbyte.iam.account.v1.UserAccountDeletedMessage
	110, // 156: accelbyte.iam.account.v1.UserAccountPublish.variant2:type_name -> accelbyte.iam.account.v1.UserAccountEnabledMessage
	111, // 157: accelbyte.iam.account.v1.UserAccountPublish.variant3:type_name -> accelbyte.iam.account.v1.UserAccountDisabledMessage
	112, // 158: accelbyte.iam.account.v1.UserAccountPublish.variant4:type_name -> accelbyte.iam.account.v1.UserAccountEmailUpdatedMessage
	113, // 159: accelbyte.iam.account.v1.UserAccountPublish.variant5:type_name -> accelbyte.iam.account.v1.UserAccountPasswordUpdatedMessage
	114, // 160: accelbyte.iam.account.v1.UserAccountPublish.variant6:type_name -> accelbyte.iam.account.v1.UserAccountBannedMessage
	115, // 161: accelbyte.iam.account.v1.UserAccountPublish.variant7:type_name -> accelbyte.iam.account.v1.UserAccountUnbannedMessage
	116, // 162: accelbyte.iam.account.v1.UserAccountPublish.variant8:type_name -> accelbyte.iam.account.v1.UserAccountVerifiedMessage
	117, // 163: accelbyte.iam.account.v1.UserAccountPublish.variant9:type_name -> accelbyte.iam.account.v1.UserAccountLinkedMessage
	118, // 164: accelbyte.iam.account.v1.UserAccountPublish.variant10:type_name -> accelbyte.iam.account.v1.UserAccountUnlinkedMessage
	119, // 165: accelbyte.iam.account.v1.UserAccountPublish.variant11:type_name -> accelbyte.iam.account.v1.UserAccountUpgradedMessage
	120, // 166: accelbyte.iam.account.v1.UserAccountPublish.variant12:type_name -> accelbyte.iam.account.v1.GameUserAccountCreatedMessage
	122, // 167: accelbyte.iam.account.v1.UserAccountPublish.variant13:type_name -> accelbyte.iam.account.v1.ThirdPartyAccountCreatedMessage
	123, // 168: accelbyte.iam.account.v1.UserAccountPublish.variant14:type_name -> accelbyte.iam.account.v1.UserAccountTypeChangedMessage
	124, // 169: accelbyte.iam.account.v1.UserAuthenticationPublish.variant0:type_name -> accelbyte.iam.account.v1.UserLoggedInMessage
	125, // 170: accelbyte.iam.account.v1.UserAuthenticationPublish.variant1:type_name -> accelbyte.iam.account.v1.UserLoggedOutMessage
	126, // 171: accelbyte.iam.account.v1.UserAuthenticationPublish.variant2:type_name -> accelbyte.iam.account.v1.UserThirdPartyLoggedInMessage
	127, // 172: accelbyte.iam.account.v1.UserAuthenticationPublish.variant3:type_name -> accelbyte.iam.account.v1.UserLoginFailedMessage
	128, // 173: accelbyte.iam.account.v1.UserAuthenticationPublish.variant4:type_name -> accelbyte.iam.account.v1.UserThirdPartyLoginFailedMessage
	129, // 174: accelbyte.iam.account.v1.UserInformationPublish.variant0:type_name -> accelbyte.iam.account.v1.UserInformationCreatedMessage
	130, // 175: accelbyte.iam.account.v1.UserInformationPublish.variant1:type_name -> accelbyte.iam.account.v1.UserInformationDisplayNameUpdatedMessage
	131, // 176: accelbyte.iam.account.v1.UserInformationPublish.variant2:type_name -> accelbyte.iam.account.v1.UserInformationCountryUpdatedMessage
	132, // 177: accelbyte.iam.account.v1.UserInformationPublish.variant3:type_name -> accelbyte.iam.account.v1.UserInformationLanguageUpdatedMessage
	134, // 178: accelbyte.iam.account.v1.UserInformationPublish.variant4:type_name -> accelbyte.iam.account.v1.UserInformationDateOfBirthUpdatedMessage
	133, // 179: accelbyte.iam.account.v1.UserInformationPublish.variant5:type_name -> accelbyte.iam.account.v1.UserInformationUsernameUpdatedMessage
	135, // 180: accelbyte.iam.account.v1.UserPermissionsPublish.variant0:type_name -> accelbyte.iam.account.v1.UserPermissionsCreatedMessage
	136, // 181: accelbyte.iam.account.v1.UserPermissionsPublish.variant1:type_name -> accelbyte.iam.account.v1.UserPermissionsDeletedMessage
	137, // 182: accelbyte.iam.account.v1.UserRolesPublish.variant0:type_name -> accelbyte.iam.account.v1.UserRolesCreatedMessage
	138, // 183: accelbyte.iam.account.v1.UserRolesPublish.variant1:type_name -> accelbyte.iam.account.v1.UserRolesDeletedMessage
	139, // 184: accelbyte.iam.account.v1.CountryAgeRestrictionPublish.variant0:type_name -> accelbyte.iam.account.v1.CountryAgeRestrictionCreatedMessage
	140, // 185: accelbyte.iam.account.v1.CountryAgeRestrictionPublish.variant1:type_name -> accelbyte.iam.account.v1.CountryAgeRestrictionUpdatedMessage
	141, // 186: accelbyte.iam.account.v1.UserFeatureBanPublish.variant0:type_name -> accelbyte.iam.account.v1.ChatAllBannedMessage
	142, // 187: accelbyte.iam.account.v1.UserFeatureBanPublish.variant1:type_name -> accelbyte.iam.account.v1.ChatSendBannedMessage
	143, // 188: accelbyte.iam.account.v1.UserFeatureBanPublish.variant2:type_name -> accelbyte.iam.account.v1.LeaderboardBannedMessage
	144, // 189: accelbyte.iam.account.v1.UserFeatureBanPublish.variant3:type_name -> accelbyte.iam.account.v1.StatisticsBannedMessage
	145, // 190: accelbyte.iam.account.v1.UserFeatureBanPublish.variant4:type_name -> accelbyte.iam.account.v1.OrderAndPaymentBannedMessage
	146, // 191: accelbyte.iam.account.v1.UserFeatureBanPublish.variant5:type_name -> accelbyte.iam.account.v1.MatchmakingBannedMessage
	147, // 192: accelbyte.iam.account.v1.UserFeatureBanPublish.variant6:type_name -> accelbyte.iam.account.v1.UgcCreateUpdateBannedMessage
	66,  // 193: accelbyte.iam.account.v1.UserAccountUserAccountCreatedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountCreated
	67,  // 194: accelbyte.iam.account.v1.UserAccountUserAccountDeletedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountDeleted
	68,  // 195: accelbyte.iam.account.v1.UserAccountUserAccountEnabledService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountEnabled
	69,  // 196: accelbyte.iam.account.v1.UserAccountUserAccountDisabledService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountDisabled
	70,  // 197: accelbyte.iam.account.v1.UserAccountUserAccountEmailUpdatedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountEmailUpdated
	71,  // 198: accelbyte.iam.account.v1.UserAccountUserAccountPasswordUpdatedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountPasswordUpdated
	72,  // 199: accelbyte.iam.account.v1.UserAccountUserAccountBannedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountBanned
	73,  // 200: accelbyte.iam.account.v1.UserAccountUserAccountUnbannedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountUnbanned
	74,  // 201: accelbyte.iam.account.v1.UserAccountUserAccountVerifiedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountVerified
	75,  // 202: accelbyte.iam.account.v1.UserAccountUserAccountLinkedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountLinked
	76,  // 203: accelbyte.iam.account.v1.UserAccountUserAccountUnlinkedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountUnlinked
	77,  // 204: accelbyte.iam.account.v1.UserAccountUserAccountUpgradedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountUpgraded
	78,  // 205: accelbyte.iam.account.v1.UserAccountGameUserAccountCreatedService.OnMessage:input_type -> accelbyte.iam.account.v1.GameUserAccountCreated
	80,  // 206: accelbyte.iam.account.v1.UserAccountThirdPartyAccountCreatedService.OnMessage:input_type -> accelbyte.iam.account.v1.ThirdPartyAccountCreated
	81,  // 207: accelbyte.iam.account.v1.UserAccountUserAccountTypeChangedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserAccountTypeChanged
	82,  // 208: accelbyte.iam.account.v1.UserAuthenticationUserLoggedInService.OnMessage:input_type -> accelbyte.iam.account.v1.UserLoggedIn
	83,  // 209: accelbyte.iam.account.v1.UserAuthenticationUserLoggedOutService.OnMessage:input_type -> accelbyte.iam.account.v1.UserLoggedOut
	84,  // 210: accelbyte.iam.account.v1.UserAuthenticationUserThirdPartyLoggedInService.OnMessage:input_type -> accelbyte.iam.account.v1.UserThirdPartyLoggedIn
	85,  // 211: accelbyte.iam.account.v1.UserAuthenticationUserLoginFailedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserLoginFailed
	86,  // 212: accelbyte.iam.account.v1.UserAuthenticationUserThirdPartyLoginFailedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserThirdPartyLoginFailed
	87,  // 213: accelbyte.iam.account.v1.UserInformationUserInformationCreatedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserInformationCreated
	88,  // 214: accelbyte.iam.account.v1.UserInformationUserInformationDisplayNameUpdatedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserInformationDisplayNameUpdated
	89,  // 215: accelbyte.iam.account.v1.UserInformationUserInformationCountryUpdatedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserInformationCountryUpdated
	90,  // 216: accelbyte.iam.account.v1.UserInformationUserInformationLanguageUpdatedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserInformationLanguageUpdated
	92,  // 217: accelbyte.iam.account.v1.UserInformationUserInformationDateOfBirthUpdatedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserInformationDateOfBirthUpdated
	91,  // 218: accelbyte.iam.account.v1.UserInformationUserInformationUsernameUpdatedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserInformationUsernameUpdated
	93,  // 219: accelbyte.iam.account.v1.UserPermissionsUserPermissionsCreatedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserPermissionCreated
	94,  // 220: accelbyte.iam.account.v1.UserPermissionsUserPermissionsDeletedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserPermissionDeleted
	95,  // 221: accelbyte.iam.account.v1.UserRolesUserRolesCreatedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserRoleCreated
	96,  // 222: accelbyte.iam.account.v1.UserRolesUserRolesDeletedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserRoleDeleted
	97,  // 223: accelbyte.iam.account.v1.CountryAgeRestrictionCountryAgeRestrictionCreatedService.OnMessage:input_type -> accelbyte.iam.account.v1.CountryAgeRestrictionCreated
	98,  // 224: accelbyte.iam.account.v1.CountryAgeRestrictionCountryAgeRestrictionUpdatedService.OnMessage:input_type -> accelbyte.iam.account.v1.CountryAgeRestrictionUpdated
	79,  // 225: accelbyte.iam.account.v1.UserTranslationsGameUserCreatedService.OnMessage:input_type -> accelbyte.iam.account.v1.GameUserCreated
	99,  // 226: accelbyte.iam.account.v1.UserFeatureBanChatAllBannedService.OnMessage:input_type -> accelbyte.iam.account.v1.ChatAllBanned
	100, // 227: accelbyte.iam.account.v1.UserFeatureBanChatSendBannedService.OnMessage:input_type -> accelbyte.iam.account.v1.ChatSendBanned
	101, // 228: accelbyte.iam.account.v1.UserFeatureBanLeaderboardBannedService.OnMessage:input_type -> accelbyte.iam.account.v1.LeaderboardBanned
	102, // 229: accelbyte.iam.account.v1.UserFeatureBanStatisticsBannedService.OnMessage:input_type -> accelbyte.iam.account.v1.StatisticsBanned
	103, // 230: accelbyte.iam.account.v1.UserFeatureBanOrderAndPaymentBannedService.OnMessage:input_type -> accelbyte.iam.account.v1.OrderAndPaymentBanned
	104, // 231: accelbyte.iam.account.v1.UserFeatureBanMatchmakingBannedService.OnMessage:input_type -> accelbyte.iam.account.v1.MatchmakingBanned
	105, // 232: accelbyte.iam.account.v1.UserFeatureBanUgcCreateUpdateBannedService.OnMessage:input_type -> accelbyte.iam.account.v1.UgcCreateUpdateBanned
	106, // 233: accelbyte.iam.account.v1.LobbyUserDisconnectRequestedService.OnMessage:input_type -> accelbyte.iam.account.v1.UserDisconnectRequested
	107, // 234: accelbyte.iam.account.v1.DeletionAccountGdprGdprRequestDataDeletionResponseService.OnMessage:input_type -> accelbyte.iam.account.v1.GdprRequestDataDeletionResponse
	157, // 235: accelbyte.iam.account.v1.UserAccountUserAccountCreatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 236: accelbyte.iam.account.v1.UserAccountUserAccountDeletedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 237: accelbyte.iam.account.v1.UserAccountUserAccountEnabledService.OnMessage:output_type -> google.protobuf.Empty
	157, // 238: accelbyte.iam.account.v1.UserAccountUserAccountDisabledService.OnMessage:output_type -> google.protobuf.Empty
	157, // 239: accelbyte.iam.account.v1.UserAccountUserAccountEmailUpdatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 240: accelbyte.iam.account.v1.UserAccountUserAccountPasswordUpdatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 241: accelbyte.iam.account.v1.UserAccountUserAccountBannedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 242: accelbyte.iam.account.v1.UserAccountUserAccountUnbannedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 243: accelbyte.iam.account.v1.UserAccountUserAccountVerifiedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 244: accelbyte.iam.account.v1.UserAccountUserAccountLinkedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 245: accelbyte.iam.account.v1.UserAccountUserAccountUnlinkedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 246: accelbyte.iam.account.v1.UserAccountUserAccountUpgradedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 247: accelbyte.iam.account.v1.UserAccountGameUserAccountCreatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 248: accelbyte.iam.account.v1.UserAccountThirdPartyAccountCreatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 249: accelbyte.iam.account.v1.UserAccountUserAccountTypeChangedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 250: accelbyte.iam.account.v1.UserAuthenticationUserLoggedInService.OnMessage:output_type -> google.protobuf.Empty
	157, // 251: accelbyte.iam.account.v1.UserAuthenticationUserLoggedOutService.OnMessage:output_type -> google.protobuf.Empty
	157, // 252: accelbyte.iam.account.v1.UserAuthenticationUserThirdPartyLoggedInService.OnMessage:output_type -> google.protobuf.Empty
	157, // 253: accelbyte.iam.account.v1.UserAuthenticationUserLoginFailedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 254: accelbyte.iam.account.v1.UserAuthenticationUserThirdPartyLoginFailedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 255: accelbyte.iam.account.v1.UserInformationUserInformationCreatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 256: accelbyte.iam.account.v1.UserInformationUserInformationDisplayNameUpdatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 257: accelbyte.iam.account.v1.UserInformationUserInformationCountryUpdatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 258: accelbyte.iam.account.v1.UserInformationUserInformationLanguageUpdatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 259: accelbyte.iam.account.v1.UserInformationUserInformationDateOfBirthUpdatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 260: accelbyte.iam.account.v1.UserInformationUserInformationUsernameUpdatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 261: accelbyte.iam.account.v1.UserPermissionsUserPermissionsCreatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 262: accelbyte.iam.account.v1.UserPermissionsUserPermissionsDeletedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 263: accelbyte.iam.account.v1.UserRolesUserRolesCreatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 264: accelbyte.iam.account.v1.UserRolesUserRolesDeletedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 265: accelbyte.iam.account.v1.CountryAgeRestrictionCountryAgeRestrictionCreatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 266: accelbyte.iam.account.v1.CountryAgeRestrictionCountryAgeRestrictionUpdatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 267: accelbyte.iam.account.v1.UserTranslationsGameUserCreatedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 268: accelbyte.iam.account.v1.UserFeatureBanChatAllBannedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 269: accelbyte.iam.account.v1.UserFeatureBanChatSendBannedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 270: accelbyte.iam.account.v1.UserFeatureBanLeaderboardBannedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 271: accelbyte.iam.account.v1.UserFeatureBanStatisticsBannedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 272: accelbyte.iam.account.v1.UserFeatureBanOrderAndPaymentBannedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 273: accelbyte.iam.account.v1.UserFeatureBanMatchmakingBannedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 274: accelbyte.iam.account.v1.UserFeatureBanUgcCreateUpdateBannedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 275: accelbyte.iam.account.v1.LobbyUserDisconnectRequestedService.OnMessage:output_type -> google.protobuf.Empty
	157, // 276: accelbyte.iam.account.v1.DeletionAccountGdprGdprRequestDataDeletionResponseService.OnMessage:output_type -> google.protobuf.Empty
	235, // [235:277] is the sub-list for method output_type
	193, // [193:235] is the sub-list for method input_type
	193, // [193:193] is the sub-list for extension type_name
	193, // [193:193] is the sub-list for extension extendee
	0,   // [0:193] is the sub-list for field type_name
}

func init() { file_accelbyte_asyncapi_iam_account_v1_account_proto_init() }
func file_accelbyte_asyncapi_iam_account_v1_account_proto_init() {
	if File_accelbyte_asyncapi_iam_account_v1_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAuthentication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAuthenticationFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTestAccountGameDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTestAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGameAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountBanItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountBan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryAgeRestriction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFeatureBan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletionGDPR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountThirdParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountThirdPartyLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountUnlink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountUpgrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountTypeChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountCreatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountDeletedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountEnabledPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountDisabledPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountEmailUpdatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountPasswordUpdatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountBannedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountUnbannedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountVerifiedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema12); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema13); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountUpgradedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUserAccountCreatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUserCreatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdPartyAccountCreatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountTypeChangedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema19); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema20); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema21); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginFailedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserThirdPartyLoginFailedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema24); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema25); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationCountryUpdatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationLanguageUpdatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationUsernameUpdatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationDateOfBirthUpdatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermissionsCreatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermissionsDeletedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRolesCreatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRolesDeletedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryAgeRestrictionCreatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryAgeRestrictionUpdatedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatAllBannedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatSendBannedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardBannedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsBannedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAndPaymentBannedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchmakingBannedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcCreateUpdateBannedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDisconnectRequestedPayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdprRequestDataDeletionResponsePayloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountEnabled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountDisabled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountEmailUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountPasswordUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountBanned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountUnbanned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountVerified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountLinked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountUnlinked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountUpgraded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUserAccountCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUserCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdPartyAccountCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountTypeChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoggedIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoggedOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserThirdPartyLoggedIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserThirdPartyLoginFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationDisplayNameUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationCountryUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationLanguageUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationUsernameUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationDateOfBirthUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermissionCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermissionDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRoleCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRoleDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryAgeRestrictionCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryAgeRestrictionUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatAllBanned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatSendBanned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardBanned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsBanned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAndPaymentBanned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchmakingBanned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcCreateUpdateBanned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDisconnectRequested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdprRequestDataDeletionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountDeletedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountEnabledMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountDisabledMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountEmailUpdatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountPasswordUpdatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountBannedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountUnbannedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountVerifiedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountLinkedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountUnlinkedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountUpgradedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUserAccountCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUserCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdPartyAccountCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountTypeChangedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoggedInMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoggedOutMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserThirdPartyLoggedInMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginFailedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserThirdPartyLoginFailedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationDisplayNameUpdatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationCountryUpdatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationLanguageUpdatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationUsernameUpdatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationDateOfBirthUpdatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermissionsCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermissionsDeletedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRolesCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRolesDeletedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryAgeRestrictionCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryAgeRestrictionUpdatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatAllBannedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatSendBannedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderboardBannedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsBannedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAndPaymentBannedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchmakingBannedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcCreateUpdateBannedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDisconnectRequestedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdprRequestDataDeletionResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAuthenticationPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInformationPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermissionsPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRolesPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryAgeRestrictionPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFeatureBanPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[150].OneofWrappers = []interface{}{
		(*UserAccountPublish_Variant0)(nil),
		(*UserAccountPublish_Variant1)(nil),
		(*UserAccountPublish_Variant2)(nil),
		(*UserAccountPublish_Variant3)(nil),
		(*UserAccountPublish_Variant4)(nil),
		(*UserAccountPublish_Variant5)(nil),
		(*UserAccountPublish_Variant6)(nil),
		(*UserAccountPublish_Variant7)(nil),
		(*UserAccountPublish_Variant8)(nil),
		(*UserAccountPublish_Variant9)(nil),
		(*UserAccountPublish_Variant10)(nil),
		(*UserAccountPublish_Variant11)(nil),
		(*UserAccountPublish_Variant12)(nil),
		(*UserAccountPublish_Variant13)(nil),
		(*UserAccountPublish_Variant14)(nil),
	}
	file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[151].OneofWrappers = []interface{}{
		(*UserAuthenticationPublish_Variant0)(nil),
		(*UserAuthenticationPublish_Variant1)(nil),
		(*UserAuthenticationPublish_Variant2)(nil),
		(*UserAuthenticationPublish_Variant3)(nil),
		(*UserAuthenticationPublish_Variant4)(nil),
	}
	file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[152].OneofWrappers = []interface{}{
		(*UserInformationPublish_Variant0)(nil),
		(*UserInformationPublish_Variant1)(nil),
		(*UserInformationPublish_Variant2)(nil),
		(*UserInformationPublish_Variant3)(nil),
		(*UserInformationPublish_Variant4)(nil),
		(*UserInformationPublish_Variant5)(nil),
	}
	file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[153].OneofWrappers = []interface{}{
		(*UserPermissionsPublish_Variant0)(nil),
		(*UserPermissionsPublish_Variant1)(nil),
	}
	file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[154].OneofWrappers = []interface{}{
		(*UserRolesPublish_Variant0)(nil),
		(*UserRolesPublish_Variant1)(nil),
	}
	file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[155].OneofWrappers = []interface{}{
		(*CountryAgeRestrictionPublish_Variant0)(nil),
		(*CountryAgeRestrictionPublish_Variant1)(nil),
	}
	file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes[156].OneofWrappers = []interface{}{
		(*UserFeatureBanPublish_Variant0)(nil),
		(*UserFeatureBanPublish_Variant1)(nil),
		(*UserFeatureBanPublish_Variant2)(nil),
		(*UserFeatureBanPublish_Variant3)(nil),
		(*UserFeatureBanPublish_Variant4)(nil),
		(*UserFeatureBanPublish_Variant5)(nil),
		(*UserFeatureBanPublish_Variant6)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   157,
			NumExtensions: 0,
			NumServices:   42,
		},
		GoTypes:           file_accelbyte_asyncapi_iam_account_v1_account_proto_goTypes,
		DependencyIndexes: file_accelbyte_asyncapi_iam_account_v1_account_proto_depIdxs,
		MessageInfos:      file_accelbyte_asyncapi_iam_account_v1_account_proto_msgTypes,
	}.Build()
	File_accelbyte_asyncapi_iam_account_v1_account_proto = out.File
	file_accelbyte_asyncapi_iam_account_v1_account_proto_rawDesc = nil
	file_accelbyte_asyncapi_iam_account_v1_account_proto_goTypes = nil
	file_accelbyte_asyncapi_iam_account_v1_account_proto_depIdxs = nil
}
