// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: IAM/AsyncAPI/rbac.yaml (0.1.0)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: accelbyte-asyncapi/iam/rbac/v1/rbac.proto

package rbac

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// path: #/components/schemas/event
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,5,opt,name=parentNamespace,proto3" json:"parentNamespace,omitempty"`
	Timestamp       string `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,7,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId          string `protobuf:"bytes,8,opt,name=userId,proto3" json:"userId,omitempty"`
	TraceId         string `protobuf:"bytes,9,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SessionId       string `protobuf:"bytes,10,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Event) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *Event) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Event) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Event) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Event) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *Event) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/schemas/permissions
type Permissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resoure     string   `protobuf:"bytes,1,opt,name=resoure,proto3" json:"resoure,omitempty"`
	Action      string   `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	SchedAction int64    `protobuf:"varint,3,opt,name=schedAction,proto3" json:"schedAction,omitempty"`
	SchedCron   string   `protobuf:"bytes,4,opt,name=schedCron,proto3" json:"schedCron,omitempty"`
	SchedRange  []string `protobuf:"bytes,5,rep,name=schedRange,proto3" json:"schedRange,omitempty"`
}

func (x *Permissions) Reset() {
	*x = Permissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{1}
}

func (x *Permissions) GetResoure() string {
	if x != nil {
		return x.Resoure
	}
	return ""
}

func (x *Permissions) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Permissions) GetSchedAction() int64 {
	if x != nil {
		return x.SchedAction
	}
	return 0
}

func (x *Permissions) GetSchedCron() string {
	if x != nil {
		return x.SchedCron
	}
	return ""
}

func (x *Permissions) GetSchedRange() []string {
	if x != nil {
		return x.SchedRange
	}
	return nil
}

// path: #/components/schemas/role
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId         string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Admin          bool   `protobuf:"varint,3,opt,name=admin,proto3" json:"admin,omitempty"`
	RoleIsWildcard bool   `protobuf:"varint,4,opt,name=roleIsWildcard,proto3" json:"roleIsWildcard,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{2}
}

func (x *Role) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *Role) GetRoleIsWildcard() bool {
	if x != nil {
		return x.RoleIsWildcard
	}
	return false
}

// path: #/components/schemas/roleManager
type RoleManager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	DisplayName string `protobuf:"bytes,3,opt,name=displayName,proto3" json:"displayName,omitempty"`
}

func (x *RoleManager) Reset() {
	*x = RoleManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleManager) ProtoMessage() {}

func (x *RoleManager) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleManager.ProtoReflect.Descriptor instead.
func (*RoleManager) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{3}
}

func (x *RoleManager) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoleManager) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RoleManager) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

// path: #/components/schemas/roleMember
type RoleMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	DisplayName string `protobuf:"bytes,3,opt,name=displayName,proto3" json:"displayName,omitempty"`
}

func (x *RoleMember) Reset() {
	*x = RoleMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMember) ProtoMessage() {}

func (x *RoleMember) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMember.ProtoReflect.Descriptor instead.
func (*RoleMember) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{4}
}

func (x *RoleMember) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoleMember) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RoleMember) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

// path: #/components/messages/roleCreated/payload/properties/payload
type AnonymousSchema1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AnonymousSchema1) Reset() {
	*x = AnonymousSchema1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema1) ProtoMessage() {}

func (x *AnonymousSchema1) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema1.ProtoReflect.Descriptor instead.
func (*AnonymousSchema1) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{5}
}

func (x *AnonymousSchema1) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// path: #/components/messages/roleCreated/payload
type RoleCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema1 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parentNamespace,proto3" json:"parentNamespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *RoleCreated) Reset() {
	*x = RoleCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleCreated) ProtoMessage() {}

func (x *RoleCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleCreated.ProtoReflect.Descriptor instead.
func (*RoleCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{6}
}

func (x *RoleCreated) GetPayload() *AnonymousSchema1 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RoleCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoleCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RoleCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *RoleCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RoleCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RoleCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoleCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RoleCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/roleDeleted/payload/properties/payload
type AnonymousSchema2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AnonymousSchema2) Reset() {
	*x = AnonymousSchema2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema2) ProtoMessage() {}

func (x *AnonymousSchema2) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema2.ProtoReflect.Descriptor instead.
func (*AnonymousSchema2) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{7}
}

func (x *AnonymousSchema2) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// path: #/components/messages/roleDeleted/payload
type RoleDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema2 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parentNamespace,proto3" json:"parentNamespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *RoleDeleted) Reset() {
	*x = RoleDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDeleted) ProtoMessage() {}

func (x *RoleDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDeleted.ProtoReflect.Descriptor instead.
func (*RoleDeleted) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{8}
}

func (x *RoleDeleted) GetPayload() *AnonymousSchema2 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RoleDeleted) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleDeleted) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoleDeleted) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleDeleted) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RoleDeleted) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *RoleDeleted) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RoleDeleted) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RoleDeleted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoleDeleted) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RoleDeleted) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/roleUpdated/payload/properties/payload
type AnonymousSchema3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AnonymousSchema3) Reset() {
	*x = AnonymousSchema3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema3) ProtoMessage() {}

func (x *AnonymousSchema3) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema3.ProtoReflect.Descriptor instead.
func (*AnonymousSchema3) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{9}
}

func (x *AnonymousSchema3) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// path: #/components/messages/roleUpdated/payload
type RoleUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema3 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parentNamespace,proto3" json:"parentNamespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *RoleUpdated) Reset() {
	*x = RoleUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUpdated) ProtoMessage() {}

func (x *RoleUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUpdated.ProtoReflect.Descriptor instead.
func (*RoleUpdated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{10}
}

func (x *RoleUpdated) GetPayload() *AnonymousSchema3 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RoleUpdated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleUpdated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoleUpdated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleUpdated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RoleUpdated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *RoleUpdated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RoleUpdated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RoleUpdated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoleUpdated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RoleUpdated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/rolePermissionCreated/payload/properties/payload
type AnonymousSchema4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role        *Role          `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Permissions []*Permissions `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *AnonymousSchema4) Reset() {
	*x = AnonymousSchema4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema4) ProtoMessage() {}

func (x *AnonymousSchema4) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema4.ProtoReflect.Descriptor instead.
func (*AnonymousSchema4) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{11}
}

func (x *AnonymousSchema4) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *AnonymousSchema4) GetPermissions() []*Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// path: #/components/messages/rolePermissionCreated/payload
type RolePermissionCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema4 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parentNamespace,proto3" json:"parentNamespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *RolePermissionCreated) Reset() {
	*x = RolePermissionCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePermissionCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermissionCreated) ProtoMessage() {}

func (x *RolePermissionCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermissionCreated.ProtoReflect.Descriptor instead.
func (*RolePermissionCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{12}
}

func (x *RolePermissionCreated) GetPayload() *AnonymousSchema4 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RolePermissionCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RolePermissionCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RolePermissionCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RolePermissionCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RolePermissionCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *RolePermissionCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RolePermissionCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RolePermissionCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RolePermissionCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RolePermissionCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/rolePermissionDeleted/payload/properties/payload
type AnonymousSchema5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role        *Role          `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Permissions []*Permissions `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *AnonymousSchema5) Reset() {
	*x = AnonymousSchema5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema5) ProtoMessage() {}

func (x *AnonymousSchema5) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema5.ProtoReflect.Descriptor instead.
func (*AnonymousSchema5) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{13}
}

func (x *AnonymousSchema5) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *AnonymousSchema5) GetPermissions() []*Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// path: #/components/messages/rolePermissionDeleted/payload
type RolePermissionDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema5 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parentNamespace,proto3" json:"parentNamespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *RolePermissionDeleted) Reset() {
	*x = RolePermissionDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePermissionDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermissionDeleted) ProtoMessage() {}

func (x *RolePermissionDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermissionDeleted.ProtoReflect.Descriptor instead.
func (*RolePermissionDeleted) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{14}
}

func (x *RolePermissionDeleted) GetPayload() *AnonymousSchema5 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RolePermissionDeleted) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RolePermissionDeleted) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RolePermissionDeleted) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RolePermissionDeleted) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RolePermissionDeleted) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *RolePermissionDeleted) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RolePermissionDeleted) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RolePermissionDeleted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RolePermissionDeleted) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RolePermissionDeleted) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/rolePermissionUpdated/payload/properties/payload
type AnonymousSchema6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role        *Role          `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Permissions []*Permissions `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *AnonymousSchema6) Reset() {
	*x = AnonymousSchema6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema6) ProtoMessage() {}

func (x *AnonymousSchema6) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema6.ProtoReflect.Descriptor instead.
func (*AnonymousSchema6) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{15}
}

func (x *AnonymousSchema6) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *AnonymousSchema6) GetPermissions() []*Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// path: #/components/messages/rolePermissionUpdated/payload
type RolePermissionUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema6 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parentNamespace,proto3" json:"parentNamespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *RolePermissionUpdated) Reset() {
	*x = RolePermissionUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePermissionUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermissionUpdated) ProtoMessage() {}

func (x *RolePermissionUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermissionUpdated.ProtoReflect.Descriptor instead.
func (*RolePermissionUpdated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{16}
}

func (x *RolePermissionUpdated) GetPayload() *AnonymousSchema6 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RolePermissionUpdated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RolePermissionUpdated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RolePermissionUpdated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RolePermissionUpdated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RolePermissionUpdated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *RolePermissionUpdated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RolePermissionUpdated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RolePermissionUpdated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RolePermissionUpdated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RolePermissionUpdated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/roleManagerCreated/payload/properties/payload
type AnonymousSchema7 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role        *Role          `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	RoleManager []*RoleManager `protobuf:"bytes,2,rep,name=roleManager,proto3" json:"roleManager,omitempty"`
}

func (x *AnonymousSchema7) Reset() {
	*x = AnonymousSchema7{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema7) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema7) ProtoMessage() {}

func (x *AnonymousSchema7) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema7.ProtoReflect.Descriptor instead.
func (*AnonymousSchema7) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{17}
}

func (x *AnonymousSchema7) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *AnonymousSchema7) GetRoleManager() []*RoleManager {
	if x != nil {
		return x.RoleManager
	}
	return nil
}

// path: #/components/messages/roleManagerCreated/payload
type RoleManagerCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema7 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parentNamespace,proto3" json:"parentNamespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *RoleManagerCreated) Reset() {
	*x = RoleManagerCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleManagerCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleManagerCreated) ProtoMessage() {}

func (x *RoleManagerCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleManagerCreated.ProtoReflect.Descriptor instead.
func (*RoleManagerCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{18}
}

func (x *RoleManagerCreated) GetPayload() *AnonymousSchema7 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RoleManagerCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleManagerCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoleManagerCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleManagerCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RoleManagerCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *RoleManagerCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RoleManagerCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RoleManagerCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoleManagerCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RoleManagerCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/roleManagerDeleted/payload/properties/payload
type AnonymousSchema8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role        *Role          `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	RoleManager []*RoleManager `protobuf:"bytes,2,rep,name=roleManager,proto3" json:"roleManager,omitempty"`
}

func (x *AnonymousSchema8) Reset() {
	*x = AnonymousSchema8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema8) ProtoMessage() {}

func (x *AnonymousSchema8) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema8.ProtoReflect.Descriptor instead.
func (*AnonymousSchema8) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{19}
}

func (x *AnonymousSchema8) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *AnonymousSchema8) GetRoleManager() []*RoleManager {
	if x != nil {
		return x.RoleManager
	}
	return nil
}

// path: #/components/messages/roleManagerDeleted/payload
type RoleManagerDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema8 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parentNamespace,proto3" json:"parentNamespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *RoleManagerDeleted) Reset() {
	*x = RoleManagerDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleManagerDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleManagerDeleted) ProtoMessage() {}

func (x *RoleManagerDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleManagerDeleted.ProtoReflect.Descriptor instead.
func (*RoleManagerDeleted) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{20}
}

func (x *RoleManagerDeleted) GetPayload() *AnonymousSchema8 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RoleManagerDeleted) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleManagerDeleted) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoleManagerDeleted) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleManagerDeleted) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RoleManagerDeleted) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *RoleManagerDeleted) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RoleManagerDeleted) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RoleManagerDeleted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoleManagerDeleted) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RoleManagerDeleted) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/roleMemberCreated/payload/properties/payload
type AnonymousSchema9 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role       *Role         `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	RoleMember []*RoleMember `protobuf:"bytes,2,rep,name=roleMember,proto3" json:"roleMember,omitempty"`
}

func (x *AnonymousSchema9) Reset() {
	*x = AnonymousSchema9{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema9) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema9) ProtoMessage() {}

func (x *AnonymousSchema9) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema9.ProtoReflect.Descriptor instead.
func (*AnonymousSchema9) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{21}
}

func (x *AnonymousSchema9) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *AnonymousSchema9) GetRoleMember() []*RoleMember {
	if x != nil {
		return x.RoleMember
	}
	return nil
}

// path: #/components/messages/roleMemberCreated/payload
type RoleMemberCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema9 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parentNamespace,proto3" json:"parentNamespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *RoleMemberCreated) Reset() {
	*x = RoleMemberCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMemberCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMemberCreated) ProtoMessage() {}

func (x *RoleMemberCreated) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMemberCreated.ProtoReflect.Descriptor instead.
func (*RoleMemberCreated) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{22}
}

func (x *RoleMemberCreated) GetPayload() *AnonymousSchema9 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RoleMemberCreated) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleMemberCreated) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoleMemberCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleMemberCreated) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RoleMemberCreated) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *RoleMemberCreated) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RoleMemberCreated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RoleMemberCreated) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoleMemberCreated) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RoleMemberCreated) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/roleMemberDeleted/payload/properties/payload
type AnonymousSchema10 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role       *Role         `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	RoleMember []*RoleMember `protobuf:"bytes,2,rep,name=roleMember,proto3" json:"roleMember,omitempty"`
}

func (x *AnonymousSchema10) Reset() {
	*x = AnonymousSchema10{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymousSchema10) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymousSchema10) ProtoMessage() {}

func (x *AnonymousSchema10) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymousSchema10.ProtoReflect.Descriptor instead.
func (*AnonymousSchema10) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{23}
}

func (x *AnonymousSchema10) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *AnonymousSchema10) GetRoleMember() []*RoleMember {
	if x != nil {
		return x.RoleMember
	}
	return nil
}

// path: #/components/messages/roleMemberDeleted/payload
type RoleMemberDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AnonymousSchema10 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// allOf(#/components/schemas/event)
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version         int64  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentNamespace string `protobuf:"bytes,6,opt,name=parentNamespace,proto3" json:"parentNamespace,omitempty"`
	Timestamp       string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId        string `protobuf:"bytes,8,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId          string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	TraceId         string `protobuf:"bytes,10,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SessionId       string `protobuf:"bytes,11,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *RoleMemberDeleted) Reset() {
	*x = RoleMemberDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMemberDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMemberDeleted) ProtoMessage() {}

func (x *RoleMemberDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMemberDeleted.ProtoReflect.Descriptor instead.
func (*RoleMemberDeleted) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{24}
}

func (x *RoleMemberDeleted) GetPayload() *AnonymousSchema10 {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RoleMemberDeleted) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleMemberDeleted) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoleMemberDeleted) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleMemberDeleted) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RoleMemberDeleted) GetParentNamespace() string {
	if x != nil {
		return x.ParentNamespace
	}
	return ""
}

func (x *RoleMemberDeleted) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *RoleMemberDeleted) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RoleMemberDeleted) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoleMemberDeleted) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RoleMemberDeleted) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// path: #/components/messages/roleCreated
type RoleCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RoleCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RoleCreatedMessage) Reset() {
	*x = RoleCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleCreatedMessage) ProtoMessage() {}

func (x *RoleCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleCreatedMessage.ProtoReflect.Descriptor instead.
func (*RoleCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{25}
}

func (x *RoleCreatedMessage) GetPayload() *RoleCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/roleDeleted
type RoleDeletedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RoleDeleted `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RoleDeletedMessage) Reset() {
	*x = RoleDeletedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDeletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDeletedMessage) ProtoMessage() {}

func (x *RoleDeletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDeletedMessage.ProtoReflect.Descriptor instead.
func (*RoleDeletedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{26}
}

func (x *RoleDeletedMessage) GetPayload() *RoleDeleted {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/roleUpdated
type RoleUpdatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RoleUpdated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RoleUpdatedMessage) Reset() {
	*x = RoleUpdatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUpdatedMessage) ProtoMessage() {}

func (x *RoleUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUpdatedMessage.ProtoReflect.Descriptor instead.
func (*RoleUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{27}
}

func (x *RoleUpdatedMessage) GetPayload() *RoleUpdated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/rolePermissionCreated
type RolePermissionCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RolePermissionCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RolePermissionCreatedMessage) Reset() {
	*x = RolePermissionCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePermissionCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermissionCreatedMessage) ProtoMessage() {}

func (x *RolePermissionCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermissionCreatedMessage.ProtoReflect.Descriptor instead.
func (*RolePermissionCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{28}
}

func (x *RolePermissionCreatedMessage) GetPayload() *RolePermissionCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/rolePermissionDeleted
type RolePermissionDeletedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RolePermissionDeleted `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RolePermissionDeletedMessage) Reset() {
	*x = RolePermissionDeletedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePermissionDeletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermissionDeletedMessage) ProtoMessage() {}

func (x *RolePermissionDeletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermissionDeletedMessage.ProtoReflect.Descriptor instead.
func (*RolePermissionDeletedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{29}
}

func (x *RolePermissionDeletedMessage) GetPayload() *RolePermissionDeleted {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/rolePermissionUpdated
type RolePermissionUpdatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RolePermissionUpdated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RolePermissionUpdatedMessage) Reset() {
	*x = RolePermissionUpdatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePermissionUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermissionUpdatedMessage) ProtoMessage() {}

func (x *RolePermissionUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermissionUpdatedMessage.ProtoReflect.Descriptor instead.
func (*RolePermissionUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{30}
}

func (x *RolePermissionUpdatedMessage) GetPayload() *RolePermissionUpdated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/roleManagerCreated
type RoleManagerCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RoleManagerCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RoleManagerCreatedMessage) Reset() {
	*x = RoleManagerCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleManagerCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleManagerCreatedMessage) ProtoMessage() {}

func (x *RoleManagerCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleManagerCreatedMessage.ProtoReflect.Descriptor instead.
func (*RoleManagerCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{31}
}

func (x *RoleManagerCreatedMessage) GetPayload() *RoleManagerCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/roleManagerDeleted
type RoleManagerDeletedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RoleManagerDeleted `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RoleManagerDeletedMessage) Reset() {
	*x = RoleManagerDeletedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleManagerDeletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleManagerDeletedMessage) ProtoMessage() {}

func (x *RoleManagerDeletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleManagerDeletedMessage.ProtoReflect.Descriptor instead.
func (*RoleManagerDeletedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{32}
}

func (x *RoleManagerDeletedMessage) GetPayload() *RoleManagerDeleted {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/roleMemberCreated
type RoleMemberCreatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RoleMemberCreated `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RoleMemberCreatedMessage) Reset() {
	*x = RoleMemberCreatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMemberCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMemberCreatedMessage) ProtoMessage() {}

func (x *RoleMemberCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMemberCreatedMessage.ProtoReflect.Descriptor instead.
func (*RoleMemberCreatedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{33}
}

func (x *RoleMemberCreatedMessage) GetPayload() *RoleMemberCreated {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/components/messages/roleMemberDeleted
type RoleMemberDeletedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RoleMemberDeleted `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RoleMemberDeletedMessage) Reset() {
	*x = RoleMemberDeletedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMemberDeletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMemberDeletedMessage) ProtoMessage() {}

func (x *RoleMemberDeletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMemberDeletedMessage.ProtoReflect.Descriptor instead.
func (*RoleMemberDeletedMessage) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{34}
}

func (x *RoleMemberDeletedMessage) GetPayload() *RoleMemberDeleted {
	if x != nil {
		return x.Payload
	}
	return nil
}

// path: #/channels/role/publish/message
type RolePublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*RolePublish_Variant0
	//	*RolePublish_Variant1
	//	*RolePublish_Variant2
	Payload isRolePublish_Payload `protobuf_oneof:"payload"`
}

func (x *RolePublish) Reset() {
	*x = RolePublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePublish) ProtoMessage() {}

func (x *RolePublish) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePublish.ProtoReflect.Descriptor instead.
func (*RolePublish) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{35}
}

func (m *RolePublish) GetPayload() isRolePublish_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *RolePublish) GetVariant0() *RoleCreatedMessage {
	if x, ok := x.GetPayload().(*RolePublish_Variant0); ok {
		return x.Variant0
	}
	return nil
}

func (x *RolePublish) GetVariant1() *RoleDeletedMessage {
	if x, ok := x.GetPayload().(*RolePublish_Variant1); ok {
		return x.Variant1
	}
	return nil
}

func (x *RolePublish) GetVariant2() *RoleUpdatedMessage {
	if x, ok := x.GetPayload().(*RolePublish_Variant2); ok {
		return x.Variant2
	}
	return nil
}

type isRolePublish_Payload interface {
	isRolePublish_Payload()
}

type RolePublish_Variant0 struct {
	Variant0 *RoleCreatedMessage `protobuf:"bytes,1,opt,name=variant0,proto3,oneof"`
}

type RolePublish_Variant1 struct {
	Variant1 *RoleDeletedMessage `protobuf:"bytes,2,opt,name=variant1,proto3,oneof"`
}

type RolePublish_Variant2 struct {
	Variant2 *RoleUpdatedMessage `protobuf:"bytes,3,opt,name=variant2,proto3,oneof"`
}

func (*RolePublish_Variant0) isRolePublish_Payload() {}

func (*RolePublish_Variant1) isRolePublish_Payload() {}

func (*RolePublish_Variant2) isRolePublish_Payload() {}

// path: #/channels/rolePermissions/publish/message
type RolePermissionsPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*RolePermissionsPublish_Variant0
	//	*RolePermissionsPublish_Variant1
	//	*RolePermissionsPublish_Variant2
	Payload isRolePermissionsPublish_Payload `protobuf_oneof:"payload"`
}

func (x *RolePermissionsPublish) Reset() {
	*x = RolePermissionsPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePermissionsPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermissionsPublish) ProtoMessage() {}

func (x *RolePermissionsPublish) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermissionsPublish.ProtoReflect.Descriptor instead.
func (*RolePermissionsPublish) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{36}
}

func (m *RolePermissionsPublish) GetPayload() isRolePermissionsPublish_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *RolePermissionsPublish) GetVariant0() *RolePermissionCreatedMessage {
	if x, ok := x.GetPayload().(*RolePermissionsPublish_Variant0); ok {
		return x.Variant0
	}
	return nil
}

func (x *RolePermissionsPublish) GetVariant1() *RolePermissionDeletedMessage {
	if x, ok := x.GetPayload().(*RolePermissionsPublish_Variant1); ok {
		return x.Variant1
	}
	return nil
}

func (x *RolePermissionsPublish) GetVariant2() *RolePermissionUpdatedMessage {
	if x, ok := x.GetPayload().(*RolePermissionsPublish_Variant2); ok {
		return x.Variant2
	}
	return nil
}

type isRolePermissionsPublish_Payload interface {
	isRolePermissionsPublish_Payload()
}

type RolePermissionsPublish_Variant0 struct {
	Variant0 *RolePermissionCreatedMessage `protobuf:"bytes,1,opt,name=variant0,proto3,oneof"`
}

type RolePermissionsPublish_Variant1 struct {
	Variant1 *RolePermissionDeletedMessage `protobuf:"bytes,2,opt,name=variant1,proto3,oneof"`
}

type RolePermissionsPublish_Variant2 struct {
	Variant2 *RolePermissionUpdatedMessage `protobuf:"bytes,3,opt,name=variant2,proto3,oneof"`
}

func (*RolePermissionsPublish_Variant0) isRolePermissionsPublish_Payload() {}

func (*RolePermissionsPublish_Variant1) isRolePermissionsPublish_Payload() {}

func (*RolePermissionsPublish_Variant2) isRolePermissionsPublish_Payload() {}

// path: #/channels/roleManager/publish/message
type RoleManagerPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*RoleManagerPublish_Variant0
	//	*RoleManagerPublish_Variant1
	Payload isRoleManagerPublish_Payload `protobuf_oneof:"payload"`
}

func (x *RoleManagerPublish) Reset() {
	*x = RoleManagerPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleManagerPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleManagerPublish) ProtoMessage() {}

func (x *RoleManagerPublish) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleManagerPublish.ProtoReflect.Descriptor instead.
func (*RoleManagerPublish) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{37}
}

func (m *RoleManagerPublish) GetPayload() isRoleManagerPublish_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *RoleManagerPublish) GetVariant0() *RoleManagerCreatedMessage {
	if x, ok := x.GetPayload().(*RoleManagerPublish_Variant0); ok {
		return x.Variant0
	}
	return nil
}

func (x *RoleManagerPublish) GetVariant1() *RoleManagerDeletedMessage {
	if x, ok := x.GetPayload().(*RoleManagerPublish_Variant1); ok {
		return x.Variant1
	}
	return nil
}

type isRoleManagerPublish_Payload interface {
	isRoleManagerPublish_Payload()
}

type RoleManagerPublish_Variant0 struct {
	Variant0 *RoleManagerCreatedMessage `protobuf:"bytes,1,opt,name=variant0,proto3,oneof"`
}

type RoleManagerPublish_Variant1 struct {
	Variant1 *RoleManagerDeletedMessage `protobuf:"bytes,2,opt,name=variant1,proto3,oneof"`
}

func (*RoleManagerPublish_Variant0) isRoleManagerPublish_Payload() {}

func (*RoleManagerPublish_Variant1) isRoleManagerPublish_Payload() {}

// path: #/channels/roleMember/publish/message
type RoleMemberPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*RoleMemberPublish_Variant0
	//	*RoleMemberPublish_Variant1
	Payload isRoleMemberPublish_Payload `protobuf_oneof:"payload"`
}

func (x *RoleMemberPublish) Reset() {
	*x = RoleMemberPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMemberPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMemberPublish) ProtoMessage() {}

func (x *RoleMemberPublish) ProtoReflect() protoreflect.Message {
	mi := &file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMemberPublish.ProtoReflect.Descriptor instead.
func (*RoleMemberPublish) Descriptor() ([]byte, []int) {
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP(), []int{38}
}

func (m *RoleMemberPublish) GetPayload() isRoleMemberPublish_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *RoleMemberPublish) GetVariant0() *RoleMemberCreatedMessage {
	if x, ok := x.GetPayload().(*RoleMemberPublish_Variant0); ok {
		return x.Variant0
	}
	return nil
}

func (x *RoleMemberPublish) GetVariant1() *RoleMemberDeletedMessage {
	if x, ok := x.GetPayload().(*RoleMemberPublish_Variant1); ok {
		return x.Variant1
	}
	return nil
}

type isRoleMemberPublish_Payload interface {
	isRoleMemberPublish_Payload()
}

type RoleMemberPublish_Variant0 struct {
	Variant0 *RoleMemberCreatedMessage `protobuf:"bytes,1,opt,name=variant0,proto3,oneof"`
}

type RoleMemberPublish_Variant1 struct {
	Variant1 *RoleMemberDeletedMessage `protobuf:"bytes,2,opt,name=variant1,proto3,oneof"`
}

func (*RoleMemberPublish_Variant0) isRoleMemberPublish_Payload() {}

func (*RoleMemberPublish_Variant1) isRoleMemberPublish_Payload() {}

var File_accelbyte_asyncapi_iam_rbac_v1_rbac_proto protoreflect.FileDescriptor

var file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDesc = []byte{
	0x0a, 0x29, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2d, 0x61, 0x73, 0x79, 0x6e,
	0x63, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x97, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x43, 0x72, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x70, 0x0a, 0x04, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x73, 0x57,
	0x69, 0x6c, 0x64, 0x63, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x73, 0x57, 0x69, 0x6c, 0x64, 0x63, 0x61, 0x72, 0x64, 0x22, 0x65, 0x0a,
	0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x10, 0x41, 0x6e,
	0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x31, 0x12, 0x2f,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0xe0, 0x02, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x41, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f,
	0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x31, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x43, 0x0a, 0x10, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x32, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xe0, 0x02, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x32, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x10, 0x41, 0x6e,
	0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x33, 0x12, 0x2f,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0xe0, 0x02, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x41, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f,
	0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x33, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x34, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62,
	0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xea,
	0x02, 0x0a, 0x15, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x34, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x10,
	0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x35,
	0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72,
	0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x44, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xea, 0x02, 0x0a, 0x15, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x41, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x35, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f,
	0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x36, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xea, 0x02, 0x0a, 0x15, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x36, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x89, 0x01,
	0x0a, 0x10, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x37, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x0b, 0x72, 0x6f,
	0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x22, 0xe7, 0x02, 0x0a, 0x12, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x41, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x37, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75,
	0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x38, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x72, 0x6f, 0x6c,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72,
	0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x52, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x22,
	0xe7, 0x02, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x38,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x10, 0x41, 0x6e,
	0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x39, 0x12, 0x2f,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x41, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0xe6, 0x02, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x39, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x11,
	0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x31,
	0x30, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xe7, 0x02, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x31, 0x30, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x52, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x52, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x52, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72,
	0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x66, 0x0a, 0x1c, 0x52,
	0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x66, 0x0a, 0x1c, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x66, 0x0a, 0x1c, 0x52,
	0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x60, 0x0a, 0x19, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x43, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x60, 0x0a, 0x19, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x5e, 0x0a, 0x18, 0x52, 0x6f, 0x6c, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x5e, 0x0a, 0x18, 0x52, 0x6f, 0x6c, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xf3, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x47, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30,
	0x12, 0x47, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x12, 0x47, 0x0a, 0x08, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x32, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x9c, 0x02,
	0x0a, 0x16, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x51, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x12, 0x51, 0x0a, 0x08, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62,
	0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x12, 0x51,
	0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x32, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xbf, 0x01, 0x0a,
	0x12, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x12, 0x4e, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x30, 0x12, 0x4e, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x31, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xbc,
	0x01, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x12, 0x4d, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x30,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x30, 0x12, 0x4d, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74,
	0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x31, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0x61, 0x0a,
	0x16, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x32, 0x61, 0x0a, 0x16, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x4f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x32, 0x61, 0x0a, 0x16, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a,
	0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x80, 0x01, 0x0a, 0x2b, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x80, 0x01, 0x0a, 0x2b, 0x52, 0x6f,
	0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x09, 0x4f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x80, 0x01, 0x0a,
	0x2b, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x09,
	0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32,
	0x76, 0x0a, 0x24, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x76, 0x0a, 0x24, 0x52, 0x6f, 0x6c, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4e, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32,
	0x73, 0x0a, 0x22, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0x73, 0x0a, 0x22, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x4f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62,
	0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x47, 0x0a, 0x16, 0x6e, 0x65, 0x74,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x72,
	0x62, 0x61, 0x63, 0x50, 0x01, 0x5a, 0x16, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65,
	0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x72, 0x62, 0x61, 0x63, 0xaa, 0x02, 0x12,
	0x41, 0x63, 0x63, 0x65, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x2e, 0x49, 0x41, 0x4d, 0x2e, 0x52, 0x62,
	0x61, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescOnce sync.Once
	file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescData = file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDesc
)

func file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescGZIP() []byte {
	file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescOnce.Do(func() {
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescData = protoimpl.X.CompressGZIP(file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescData)
	})
	return file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDescData
}

var file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_goTypes = []interface{}{
	(*Event)(nil),                        // 0: accelbyte.iam.rbac.v1.Event
	(*Permissions)(nil),                  // 1: accelbyte.iam.rbac.v1.Permissions
	(*Role)(nil),                         // 2: accelbyte.iam.rbac.v1.Role
	(*RoleManager)(nil),                  // 3: accelbyte.iam.rbac.v1.RoleManager
	(*RoleMember)(nil),                   // 4: accelbyte.iam.rbac.v1.RoleMember
	(*AnonymousSchema1)(nil),             // 5: accelbyte.iam.rbac.v1.AnonymousSchema1
	(*RoleCreated)(nil),                  // 6: accelbyte.iam.rbac.v1.RoleCreated
	(*AnonymousSchema2)(nil),             // 7: accelbyte.iam.rbac.v1.AnonymousSchema2
	(*RoleDeleted)(nil),                  // 8: accelbyte.iam.rbac.v1.RoleDeleted
	(*AnonymousSchema3)(nil),             // 9: accelbyte.iam.rbac.v1.AnonymousSchema3
	(*RoleUpdated)(nil),                  // 10: accelbyte.iam.rbac.v1.RoleUpdated
	(*AnonymousSchema4)(nil),             // 11: accelbyte.iam.rbac.v1.AnonymousSchema4
	(*RolePermissionCreated)(nil),        // 12: accelbyte.iam.rbac.v1.RolePermissionCreated
	(*AnonymousSchema5)(nil),             // 13: accelbyte.iam.rbac.v1.AnonymousSchema5
	(*RolePermissionDeleted)(nil),        // 14: accelbyte.iam.rbac.v1.RolePermissionDeleted
	(*AnonymousSchema6)(nil),             // 15: accelbyte.iam.rbac.v1.AnonymousSchema6
	(*RolePermissionUpdated)(nil),        // 16: accelbyte.iam.rbac.v1.RolePermissionUpdated
	(*AnonymousSchema7)(nil),             // 17: accelbyte.iam.rbac.v1.AnonymousSchema7
	(*RoleManagerCreated)(nil),           // 18: accelbyte.iam.rbac.v1.RoleManagerCreated
	(*AnonymousSchema8)(nil),             // 19: accelbyte.iam.rbac.v1.AnonymousSchema8
	(*RoleManagerDeleted)(nil),           // 20: accelbyte.iam.rbac.v1.RoleManagerDeleted
	(*AnonymousSchema9)(nil),             // 21: accelbyte.iam.rbac.v1.AnonymousSchema9
	(*RoleMemberCreated)(nil),            // 22: accelbyte.iam.rbac.v1.RoleMemberCreated
	(*AnonymousSchema10)(nil),            // 23: accelbyte.iam.rbac.v1.AnonymousSchema10
	(*RoleMemberDeleted)(nil),            // 24: accelbyte.iam.rbac.v1.RoleMemberDeleted
	(*RoleCreatedMessage)(nil),           // 25: accelbyte.iam.rbac.v1.RoleCreatedMessage
	(*RoleDeletedMessage)(nil),           // 26: accelbyte.iam.rbac.v1.RoleDeletedMessage
	(*RoleUpdatedMessage)(nil),           // 27: accelbyte.iam.rbac.v1.RoleUpdatedMessage
	(*RolePermissionCreatedMessage)(nil), // 28: accelbyte.iam.rbac.v1.RolePermissionCreatedMessage
	(*RolePermissionDeletedMessage)(nil), // 29: accelbyte.iam.rbac.v1.RolePermissionDeletedMessage
	(*RolePermissionUpdatedMessage)(nil), // 30: accelbyte.iam.rbac.v1.RolePermissionUpdatedMessage
	(*RoleManagerCreatedMessage)(nil),    // 31: accelbyte.iam.rbac.v1.RoleManagerCreatedMessage
	(*RoleManagerDeletedMessage)(nil),    // 32: accelbyte.iam.rbac.v1.RoleManagerDeletedMessage
	(*RoleMemberCreatedMessage)(nil),     // 33: accelbyte.iam.rbac.v1.RoleMemberCreatedMessage
	(*RoleMemberDeletedMessage)(nil),     // 34: accelbyte.iam.rbac.v1.RoleMemberDeletedMessage
	(*RolePublish)(nil),                  // 35: accelbyte.iam.rbac.v1.RolePublish
	(*RolePermissionsPublish)(nil),       // 36: accelbyte.iam.rbac.v1.RolePermissionsPublish
	(*RoleManagerPublish)(nil),           // 37: accelbyte.iam.rbac.v1.RoleManagerPublish
	(*RoleMemberPublish)(nil),            // 38: accelbyte.iam.rbac.v1.RoleMemberPublish
	(*emptypb.Empty)(nil),                // 39: google.protobuf.Empty
}
var file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_depIdxs = []int32{
	2,  // 0: accelbyte.iam.rbac.v1.AnonymousSchema1.role:type_name -> accelbyte.iam.rbac.v1.Role
	5,  // 1: accelbyte.iam.rbac.v1.RoleCreated.payload:type_name -> accelbyte.iam.rbac.v1.AnonymousSchema1
	2,  // 2: accelbyte.iam.rbac.v1.AnonymousSchema2.role:type_name -> accelbyte.iam.rbac.v1.Role
	7,  // 3: accelbyte.iam.rbac.v1.RoleDeleted.payload:type_name -> accelbyte.iam.rbac.v1.AnonymousSchema2
	2,  // 4: accelbyte.iam.rbac.v1.AnonymousSchema3.role:type_name -> accelbyte.iam.rbac.v1.Role
	9,  // 5: accelbyte.iam.rbac.v1.RoleUpdated.payload:type_name -> accelbyte.iam.rbac.v1.AnonymousSchema3
	2,  // 6: accelbyte.iam.rbac.v1.AnonymousSchema4.role:type_name -> accelbyte.iam.rbac.v1.Role
	1,  // 7: accelbyte.iam.rbac.v1.AnonymousSchema4.permissions:type_name -> accelbyte.iam.rbac.v1.Permissions
	11, // 8: accelbyte.iam.rbac.v1.RolePermissionCreated.payload:type_name -> accelbyte.iam.rbac.v1.AnonymousSchema4
	2,  // 9: accelbyte.iam.rbac.v1.AnonymousSchema5.role:type_name -> accelbyte.iam.rbac.v1.Role
	1,  // 10: accelbyte.iam.rbac.v1.AnonymousSchema5.permissions:type_name -> accelbyte.iam.rbac.v1.Permissions
	13, // 11: accelbyte.iam.rbac.v1.RolePermissionDeleted.payload:type_name -> accelbyte.iam.rbac.v1.AnonymousSchema5
	2,  // 12: accelbyte.iam.rbac.v1.AnonymousSchema6.role:type_name -> accelbyte.iam.rbac.v1.Role
	1,  // 13: accelbyte.iam.rbac.v1.AnonymousSchema6.permissions:type_name -> accelbyte.iam.rbac.v1.Permissions
	15, // 14: accelbyte.iam.rbac.v1.RolePermissionUpdated.payload:type_name -> accelbyte.iam.rbac.v1.AnonymousSchema6
	2,  // 15: accelbyte.iam.rbac.v1.AnonymousSchema7.role:type_name -> accelbyte.iam.rbac.v1.Role
	3,  // 16: accelbyte.iam.rbac.v1.AnonymousSchema7.roleManager:type_name -> accelbyte.iam.rbac.v1.RoleManager
	17, // 17: accelbyte.iam.rbac.v1.RoleManagerCreated.payload:type_name -> accelbyte.iam.rbac.v1.AnonymousSchema7
	2,  // 18: accelbyte.iam.rbac.v1.AnonymousSchema8.role:type_name -> accelbyte.iam.rbac.v1.Role
	3,  // 19: accelbyte.iam.rbac.v1.AnonymousSchema8.roleManager:type_name -> accelbyte.iam.rbac.v1.RoleManager
	19, // 20: accelbyte.iam.rbac.v1.RoleManagerDeleted.payload:type_name -> accelbyte.iam.rbac.v1.AnonymousSchema8
	2,  // 21: accelbyte.iam.rbac.v1.AnonymousSchema9.role:type_name -> accelbyte.iam.rbac.v1.Role
	4,  // 22: accelbyte.iam.rbac.v1.AnonymousSchema9.roleMember:type_name -> accelbyte.iam.rbac.v1.RoleMember
	21, // 23: accelbyte.iam.rbac.v1.RoleMemberCreated.payload:type_name -> accelbyte.iam.rbac.v1.AnonymousSchema9
	2,  // 24: accelbyte.iam.rbac.v1.AnonymousSchema10.role:type_name -> accelbyte.iam.rbac.v1.Role
	4,  // 25: accelbyte.iam.rbac.v1.AnonymousSchema10.roleMember:type_name -> accelbyte.iam.rbac.v1.RoleMember
	23, // 26: accelbyte.iam.rbac.v1.RoleMemberDeleted.payload:type_name -> accelbyte.iam.rbac.v1.AnonymousSchema10
	6,  // 27: accelbyte.iam.rbac.v1.RoleCreatedMessage.payload:type_name -> accelbyte.iam.rbac.v1.RoleCreated
	8,  // 28: accelbyte.iam.rbac.v1.RoleDeletedMessage.payload:type_name -> accelbyte.iam.rbac.v1.RoleDeleted
	10, // 29: accelbyte.iam.rbac.v1.RoleUpdatedMessage.payload:type_name -> accelbyte.iam.rbac.v1.RoleUpdated
	12, // 30: accelbyte.iam.rbac.v1.RolePermissionCreatedMessage.payload:type_name -> accelbyte.iam.rbac.v1.RolePermissionCreated
	14, // 31: accelbyte.iam.rbac.v1.RolePermissionDeletedMessage.payload:type_name -> accelbyte.iam.rbac.v1.RolePermissionDeleted
	16, // 32: accelbyte.iam.rbac.v1.RolePermissionUpdatedMessage.payload:type_name -> accelbyte.iam.rbac.v1.RolePermissionUpdated
	18, // 33: accelbyte.iam.rbac.v1.RoleManagerCreatedMessage.payload:type_name -> accelbyte.iam.rbac.v1.RoleManagerCreated
	20, // 34: accelbyte.iam.rbac.v1.RoleManagerDeletedMessage.payload:type_name -> accelbyte.iam.rbac.v1.RoleManagerDeleted
	22, // 35: accelbyte.iam.rbac.v1.RoleMemberCreatedMessage.payload:type_name -> accelbyte.iam.rbac.v1.RoleMemberCreated
	24, // 36: accelbyte.iam.rbac.v1.RoleMemberDeletedMessage.payload:type_name -> accelbyte.iam.rbac.v1.RoleMemberDeleted
	25, // 37: accelbyte.iam.rbac.v1.RolePublish.variant0:type_name -> accelbyte.iam.rbac.v1.RoleCreatedMessage
	26, // 38: accelbyte.iam.rbac.v1.RolePublish.variant1:type_name -> accelbyte.iam.rbac.v1.RoleDeletedMessage
	27, // 39: accelbyte.iam.rbac.v1.RolePublish.variant2:type_name -> accelbyte.iam.rbac.v1.RoleUpdatedMessage
	28, // 40: accelbyte.iam.rbac.v1.RolePermissionsPublish.variant0:type_name -> accelbyte.iam.rbac.v1.RolePermissionCreatedMessage
	29, // 41: accelbyte.iam.rbac.v1.RolePermissionsPublish.variant1:type_name -> accelbyte.iam.rbac.v1.RolePermissionDeletedMessage
	30, // 42: accelbyte.iam.rbac.v1.RolePermissionsPublish.variant2:type_name -> accelbyte.iam.rbac.v1.RolePermissionUpdatedMessage
	31, // 43: accelbyte.iam.rbac.v1.RoleManagerPublish.variant0:type_name -> accelbyte.iam.rbac.v1.RoleManagerCreatedMessage
	32, // 44: accelbyte.iam.rbac.v1.RoleManagerPublish.variant1:type_name -> accelbyte.iam.rbac.v1.RoleManagerDeletedMessage
	33, // 45: accelbyte.iam.rbac.v1.RoleMemberPublish.variant0:type_name -> accelbyte.iam.rbac.v1.RoleMemberCreatedMessage
	34, // 46: accelbyte.iam.rbac.v1.RoleMemberPublish.variant1:type_name -> accelbyte.iam.rbac.v1.RoleMemberDeletedMessage
	6,  // 47: accelbyte.iam.rbac.v1.RoleRoleCreatedService.OnMessage:input_type -> accelbyte.iam.rbac.v1.RoleCreated
	8,  // 48: accelbyte.iam.rbac.v1.RoleRoleDeletedService.OnMessage:input_type -> accelbyte.iam.rbac.v1.RoleDeleted
	10, // 49: accelbyte.iam.rbac.v1.RoleRoleUpdatedService.OnMessage:input_type -> accelbyte.iam.rbac.v1.RoleUpdated
	12, // 50: accelbyte.iam.rbac.v1.RolePermissionsRolePermissionCreatedService.OnMessage:input_type -> accelbyte.iam.rbac.v1.RolePermissionCreated
	14, // 51: accelbyte.iam.rbac.v1.RolePermissionsRolePermissionDeletedService.OnMessage:input_type -> accelbyte.iam.rbac.v1.RolePermissionDeleted
	16, // 52: accelbyte.iam.rbac.v1.RolePermissionsRolePermissionUpdatedService.OnMessage:input_type -> accelbyte.iam.rbac.v1.RolePermissionUpdated
	18, // 53: accelbyte.iam.rbac.v1.RoleManagerRoleManagerCreatedService.OnMessage:input_type -> accelbyte.iam.rbac.v1.RoleManagerCreated
	20, // 54: accelbyte.iam.rbac.v1.RoleManagerRoleManagerDeletedService.OnMessage:input_type -> accelbyte.iam.rbac.v1.RoleManagerDeleted
	22, // 55: accelbyte.iam.rbac.v1.RoleMemberRoleMemberCreatedService.OnMessage:input_type -> accelbyte.iam.rbac.v1.RoleMemberCreated
	24, // 56: accelbyte.iam.rbac.v1.RoleMemberRoleMemberDeletedService.OnMessage:input_type -> accelbyte.iam.rbac.v1.RoleMemberDeleted
	39, // 57: accelbyte.iam.rbac.v1.RoleRoleCreatedService.OnMessage:output_type -> google.protobuf.Empty
	39, // 58: accelbyte.iam.rbac.v1.RoleRoleDeletedService.OnMessage:output_type -> google.protobuf.Empty
	39, // 59: accelbyte.iam.rbac.v1.RoleRoleUpdatedService.OnMessage:output_type -> google.protobuf.Empty
	39, // 60: accelbyte.iam.rbac.v1.RolePermissionsRolePermissionCreatedService.OnMessage:output_type -> google.protobuf.Empty
	39, // 61: accelbyte.iam.rbac.v1.RolePermissionsRolePermissionDeletedService.OnMessage:output_type -> google.protobuf.Empty
	39, // 62: accelbyte.iam.rbac.v1.RolePermissionsRolePermissionUpdatedService.OnMessage:output_type -> google.protobuf.Empty
	39, // 63: accelbyte.iam.rbac.v1.RoleManagerRoleManagerCreatedService.OnMessage:output_type -> google.protobuf.Empty
	39, // 64: accelbyte.iam.rbac.v1.RoleManagerRoleManagerDeletedService.OnMessage:output_type -> google.protobuf.Empty
	39, // 65: accelbyte.iam.rbac.v1.RoleMemberRoleMemberCreatedService.OnMessage:output_type -> google.protobuf.Empty
	39, // 66: accelbyte.iam.rbac.v1.RoleMemberRoleMemberDeletedService.OnMessage:output_type -> google.protobuf.Empty
	57, // [57:67] is the sub-list for method output_type
	47, // [47:57] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_init() }
func file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_init() {
	if File_accelbyte_asyncapi_iam_rbac_v1_rbac_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePermissionCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePermissionDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePermissionUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema7); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleManagerCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleManagerDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema9); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMemberCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymousSchema10); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMemberDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDeletedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUpdatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePermissionCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePermissionDeletedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePermissionUpdatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleManagerCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleManagerDeletedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMemberCreatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMemberDeletedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePermissionsPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleManagerPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMemberPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*RolePublish_Variant0)(nil),
		(*RolePublish_Variant1)(nil),
		(*RolePublish_Variant2)(nil),
	}
	file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*RolePermissionsPublish_Variant0)(nil),
		(*RolePermissionsPublish_Variant1)(nil),
		(*RolePermissionsPublish_Variant2)(nil),
	}
	file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*RoleManagerPublish_Variant0)(nil),
		(*RoleManagerPublish_Variant1)(nil),
	}
	file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*RoleMemberPublish_Variant0)(nil),
		(*RoleMemberPublish_Variant1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   10,
		},
		GoTypes:           file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_goTypes,
		DependencyIndexes: file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_depIdxs,
		MessageInfos:      file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_msgTypes,
	}.Build()
	File_accelbyte_asyncapi_iam_rbac_v1_rbac_proto = out.File
	file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_rawDesc = nil
	file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_goTypes = nil
	file_accelbyte_asyncapi_iam_rbac_v1_rbac_proto_depIdxs = nil
}
